Metadata-Version: 2.1
Name: digitaltwin-on-fhir
Version: 1.1.0
Summary: An adapter for transfer DigitalTWIN Clinic Description to FHIR Server
Keywords: fhir,DigitalTWIN,SPARC,Clinic Description
Author-email: Linkun Gao <gaolinkun123@gmail.com>
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: fhirpy==2.0.5
Requires-Dist: pytest>=6.2.4 ; extra == "test"
Project-URL: Documentation, https://github.com/Copper3D-brids/digitalTwinOnFHIR#readme
Project-URL: Homepage, https://github.com/Copper3D-brids/digitalTwinOnFHIR
Project-URL: Source, https://github.com/Copper3D-brids/digitalTwinOnFHIR.git
Provides-Extra: test

# digitalTwinOnFHIR

## Usage

- Setup and connect to FHIR server

```python
from digitaltwin_on_fhir.core import Adapter

adapter = Adapter("http://localhost:8080/fhir/")
```

### Load data to FHIR server

#### Primary measurements

- Load FHIR bundle
```python
 await adapter.loader().load_fhir_bundle('./dataset/dataset-fhir-bundles')
```
- Load DigitalTWIN Clinical Description (primary measurements)
```python
measurements = adapter.loader().load_sparc_dataset_primary_measurements()
with open('./dataset/measurements.json', 'r') as file:
    data = json.load(file)

await measurements.add_measurements_description(data)
        .generate_measurements_via_cda_descriptions()
        .generate_resources()
```
- Add Practitioner (researcher) to FHIR server

```python
from digitaltwin_on_fhir.core.resource import Identifier, Code, HumanName, Practitioner

await measurements.add_practitioner(researcher=Practitioner(
    active=True,
    identifier=[
        Identifier(use=Code("official"), system="sparc.org",
                   value='sparc-d557ac68-f365-0718-c945-8722ec')],
    name=[HumanName(use="usual", text="Xiaoming Li", family="Li", given=["Xiaoming"])],
    gender="male"
))
```

#### Workflow

### Search

## DigitalTWIN on FHIR Diagram
![DigitalTWIN on FHIR](https://copper3d-brids.github.io/ehr-docs/fhir/03-roadmap/v1.0.1.png)
