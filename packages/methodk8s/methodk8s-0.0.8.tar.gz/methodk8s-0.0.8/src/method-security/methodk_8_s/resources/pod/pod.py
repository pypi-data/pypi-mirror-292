# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..common.namespace_info import NamespaceInfo
from .container import Container
from .status import Status


class Pod(UniversalBaseModel):
    uid: str
    name: str
    namespace: NamespaceInfo
    version: typing.Optional[str] = None
    node: str
    status: typing.Optional[Status] = None
    containers: typing.List[Container]
    labels: typing.Optional[typing.Dict[str, str]] = None
    annotations: typing.Optional[typing.Dict[str, str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
