[project]
name = "markdown-mermaidjs"
version = "1.0.0"
authors = [{ name = "Wei Lee", email = "weilee.rx@gmail.com" }]
description = "Python-Markdown extension to add Mermaid graph"
license = "GPL-3.0-only"
readme = "docs/README.md"
requires-python = ">=3.8"
dependencies = ["markdown>=3.7"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Topic :: Text Processing :: Filters",
    "Topic :: Text Processing :: Markup :: HTML",
]

[project.urls]
Source = "https://github.com/Lee-W/markdown-mermaidjs"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.0"
tag_format = "$version"
version_files = ["pyproject.toml:version"]


[tool.uv]
dev-dependencies = [
    # task management
    "invoke>=2.2.0",
    # test
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "pytest-regressions>=2.5.0",
    "coverage[toml]>=7.6.1",
    # style
    "ruff>=0.6.2",
    "mypy>=1.11.2",
    "types-markdown>=3.7.0.20240822",
    # security
    "bandit>=1.7.9",
    "pip-audit>=2.7.3",
    # git
    "commitizen>=3.29.0",
    "pre-commit>=3.5.0",
    # documentation
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.33",
]


[tool.ruff]
line-length = 88

[tool.ruff.lint]
ignore = ["E501", "D1", "D415"]

# [tool.ruff.lint.isort]
# known-first-party = ["tests"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.mypy]
files = ["markdown_mermaidjs", "tests"]
ignore_missing_imports = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["markdown-mermaidjs.*"]
# Ensure full coverage
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# Restrict dynamic typing
disallow_any_generics = true
disallow_subclassing_any = true
warn_return_any = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_untyped_decorators = false


[tool.pytest.ini_options]
minversion = "8.0.0"
testpaths = "tests"
addopts = "--strict-markers"
norecursedirs = [
    ".*",
    "build",
    "dist",
    "CVS",
    "_darcs",
    "{arch}",
    "*.egg",
    "venv",
    "env",
    "virtualenv",
]


[tool.coverage]
[tool.coverage.report]
show_missing = true
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',

    # Don't complain about missing debug-only code:
    'def __repr__',
    'if self\.debug',

    # Don't complain if tests don't hit defensive assertion code:
    'raise AssertionError',
    'raise NotImplementedError',

    # Don't complain if non-runnable code isn't run:
    'if 0:',
    'if __name__ == .__main__.:',
]
omit = ['env/*', 'venv/*', '*/virtualenv/*', '*/virtualenvs/*', '*/tests/*']
