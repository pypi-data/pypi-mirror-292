# Guide (user-friendly):
# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/

# Specification (technical, formal):
# https://packaging.python.org/en/latest/specifications/pyproject-toml/


# Choosing a build backend:
# https://packaging.python.org/en/latest/tutorials/packaging-projects/#choosing-a-build-backend
[build-system]
# A list of packages that are needed to build your package:
requires = ["setuptools>=64", "setuptools_scm>=8"]  # REQUIRED if [build-system] table is used
# The name of the Python object that frontends will use to perform the build:
build-backend = "setuptools.build_meta"  # If not defined, then legacy behavior can happen.


[project]
# This is the name of your project. The first time you publish this
# package, this name will be registered for you. It will determine how
# users can install this project, e.g.:
#
# $ pip install sampleproject
#
# And where it will live on PyPI: https://pypi.org/project/sampleproject/
#
# There are some restrictions on what makes a valid project name
# specification here:
# https://packaging.python.org/specifications/core-metadata/#name
name = "simpler-core"  # REQUIRED, is the only field that cannot be marked as dynamic.

# Versions should comply with PEP 440:
# https://www.python.org/dev/peps/pep-0440/
#
# For a discussion on single-sourcing the version, see
# https://packaging.python.org/guides/single-sourcing-package-version/
# version = "0.1.0"  # REQUIRED, although can be dynamic
dynamic = ["version"]

# This is a one-line description or tagline of what your project does. This
# corresponds to the "Summary" metadata field:
# https://packaging.python.org/specifications/core-metadata/#summary
description = "Core library functions for adding new simpler conversion modules"

# This is an optional longer description of your project that represents
# the body of text which users will see when they visit PyPI.
#
# Often, this is the same as your README, so you can just read it in from
# that file directly.
#
# This field corresponds to the "Description" metadata field:
# https://packaging.python.org/specifications/core-metadata/#description-optional
readme = "README.md"

# Specify which Python versions you support. In contrast to the
# 'Programming Language' classifiers in this file, 'pip install' will check this
# and refuse to install the project if the version does not match. See
# https://packaging.python.org/guides/distributing-packages-using-setuptools/#python-requires
requires-python = ">=3.12"

# This field adds keywords for your project which will appear on the
# project page. What does your project relate to?
#
# Note that this is a list of additional keywords, separated
# by commas, to be used to assist searching for the distribution in a
# larger catalog.
keywords = ["entity-relationship-model", "ER", "extraction", "model", "simpler"]

# This should be your name or the name of the organization who originally
# authored the project, and a valid email address corresponding to the name
# listed.
authors = [
  {name = "Philipp Schmurr", email = "philipp.schmurr@kit.edu" }
]

# This should be your name or the names of the organization who currently
# maintains the project, and a valid email address corresponding to the name
# listed.
maintainers = [
  {name = "Philipp Schmurr", email = "philipp.schmurr@kit.edu" }
]

# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  # "Topic :: Software Development :: Build Tools",

  # Pick your license as you wish
  "License :: OSI Approved :: MIT License",

  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
]

dependencies = [
  "pydot~=2.0.0",
  "simpler_model==0.2.2",
  "PyYAML~=6.0.1",
  "networkx~=3.3",
  "owlready2~=0.46"
#  "owlready2 @ git+https://bitbucket.org/jibalamy/owlready2@888cb034afc4c0078191711be8d54e436a4162ba"  # we need development fix for now
]

[project.optional-dependencies]
test = ["pytest", "pytest-mock", "coverage"]

[project.urls]
"Homepage" = "https://github.com/Cpprentice/FAIRlead-model-extraction"
"Bug Reports" = "https://github.com/Cpprentice/FAIRlead-model-extraction/issues"
"Source" = "https://github.com/Cpprentice/FAIRlead-model-extraction"

[tool.setuptools_scm]
# tag_regex = "^core-(?P<version>\\d+(?:\\.\\d+){0,2}[^\\+]*)(?:\\+.*)?$"
root = ".."
git_describe_command = "git describe --long --match core-*"
