[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "extended-data-types"
dynamic = ["version"]
description = "Extended functionality for data types"
requires-python = ">=3.8"
license = "MIT"
readme = "README.md"
keywords = ["python3"]
authors = [{ name = "Jon Bogaty", email = "jon@jonbogaty.com" }]
maintainers = [{ name = "Jon Bogaty", email = "jon@jonbogaty.com" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
dependencies = [
    "requests>=2.32.3",
    "python-hcl2>=4.3.4",
    "validators>=0.33.0",
    "inflection>=0.5.1",
    "sortedcontainers>=2.4.0",
    "wrapt>=1.16.0",
    "pyyaml>=6.0.1",
    "future>=1.0.0",
]

[project.urls]
Documentation = "https://github.com/jbcom/extended-data-types#readme"
Issues = "https://github.com/jbcom/extended-data-types/issues"
Source = "https://github.com/jbcom/extended-data-types"

[project.optional-dependencies]
tests = [
    "pytest>=8.2.2",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.1",
    "coverage[toml]>=7.6.0",
]

typing = [
    "mypy>=1.0.0",
    "types-PyYAML>=6.0.12.20240724",
    "sortedcontainers-stubs>=2.4.2",
]

docs = [
    "sphinx>=7.2,<7.5",
    "sphinxawesome-theme>=5.2.0",
    "sphinx-autodoc2>=0.5.0",
    "myst-parser>=3.0.1",
    "docutils>=0.17",
]

[tool.hatch.version]
path = "src/extended_data_types/__init__.py"

[tool.hatch.envs.default]
type = "virtual"
path = ".venv"

[tool.pytest.ini_options]
addopts = ["-ra", "--strict-markers", "--strict-config"]
testpaths = "tests"
xfail_strict = true
filterwarnings = []

[tool.coverage.run]
branch = true
parallel = true
source = ["extended_data_types"]

[tool.coverage.paths]
source = ["src", ".tox/py*/**/site-packages"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.codespell]
skip = '*.js,*.css,*.inv,*.lock,*.toml,*.json,*.yml,*.yaml'
count = true

[tool.interrogate]
omit-covered-files = true
verbose = 2
fail-under = 100
whitelist-regex = ["test_.*"]

[tool.black]
line-length = 88

[tool.ruff]
src = ["extended_data_types", "tests"]
exclude = ["docs"]

[tool.ruff.lint]
select = ["ALL"]
ignore = ["ANN", "COM", "E501", "FBT"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN", "D", "E", "S"]

[tool.ruff.lint.isort]
lines-between-types = 1
lines-after-imports = 2

[tool.mypy]
strict = true
pretty = true

[[tool.mypy.overrides]]
module = "wrapt.*,"
ignore_missing_imports = true

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.1"
version_files = [
    "src/extended_data_types/__init__.py:__version__",
    "docs/conf.py:version",
]
tag_format = "$version"
annotated_tag = true
update_changelog_on_bump = true
bump_message = "New release: $current_version â†’ $new_version [skip actions]"
template = "docs/templates/CHANGELOG.md.j2"
