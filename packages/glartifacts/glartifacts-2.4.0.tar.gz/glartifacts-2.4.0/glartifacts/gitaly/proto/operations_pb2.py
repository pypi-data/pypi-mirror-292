# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: operations.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import errors_pb2 as errors__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from . import lint_pb2 as lint__pb2
from . import shared_pb2 as shared__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='operations.proto',
  package='gitaly',
  syntax='proto3',
  serialized_pb=_b('\n\x10operations.proto\x12\x06gitaly\x1a\x0c\x65rrors.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\nlint.proto\x1a\x0cshared.proto\"\x8d\x01\n\x17UserCreateBranchRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x13\n\x0b\x62ranch_name\x18\x02 \x01(\x0c\x12\x1a\n\x04user\x18\x03 \x01(\x0b\x32\x0c.gitaly.User\x12\x13\n\x0bstart_point\x18\x04 \x01(\x0c\"U\n\x18UserCreateBranchResponse\x12\x1e\n\x06\x62ranch\x18\x01 \x01(\x0b\x32\x0e.gitaly.Branch\x12\x19\n\x11pre_receive_error\x18\x02 \x01(\t\"\x98\x01\n\x17UserUpdateBranchRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x13\n\x0b\x62ranch_name\x18\x02 \x01(\x0c\x12\x1a\n\x04user\x18\x03 \x01(\x0b\x32\x0c.gitaly.User\x12\x0e\n\x06newrev\x18\x04 \x01(\x0c\x12\x0e\n\x06oldrev\x18\x05 \x01(\x0c\"5\n\x18UserUpdateBranchResponse\x12\x19\n\x11pre_receive_error\x18\x01 \x01(\t\"x\n\x17UserDeleteBranchRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x13\n\x0b\x62ranch_name\x18\x02 \x01(\x0c\x12\x1a\n\x04user\x18\x03 \x01(\x0b\x32\x0c.gitaly.User\"9\n\x18UserDeleteBranchResponse\x12\x1d\n\x11pre_receive_error\x18\x01 \x01(\tB\x02\x18\x01\"\xbc\x01\n\x15UserDeleteBranchError\x12\x30\n\x0c\x61\x63\x63\x65ss_check\x18\x01 \x01(\x0b\x32\x18.gitaly.AccessCheckErrorH\x00\x12\x38\n\x10reference_update\x18\x02 \x01(\x0b\x32\x1c.gitaly.ReferenceUpdateErrorH\x00\x12.\n\x0b\x63ustom_hook\x18\x03 \x01(\x0b\x32\x17.gitaly.CustomHookErrorH\x00\x42\x07\n\x05\x65rror\"r\n\x14UserDeleteTagRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08tag_name\x18\x02 \x01(\x0c\x12\x1a\n\x04user\x18\x03 \x01(\x0b\x32\x0c.gitaly.User\"2\n\x15UserDeleteTagResponse\x12\x19\n\x11pre_receive_error\x18\x01 \x01(\t\"\xcb\x01\n\x14UserCreateTagRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08tag_name\x18\x02 \x01(\x0c\x12\x1a\n\x04user\x18\x03 \x01(\x0b\x32\x0c.gitaly.User\x12\x17\n\x0ftarget_revision\x18\x04 \x01(\x0c\x12\x0f\n\x07message\x18\x05 \x01(\x0c\x12-\n\ttimestamp\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\\\n\x15UserCreateTagResponse\x12\x18\n\x03tag\x18\x01 \x01(\x0b\x32\x0b.gitaly.Tag\x12\x0e\n\x06\x65xists\x18\x02 \x01(\x08\x12\x19\n\x11pre_receive_error\x18\x03 \x01(\t\"\xd4\x01\n\x16UserMergeBranchRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x1a\n\x04user\x18\x02 \x01(\x0b\x32\x0c.gitaly.User\x12\x11\n\tcommit_id\x18\x03 \x01(\t\x12\x0e\n\x06\x62ranch\x18\x04 \x01(\x0c\x12\x0f\n\x07message\x18\x05 \x01(\x0c\x12-\n\ttimestamp\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\r\n\x05\x61pply\x18\x06 \x01(\x08\"\x81\x01\n\x17UserMergeBranchResponse\x12\x11\n\tcommit_id\x18\x01 \x01(\t\x12\x34\n\rbranch_update\x18\x03 \x01(\x0b\x32\x1d.gitaly.OperationBranchUpdateJ\x04\x08\x02\x10\x03J\x04\x08\x04\x10\x05R\x11pre_receive_error\"\xf1\x01\n\x14UserMergeBranchError\x12\x30\n\x0c\x61\x63\x63\x65ss_check\x18\x01 \x01(\x0b\x32\x18.gitaly.AccessCheckErrorH\x00\x12\x38\n\x10reference_update\x18\x02 \x01(\x0b\x32\x1c.gitaly.ReferenceUpdateErrorH\x00\x12.\n\x0b\x63ustom_hook\x18\x03 \x01(\x0b\x32\x17.gitaly.CustomHookErrorH\x00\x12\x34\n\x0emerge_conflict\x18\x04 \x01(\x0b\x32\x1a.gitaly.MergeConflictErrorH\x00\x42\x07\n\x05\x65rror\"\x8c\x02\n\x15UserMergeToRefRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x1a\n\x04user\x18\x02 \x01(\x0b\x32\x0c.gitaly.User\x12\x12\n\nsource_sha\x18\x03 \x01(\t\x12\x0e\n\x06\x62ranch\x18\x04 \x01(\x0c\x12\x12\n\ntarget_ref\x18\x05 \x01(\x0c\x12\x0f\n\x07message\x18\x06 \x01(\x0c\x12\x18\n\x10\x66irst_parent_ref\x18\x07 \x01(\x0c\x12\x17\n\x0f\x61llow_conflicts\x18\x08 \x01(\x08\x12-\n\ttimestamp\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"D\n\x16UserMergeToRefResponse\x12\x11\n\tcommit_id\x18\x01 \x01(\tJ\x04\x08\x02\x10\x03R\x11pre_receive_error\"X\n\x15OperationBranchUpdate\x12\x11\n\tcommit_id\x18\x01 \x01(\t\x12\x14\n\x0crepo_created\x18\x02 \x01(\x08\x12\x16\n\x0e\x62ranch_created\x18\x03 \x01(\x08\"\x82\x01\n\x13UserFFBranchRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x1a\n\x04user\x18\x02 \x01(\x0b\x32\x0c.gitaly.User\x12\x11\n\tcommit_id\x18\x03 \x01(\t\x12\x0e\n\x06\x62ranch\x18\x04 \x01(\x0c\"g\n\x14UserFFBranchResponse\x12\x34\n\rbranch_update\x18\x01 \x01(\x0b\x32\x1d.gitaly.OperationBranchUpdate\x12\x19\n\x11pre_receive_error\x18\x02 \x01(\t\"\xb3\x02\n\x15UserCherryPickRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x1a\n\x04user\x18\x02 \x01(\x0b\x32\x0c.gitaly.User\x12!\n\x06\x63ommit\x18\x03 \x01(\x0b\x32\x11.gitaly.GitCommit\x12\x13\n\x0b\x62ranch_name\x18\x04 \x01(\x0c\x12\x0f\n\x07message\x18\x05 \x01(\x0c\x12\x19\n\x11start_branch_name\x18\x06 \x01(\x0c\x12,\n\x10start_repository\x18\x07 \x01(\x0b\x32\x12.gitaly.Repository\x12\x0f\n\x07\x64ry_run\x18\x08 \x01(\x08\x12-\n\ttimestamp\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\xa0\x02\n\x16UserCherryPickResponse\x12\x34\n\rbranch_update\x18\x01 \x01(\x0b\x32\x1d.gitaly.OperationBranchUpdate\x12\x19\n\x11\x63reate_tree_error\x18\x02 \x01(\t\x12\x14\n\x0c\x63ommit_error\x18\x03 \x01(\t\x12\x19\n\x11pre_receive_error\x18\x04 \x01(\t\x12N\n\x16\x63reate_tree_error_code\x18\x05 \x01(\x0e\x32..gitaly.UserCherryPickResponse.CreateTreeError\"4\n\x0f\x43reateTreeError\x12\x08\n\x04NONE\x10\x00\x12\t\n\x05\x45MPTY\x10\x01\x12\x0c\n\x08\x43ONFLICT\x10\x02\"\x8f\x02\n\x13UserCherryPickError\x12:\n\x14\x63herry_pick_conflict\x18\x01 \x01(\x0b\x32\x1a.gitaly.MergeConflictErrorH\x00\x12:\n\x16target_branch_diverged\x18\x02 \x01(\x0b\x32\x18.gitaly.NotAncestorErrorH\x00\x12\x45\n\x17\x63hanges_already_applied\x18\x03 \x01(\x0b\x32\".gitaly.ChangesAlreadyAppliedErrorH\x00\x12\x30\n\x0c\x61\x63\x63\x65ss_check\x18\x04 \x01(\x0b\x32\x18.gitaly.AccessCheckErrorH\x00\x42\x07\n\x05\x65rror\"\xaf\x02\n\x11UserRevertRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x1a\n\x04user\x18\x02 \x01(\x0b\x32\x0c.gitaly.User\x12!\n\x06\x63ommit\x18\x03 \x01(\x0b\x32\x11.gitaly.GitCommit\x12\x13\n\x0b\x62ranch_name\x18\x04 \x01(\x0c\x12\x0f\n\x07message\x18\x05 \x01(\x0c\x12\x19\n\x11start_branch_name\x18\x06 \x01(\x0c\x12,\n\x10start_repository\x18\x07 \x01(\x0b\x32\x12.gitaly.Repository\x12\x0f\n\x07\x64ry_run\x18\x08 \x01(\x08\x12-\n\ttimestamp\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\x98\x02\n\x12UserRevertResponse\x12\x34\n\rbranch_update\x18\x01 \x01(\x0b\x32\x1d.gitaly.OperationBranchUpdate\x12\x19\n\x11\x63reate_tree_error\x18\x02 \x01(\t\x12\x14\n\x0c\x63ommit_error\x18\x03 \x01(\t\x12\x19\n\x11pre_receive_error\x18\x04 \x01(\t\x12J\n\x16\x63reate_tree_error_code\x18\x05 \x01(\x0e\x32*.gitaly.UserRevertResponse.CreateTreeError\"4\n\x0f\x43reateTreeError\x12\x08\n\x04NONE\x10\x00\x12\t\n\x05\x45MPTY\x10\x01\x12\x0c\n\x08\x43ONFLICT\x10\x02\"\xa7\x02\n\x1bUserCommitFilesActionHeader\x12>\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32..gitaly.UserCommitFilesActionHeader.ActionType\x12\x11\n\tfile_path\x18\x02 \x01(\x0c\x12\x15\n\rprevious_path\x18\x03 \x01(\x0c\x12\x16\n\x0e\x62\x61se64_content\x18\x04 \x01(\x08\x12\x18\n\x10\x65xecute_filemode\x18\x05 \x01(\x08\x12\x15\n\rinfer_content\x18\x06 \x01(\x08\"U\n\nActionType\x12\n\n\x06\x43REATE\x10\x00\x12\x0e\n\nCREATE_DIR\x10\x01\x12\n\n\x06UPDATE\x10\x02\x12\x08\n\x04MOVE\x10\x03\x12\n\n\x06\x44\x45LETE\x10\x04\x12\t\n\x05\x43HMOD\x10\x05\"\x85\x01\n\x15UserCommitFilesAction\x12\x35\n\x06header\x18\x01 \x01(\x0b\x32#.gitaly.UserCommitFilesActionHeaderH\x00\x12\x11\n\x07\x63ontent\x18\x02 \x01(\x0cH\x00\x42\"\n user_commit_files_action_payload\"\xe8\x02\n\x1cUserCommitFilesRequestHeader\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x1a\n\x04user\x18\x02 \x01(\x0b\x32\x0c.gitaly.User\x12\x13\n\x0b\x62ranch_name\x18\x03 \x01(\x0c\x12\x16\n\x0e\x63ommit_message\x18\x04 \x01(\x0c\x12\x1a\n\x12\x63ommit_author_name\x18\x05 \x01(\x0c\x12\x1b\n\x13\x63ommit_author_email\x18\x06 \x01(\x0c\x12\x19\n\x11start_branch_name\x18\x07 \x01(\x0c\x12,\n\x10start_repository\x18\x08 \x01(\x0b\x32\x12.gitaly.Repository\x12\r\n\x05\x66orce\x18\t \x01(\x08\x12\x11\n\tstart_sha\x18\n \x01(\t\x12-\n\ttimestamp\x18\x0b \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\xa6\x01\n\x16UserCommitFilesRequest\x12\x36\n\x06header\x18\x01 \x01(\x0b\x32$.gitaly.UserCommitFilesRequestHeaderH\x00\x12/\n\x06\x61\x63tion\x18\x02 \x01(\x0b\x32\x1d.gitaly.UserCommitFilesActionH\x00\x42#\n!user_commit_files_request_payload\"\x7f\n\x17UserCommitFilesResponse\x12\x34\n\rbranch_update\x18\x01 \x01(\x0b\x32\x1d.gitaly.OperationBranchUpdate\x12\x13\n\x0bindex_error\x18\x02 \x01(\t\x12\x19\n\x11pre_receive_error\x18\x03 \x01(\t\"\xb8\x03\n\x1cUserRebaseConfirmableRequest\x12=\n\x06header\x18\x01 \x01(\x0b\x32+.gitaly.UserRebaseConfirmableRequest.HeaderH\x00\x12\x0f\n\x05\x61pply\x18\x02 \x01(\x08H\x00\x1a\x9c\x02\n\x06Header\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x1a\n\x04user\x18\x02 \x01(\x0b\x32\x0c.gitaly.User\x12\x15\n\trebase_id\x18\x03 \x01(\tB\x02\x18\x01\x12\x0e\n\x06\x62ranch\x18\x04 \x01(\x0c\x12\x12\n\nbranch_sha\x18\x05 \x01(\t\x12-\n\x11remote_repository\x18\x06 \x01(\x0b\x32\x12.gitaly.Repository\x12\x15\n\rremote_branch\x18\x07 \x01(\x0c\x12\x18\n\x10git_push_options\x18\x08 \x03(\t\x12-\n\ttimestamp\x18\t \x01(\x0b\x32\x1a.google.protobuf.TimestampB)\n\'user_rebase_confirmable_request_payload\"\xa9\x01\n\x1dUserRebaseConfirmableResponse\x12\x14\n\nrebase_sha\x18\x01 \x01(\tH\x00\x12\x18\n\x0erebase_applied\x18\x02 \x01(\x08H\x00\x12\x19\n\x11pre_receive_error\x18\x03 \x01(\t\x12\x11\n\tgit_error\x18\x04 \x01(\tB*\n(user_rebase_confirmable_response_payload\"\xfd\x01\n\x11UserSquashRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x1a\n\x04user\x18\x02 \x01(\x0b\x32\x0c.gitaly.User\x12\x11\n\tstart_sha\x18\x05 \x01(\t\x12\x0f\n\x07\x65nd_sha\x18\x06 \x01(\t\x12\x1c\n\x06\x61uthor\x18\x07 \x01(\x0b\x32\x0c.gitaly.User\x12\x16\n\x0e\x63ommit_message\x18\x08 \x01(\x0c\x12-\n\ttimestamp\x18\t \x01(\x0b\x32\x1a.google.protobuf.TimestampJ\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05R\tsquash_id\"R\n\x12UserSquashResponse\x12\x12\n\nsquash_sha\x18\x01 \x01(\tJ\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04R\x11pre_receive_errorR\tgit_error\"\x8e\x01\n\x1aUserRebaseConfirmableError\x12\x35\n\x0frebase_conflict\x18\x01 \x01(\x0b\x32\x1a.gitaly.MergeConflictErrorH\x00\x12\x30\n\x0c\x61\x63\x63\x65ss_check\x18\x02 \x01(\x0b\x32\x18.gitaly.AccessCheckErrorH\x00\x42\x07\n\x05\x65rror\"\x8b\x01\n\x0fUserSquashError\x12\x38\n\x10resolve_revision\x18\x01 \x01(\x0b\x32\x1c.gitaly.ResolveRevisionErrorH\x00\x12\x35\n\x0frebase_conflict\x18\x02 \x01(\x0b\x32\x1a.gitaly.MergeConflictErrorH\x00\x42\x07\n\x05\x65rror\"\xa1\x02\n\x15UserApplyPatchRequest\x12\x36\n\x06header\x18\x01 \x01(\x0b\x32$.gitaly.UserApplyPatchRequest.HeaderH\x00\x12\x11\n\x07patches\x18\x02 \x01(\x0cH\x00\x1a\x98\x01\n\x06Header\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x1a\n\x04user\x18\x02 \x01(\x0b\x32\x0c.gitaly.User\x12\x15\n\rtarget_branch\x18\x03 \x01(\x0c\x12-\n\ttimestamp\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\"\n user_apply_patch_request_payload\"N\n\x16UserApplyPatchResponse\x12\x34\n\rbranch_update\x18\x01 \x01(\x0b\x32\x1d.gitaly.OperationBranchUpdate\"\xe4\x01\n\x1aUserUpdateSubmoduleRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x1a\n\x04user\x18\x02 \x01(\x0b\x32\x0c.gitaly.User\x12\x12\n\ncommit_sha\x18\x03 \x01(\t\x12\x0e\n\x06\x62ranch\x18\x04 \x01(\x0c\x12\x11\n\tsubmodule\x18\x05 \x01(\x0c\x12\x16\n\x0e\x63ommit_message\x18\x06 \x01(\x0c\x12-\n\ttimestamp\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\x9d\x01\n\x1bUserUpdateSubmoduleResponse\x12\x34\n\rbranch_update\x18\x01 \x01(\x0b\x32\x1d.gitaly.OperationBranchUpdate\x12\x19\n\x11pre_receive_error\x18\x02 \x01(\t\x12\x14\n\x0c\x63ommit_error\x18\x04 \x01(\tJ\x04\x08\x03\x10\x04R\x11\x63reate_tree_error2\xed\n\n\x10OperationService\x12]\n\x10UserCreateBranch\x12\x1f.gitaly.UserCreateBranchRequest\x1a .gitaly.UserCreateBranchResponse\"\x06\xfa\x97(\x02\x08\x01\x12]\n\x10UserUpdateBranch\x12\x1f.gitaly.UserUpdateBranchRequest\x1a .gitaly.UserUpdateBranchResponse\"\x06\xfa\x97(\x02\x08\x01\x12]\n\x10UserDeleteBranch\x12\x1f.gitaly.UserDeleteBranchRequest\x1a .gitaly.UserDeleteBranchResponse\"\x06\xfa\x97(\x02\x08\x01\x12T\n\rUserCreateTag\x12\x1c.gitaly.UserCreateTagRequest\x1a\x1d.gitaly.UserCreateTagResponse\"\x06\xfa\x97(\x02\x08\x01\x12T\n\rUserDeleteTag\x12\x1c.gitaly.UserDeleteTagRequest\x1a\x1d.gitaly.UserDeleteTagResponse\"\x06\xfa\x97(\x02\x08\x01\x12W\n\x0eUserMergeToRef\x12\x1d.gitaly.UserMergeToRefRequest\x1a\x1e.gitaly.UserMergeToRefResponse\"\x06\xfa\x97(\x02\x08\x01\x12^\n\x0fUserMergeBranch\x12\x1e.gitaly.UserMergeBranchRequest\x1a\x1f.gitaly.UserMergeBranchResponse\"\x06\xfa\x97(\x02\x08\x01(\x01\x30\x01\x12Q\n\x0cUserFFBranch\x12\x1b.gitaly.UserFFBranchRequest\x1a\x1c.gitaly.UserFFBranchResponse\"\x06\xfa\x97(\x02\x08\x01\x12W\n\x0eUserCherryPick\x12\x1d.gitaly.UserCherryPickRequest\x1a\x1e.gitaly.UserCherryPickResponse\"\x06\xfa\x97(\x02\x08\x01\x12\\\n\x0fUserCommitFiles\x12\x1e.gitaly.UserCommitFilesRequest\x1a\x1f.gitaly.UserCommitFilesResponse\"\x06\xfa\x97(\x02\x08\x01(\x01\x12p\n\x15UserRebaseConfirmable\x12$.gitaly.UserRebaseConfirmableRequest\x1a%.gitaly.UserRebaseConfirmableResponse\"\x06\xfa\x97(\x02\x08\x01(\x01\x30\x01\x12K\n\nUserRevert\x12\x19.gitaly.UserRevertRequest\x1a\x1a.gitaly.UserRevertResponse\"\x06\xfa\x97(\x02\x08\x01\x12K\n\nUserSquash\x12\x19.gitaly.UserSquashRequest\x1a\x1a.gitaly.UserSquashResponse\"\x06\xfa\x97(\x02\x08\x01\x12Y\n\x0eUserApplyPatch\x12\x1d.gitaly.UserApplyPatchRequest\x1a\x1e.gitaly.UserApplyPatchResponse\"\x06\xfa\x97(\x02\x08\x01(\x01\x12\x66\n\x13UserUpdateSubmodule\x12\".gitaly.UserUpdateSubmoduleRequest\x1a#.gitaly.UserUpdateSubmoduleResponse\"\x06\xfa\x97(\x02\x08\x01\x42\x34Z2gitlab.com/gitlab-org/gitaly/v15/proto/go/gitalypbb\x06proto3')
  ,
  dependencies=[errors__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,lint__pb2.DESCRIPTOR,shared__pb2.DESCRIPTOR,])



_USERCHERRYPICKRESPONSE_CREATETREEERROR = _descriptor.EnumDescriptor(
  name='CreateTreeError',
  full_name='gitaly.UserCherryPickResponse.CreateTreeError',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EMPTY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONFLICT', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3189,
  serialized_end=3241,
)
_sym_db.RegisterEnumDescriptor(_USERCHERRYPICKRESPONSE_CREATETREEERROR)

_USERREVERTRESPONSE_CREATETREEERROR = _descriptor.EnumDescriptor(
  name='CreateTreeError',
  full_name='gitaly.UserRevertResponse.CreateTreeError',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EMPTY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONFLICT', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3189,
  serialized_end=3241,
)
_sym_db.RegisterEnumDescriptor(_USERREVERTRESPONSE_CREATETREEERROR)

_USERCOMMITFILESACTIONHEADER_ACTIONTYPE = _descriptor.EnumDescriptor(
  name='ActionType',
  full_name='gitaly.UserCommitFilesActionHeader.ActionType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CREATE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CREATE_DIR', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPDATE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MOVE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELETE', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHMOD', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=4317,
  serialized_end=4402,
)
_sym_db.RegisterEnumDescriptor(_USERCOMMITFILESACTIONHEADER_ACTIONTYPE)


_USERCREATEBRANCHREQUEST = _descriptor.Descriptor(
  name='UserCreateBranchRequest',
  full_name='gitaly.UserCreateBranchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserCreateBranchRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch_name', full_name='gitaly.UserCreateBranchRequest.branch_name', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserCreateBranchRequest.user', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_point', full_name='gitaly.UserCreateBranchRequest.start_point', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=102,
  serialized_end=243,
)


_USERCREATEBRANCHRESPONSE = _descriptor.Descriptor(
  name='UserCreateBranchResponse',
  full_name='gitaly.UserCreateBranchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='branch', full_name='gitaly.UserCreateBranchResponse.branch', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pre_receive_error', full_name='gitaly.UserCreateBranchResponse.pre_receive_error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=245,
  serialized_end=330,
)


_USERUPDATEBRANCHREQUEST = _descriptor.Descriptor(
  name='UserUpdateBranchRequest',
  full_name='gitaly.UserUpdateBranchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserUpdateBranchRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch_name', full_name='gitaly.UserUpdateBranchRequest.branch_name', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserUpdateBranchRequest.user', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='newrev', full_name='gitaly.UserUpdateBranchRequest.newrev', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='oldrev', full_name='gitaly.UserUpdateBranchRequest.oldrev', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=333,
  serialized_end=485,
)


_USERUPDATEBRANCHRESPONSE = _descriptor.Descriptor(
  name='UserUpdateBranchResponse',
  full_name='gitaly.UserUpdateBranchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pre_receive_error', full_name='gitaly.UserUpdateBranchResponse.pre_receive_error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=487,
  serialized_end=540,
)


_USERDELETEBRANCHREQUEST = _descriptor.Descriptor(
  name='UserDeleteBranchRequest',
  full_name='gitaly.UserDeleteBranchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserDeleteBranchRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch_name', full_name='gitaly.UserDeleteBranchRequest.branch_name', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserDeleteBranchRequest.user', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=542,
  serialized_end=662,
)


_USERDELETEBRANCHRESPONSE = _descriptor.Descriptor(
  name='UserDeleteBranchResponse',
  full_name='gitaly.UserDeleteBranchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pre_receive_error', full_name='gitaly.UserDeleteBranchResponse.pre_receive_error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=664,
  serialized_end=721,
)


_USERDELETEBRANCHERROR = _descriptor.Descriptor(
  name='UserDeleteBranchError',
  full_name='gitaly.UserDeleteBranchError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='access_check', full_name='gitaly.UserDeleteBranchError.access_check', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reference_update', full_name='gitaly.UserDeleteBranchError.reference_update', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='custom_hook', full_name='gitaly.UserDeleteBranchError.custom_hook', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='gitaly.UserDeleteBranchError.error',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=724,
  serialized_end=912,
)


_USERDELETETAGREQUEST = _descriptor.Descriptor(
  name='UserDeleteTagRequest',
  full_name='gitaly.UserDeleteTagRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserDeleteTagRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag_name', full_name='gitaly.UserDeleteTagRequest.tag_name', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserDeleteTagRequest.user', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=914,
  serialized_end=1028,
)


_USERDELETETAGRESPONSE = _descriptor.Descriptor(
  name='UserDeleteTagResponse',
  full_name='gitaly.UserDeleteTagResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pre_receive_error', full_name='gitaly.UserDeleteTagResponse.pre_receive_error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1030,
  serialized_end=1080,
)


_USERCREATETAGREQUEST = _descriptor.Descriptor(
  name='UserCreateTagRequest',
  full_name='gitaly.UserCreateTagRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserCreateTagRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag_name', full_name='gitaly.UserCreateTagRequest.tag_name', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserCreateTagRequest.user', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_revision', full_name='gitaly.UserCreateTagRequest.target_revision', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='gitaly.UserCreateTagRequest.message', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='gitaly.UserCreateTagRequest.timestamp', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1083,
  serialized_end=1286,
)


_USERCREATETAGRESPONSE = _descriptor.Descriptor(
  name='UserCreateTagResponse',
  full_name='gitaly.UserCreateTagResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tag', full_name='gitaly.UserCreateTagResponse.tag', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exists', full_name='gitaly.UserCreateTagResponse.exists', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pre_receive_error', full_name='gitaly.UserCreateTagResponse.pre_receive_error', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1288,
  serialized_end=1380,
)


_USERMERGEBRANCHREQUEST = _descriptor.Descriptor(
  name='UserMergeBranchRequest',
  full_name='gitaly.UserMergeBranchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserMergeBranchRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserMergeBranchRequest.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_id', full_name='gitaly.UserMergeBranchRequest.commit_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch', full_name='gitaly.UserMergeBranchRequest.branch', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='gitaly.UserMergeBranchRequest.message', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='gitaly.UserMergeBranchRequest.timestamp', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='apply', full_name='gitaly.UserMergeBranchRequest.apply', index=6,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1383,
  serialized_end=1595,
)


_USERMERGEBRANCHRESPONSE = _descriptor.Descriptor(
  name='UserMergeBranchResponse',
  full_name='gitaly.UserMergeBranchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit_id', full_name='gitaly.UserMergeBranchResponse.commit_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch_update', full_name='gitaly.UserMergeBranchResponse.branch_update', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1598,
  serialized_end=1727,
)


_USERMERGEBRANCHERROR = _descriptor.Descriptor(
  name='UserMergeBranchError',
  full_name='gitaly.UserMergeBranchError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='access_check', full_name='gitaly.UserMergeBranchError.access_check', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reference_update', full_name='gitaly.UserMergeBranchError.reference_update', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='custom_hook', full_name='gitaly.UserMergeBranchError.custom_hook', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='merge_conflict', full_name='gitaly.UserMergeBranchError.merge_conflict', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='gitaly.UserMergeBranchError.error',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1730,
  serialized_end=1971,
)


_USERMERGETOREFREQUEST = _descriptor.Descriptor(
  name='UserMergeToRefRequest',
  full_name='gitaly.UserMergeToRefRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserMergeToRefRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserMergeToRefRequest.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_sha', full_name='gitaly.UserMergeToRefRequest.source_sha', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch', full_name='gitaly.UserMergeToRefRequest.branch', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_ref', full_name='gitaly.UserMergeToRefRequest.target_ref', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='gitaly.UserMergeToRefRequest.message', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='first_parent_ref', full_name='gitaly.UserMergeToRefRequest.first_parent_ref', index=6,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='allow_conflicts', full_name='gitaly.UserMergeToRefRequest.allow_conflicts', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='gitaly.UserMergeToRefRequest.timestamp', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1974,
  serialized_end=2242,
)


_USERMERGETOREFRESPONSE = _descriptor.Descriptor(
  name='UserMergeToRefResponse',
  full_name='gitaly.UserMergeToRefResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit_id', full_name='gitaly.UserMergeToRefResponse.commit_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2244,
  serialized_end=2312,
)


_OPERATIONBRANCHUPDATE = _descriptor.Descriptor(
  name='OperationBranchUpdate',
  full_name='gitaly.OperationBranchUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit_id', full_name='gitaly.OperationBranchUpdate.commit_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='repo_created', full_name='gitaly.OperationBranchUpdate.repo_created', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch_created', full_name='gitaly.OperationBranchUpdate.branch_created', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2314,
  serialized_end=2402,
)


_USERFFBRANCHREQUEST = _descriptor.Descriptor(
  name='UserFFBranchRequest',
  full_name='gitaly.UserFFBranchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserFFBranchRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserFFBranchRequest.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_id', full_name='gitaly.UserFFBranchRequest.commit_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch', full_name='gitaly.UserFFBranchRequest.branch', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2405,
  serialized_end=2535,
)


_USERFFBRANCHRESPONSE = _descriptor.Descriptor(
  name='UserFFBranchResponse',
  full_name='gitaly.UserFFBranchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='branch_update', full_name='gitaly.UserFFBranchResponse.branch_update', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pre_receive_error', full_name='gitaly.UserFFBranchResponse.pre_receive_error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2537,
  serialized_end=2640,
)


_USERCHERRYPICKREQUEST = _descriptor.Descriptor(
  name='UserCherryPickRequest',
  full_name='gitaly.UserCherryPickRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserCherryPickRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserCherryPickRequest.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit', full_name='gitaly.UserCherryPickRequest.commit', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch_name', full_name='gitaly.UserCherryPickRequest.branch_name', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='gitaly.UserCherryPickRequest.message', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_branch_name', full_name='gitaly.UserCherryPickRequest.start_branch_name', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_repository', full_name='gitaly.UserCherryPickRequest.start_repository', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dry_run', full_name='gitaly.UserCherryPickRequest.dry_run', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='gitaly.UserCherryPickRequest.timestamp', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2643,
  serialized_end=2950,
)


_USERCHERRYPICKRESPONSE = _descriptor.Descriptor(
  name='UserCherryPickResponse',
  full_name='gitaly.UserCherryPickResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='branch_update', full_name='gitaly.UserCherryPickResponse.branch_update', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='create_tree_error', full_name='gitaly.UserCherryPickResponse.create_tree_error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_error', full_name='gitaly.UserCherryPickResponse.commit_error', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pre_receive_error', full_name='gitaly.UserCherryPickResponse.pre_receive_error', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='create_tree_error_code', full_name='gitaly.UserCherryPickResponse.create_tree_error_code', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _USERCHERRYPICKRESPONSE_CREATETREEERROR,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2953,
  serialized_end=3241,
)


_USERCHERRYPICKERROR = _descriptor.Descriptor(
  name='UserCherryPickError',
  full_name='gitaly.UserCherryPickError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cherry_pick_conflict', full_name='gitaly.UserCherryPickError.cherry_pick_conflict', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_branch_diverged', full_name='gitaly.UserCherryPickError.target_branch_diverged', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='changes_already_applied', full_name='gitaly.UserCherryPickError.changes_already_applied', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='access_check', full_name='gitaly.UserCherryPickError.access_check', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='gitaly.UserCherryPickError.error',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3244,
  serialized_end=3515,
)


_USERREVERTREQUEST = _descriptor.Descriptor(
  name='UserRevertRequest',
  full_name='gitaly.UserRevertRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserRevertRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserRevertRequest.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit', full_name='gitaly.UserRevertRequest.commit', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch_name', full_name='gitaly.UserRevertRequest.branch_name', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='gitaly.UserRevertRequest.message', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_branch_name', full_name='gitaly.UserRevertRequest.start_branch_name', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_repository', full_name='gitaly.UserRevertRequest.start_repository', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dry_run', full_name='gitaly.UserRevertRequest.dry_run', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='gitaly.UserRevertRequest.timestamp', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3518,
  serialized_end=3821,
)


_USERREVERTRESPONSE = _descriptor.Descriptor(
  name='UserRevertResponse',
  full_name='gitaly.UserRevertResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='branch_update', full_name='gitaly.UserRevertResponse.branch_update', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='create_tree_error', full_name='gitaly.UserRevertResponse.create_tree_error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_error', full_name='gitaly.UserRevertResponse.commit_error', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pre_receive_error', full_name='gitaly.UserRevertResponse.pre_receive_error', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='create_tree_error_code', full_name='gitaly.UserRevertResponse.create_tree_error_code', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _USERREVERTRESPONSE_CREATETREEERROR,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3824,
  serialized_end=4104,
)


_USERCOMMITFILESACTIONHEADER = _descriptor.Descriptor(
  name='UserCommitFilesActionHeader',
  full_name='gitaly.UserCommitFilesActionHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action', full_name='gitaly.UserCommitFilesActionHeader.action', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file_path', full_name='gitaly.UserCommitFilesActionHeader.file_path', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='previous_path', full_name='gitaly.UserCommitFilesActionHeader.previous_path', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='base64_content', full_name='gitaly.UserCommitFilesActionHeader.base64_content', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='execute_filemode', full_name='gitaly.UserCommitFilesActionHeader.execute_filemode', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='infer_content', full_name='gitaly.UserCommitFilesActionHeader.infer_content', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _USERCOMMITFILESACTIONHEADER_ACTIONTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4107,
  serialized_end=4402,
)


_USERCOMMITFILESACTION = _descriptor.Descriptor(
  name='UserCommitFilesAction',
  full_name='gitaly.UserCommitFilesAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='gitaly.UserCommitFilesAction.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='content', full_name='gitaly.UserCommitFilesAction.content', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='user_commit_files_action_payload', full_name='gitaly.UserCommitFilesAction.user_commit_files_action_payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4405,
  serialized_end=4538,
)


_USERCOMMITFILESREQUESTHEADER = _descriptor.Descriptor(
  name='UserCommitFilesRequestHeader',
  full_name='gitaly.UserCommitFilesRequestHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserCommitFilesRequestHeader.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserCommitFilesRequestHeader.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch_name', full_name='gitaly.UserCommitFilesRequestHeader.branch_name', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_message', full_name='gitaly.UserCommitFilesRequestHeader.commit_message', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_author_name', full_name='gitaly.UserCommitFilesRequestHeader.commit_author_name', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_author_email', full_name='gitaly.UserCommitFilesRequestHeader.commit_author_email', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_branch_name', full_name='gitaly.UserCommitFilesRequestHeader.start_branch_name', index=6,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_repository', full_name='gitaly.UserCommitFilesRequestHeader.start_repository', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='force', full_name='gitaly.UserCommitFilesRequestHeader.force', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_sha', full_name='gitaly.UserCommitFilesRequestHeader.start_sha', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='gitaly.UserCommitFilesRequestHeader.timestamp', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4541,
  serialized_end=4901,
)


_USERCOMMITFILESREQUEST = _descriptor.Descriptor(
  name='UserCommitFilesRequest',
  full_name='gitaly.UserCommitFilesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='gitaly.UserCommitFilesRequest.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='action', full_name='gitaly.UserCommitFilesRequest.action', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='user_commit_files_request_payload', full_name='gitaly.UserCommitFilesRequest.user_commit_files_request_payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4904,
  serialized_end=5070,
)


_USERCOMMITFILESRESPONSE = _descriptor.Descriptor(
  name='UserCommitFilesResponse',
  full_name='gitaly.UserCommitFilesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='branch_update', full_name='gitaly.UserCommitFilesResponse.branch_update', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='index_error', full_name='gitaly.UserCommitFilesResponse.index_error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pre_receive_error', full_name='gitaly.UserCommitFilesResponse.pre_receive_error', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5072,
  serialized_end=5199,
)


_USERREBASECONFIRMABLEREQUEST_HEADER = _descriptor.Descriptor(
  name='Header',
  full_name='gitaly.UserRebaseConfirmableRequest.Header',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserRebaseConfirmableRequest.Header.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserRebaseConfirmableRequest.Header.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rebase_id', full_name='gitaly.UserRebaseConfirmableRequest.Header.rebase_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch', full_name='gitaly.UserRebaseConfirmableRequest.Header.branch', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch_sha', full_name='gitaly.UserRebaseConfirmableRequest.Header.branch_sha', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='remote_repository', full_name='gitaly.UserRebaseConfirmableRequest.Header.remote_repository', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='remote_branch', full_name='gitaly.UserRebaseConfirmableRequest.Header.remote_branch', index=6,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='git_push_options', full_name='gitaly.UserRebaseConfirmableRequest.Header.git_push_options', index=7,
      number=8, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='gitaly.UserRebaseConfirmableRequest.Header.timestamp', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5315,
  serialized_end=5599,
)

_USERREBASECONFIRMABLEREQUEST = _descriptor.Descriptor(
  name='UserRebaseConfirmableRequest',
  full_name='gitaly.UserRebaseConfirmableRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='gitaly.UserRebaseConfirmableRequest.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='apply', full_name='gitaly.UserRebaseConfirmableRequest.apply', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_USERREBASECONFIRMABLEREQUEST_HEADER, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='user_rebase_confirmable_request_payload', full_name='gitaly.UserRebaseConfirmableRequest.user_rebase_confirmable_request_payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=5202,
  serialized_end=5642,
)


_USERREBASECONFIRMABLERESPONSE = _descriptor.Descriptor(
  name='UserRebaseConfirmableResponse',
  full_name='gitaly.UserRebaseConfirmableResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rebase_sha', full_name='gitaly.UserRebaseConfirmableResponse.rebase_sha', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rebase_applied', full_name='gitaly.UserRebaseConfirmableResponse.rebase_applied', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pre_receive_error', full_name='gitaly.UserRebaseConfirmableResponse.pre_receive_error', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='git_error', full_name='gitaly.UserRebaseConfirmableResponse.git_error', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='user_rebase_confirmable_response_payload', full_name='gitaly.UserRebaseConfirmableResponse.user_rebase_confirmable_response_payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=5645,
  serialized_end=5814,
)


_USERSQUASHREQUEST = _descriptor.Descriptor(
  name='UserSquashRequest',
  full_name='gitaly.UserSquashRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserSquashRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserSquashRequest.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_sha', full_name='gitaly.UserSquashRequest.start_sha', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_sha', full_name='gitaly.UserSquashRequest.end_sha', index=3,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='author', full_name='gitaly.UserSquashRequest.author', index=4,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_message', full_name='gitaly.UserSquashRequest.commit_message', index=5,
      number=8, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='gitaly.UserSquashRequest.timestamp', index=6,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5817,
  serialized_end=6070,
)


_USERSQUASHRESPONSE = _descriptor.Descriptor(
  name='UserSquashResponse',
  full_name='gitaly.UserSquashResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='squash_sha', full_name='gitaly.UserSquashResponse.squash_sha', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6072,
  serialized_end=6154,
)


_USERREBASECONFIRMABLEERROR = _descriptor.Descriptor(
  name='UserRebaseConfirmableError',
  full_name='gitaly.UserRebaseConfirmableError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rebase_conflict', full_name='gitaly.UserRebaseConfirmableError.rebase_conflict', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='access_check', full_name='gitaly.UserRebaseConfirmableError.access_check', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='gitaly.UserRebaseConfirmableError.error',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=6157,
  serialized_end=6299,
)


_USERSQUASHERROR = _descriptor.Descriptor(
  name='UserSquashError',
  full_name='gitaly.UserSquashError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resolve_revision', full_name='gitaly.UserSquashError.resolve_revision', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rebase_conflict', full_name='gitaly.UserSquashError.rebase_conflict', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='gitaly.UserSquashError.error',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=6302,
  serialized_end=6441,
)


_USERAPPLYPATCHREQUEST_HEADER = _descriptor.Descriptor(
  name='Header',
  full_name='gitaly.UserApplyPatchRequest.Header',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserApplyPatchRequest.Header.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserApplyPatchRequest.Header.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_branch', full_name='gitaly.UserApplyPatchRequest.Header.target_branch', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='gitaly.UserApplyPatchRequest.Header.timestamp', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6545,
  serialized_end=6697,
)

_USERAPPLYPATCHREQUEST = _descriptor.Descriptor(
  name='UserApplyPatchRequest',
  full_name='gitaly.UserApplyPatchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='gitaly.UserApplyPatchRequest.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='patches', full_name='gitaly.UserApplyPatchRequest.patches', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_USERAPPLYPATCHREQUEST_HEADER, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='user_apply_patch_request_payload', full_name='gitaly.UserApplyPatchRequest.user_apply_patch_request_payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=6444,
  serialized_end=6733,
)


_USERAPPLYPATCHRESPONSE = _descriptor.Descriptor(
  name='UserApplyPatchResponse',
  full_name='gitaly.UserApplyPatchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='branch_update', full_name='gitaly.UserApplyPatchResponse.branch_update', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6735,
  serialized_end=6813,
)


_USERUPDATESUBMODULEREQUEST = _descriptor.Descriptor(
  name='UserUpdateSubmoduleRequest',
  full_name='gitaly.UserUpdateSubmoduleRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.UserUpdateSubmoduleRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.UserUpdateSubmoduleRequest.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_sha', full_name='gitaly.UserUpdateSubmoduleRequest.commit_sha', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch', full_name='gitaly.UserUpdateSubmoduleRequest.branch', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='submodule', full_name='gitaly.UserUpdateSubmoduleRequest.submodule', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_message', full_name='gitaly.UserUpdateSubmoduleRequest.commit_message', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='gitaly.UserUpdateSubmoduleRequest.timestamp', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6816,
  serialized_end=7044,
)


_USERUPDATESUBMODULERESPONSE = _descriptor.Descriptor(
  name='UserUpdateSubmoduleResponse',
  full_name='gitaly.UserUpdateSubmoduleResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='branch_update', full_name='gitaly.UserUpdateSubmoduleResponse.branch_update', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pre_receive_error', full_name='gitaly.UserUpdateSubmoduleResponse.pre_receive_error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_error', full_name='gitaly.UserUpdateSubmoduleResponse.commit_error', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7047,
  serialized_end=7204,
)

_USERCREATEBRANCHREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERCREATEBRANCHREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERCREATEBRANCHRESPONSE.fields_by_name['branch'].message_type = shared__pb2._BRANCH
_USERUPDATEBRANCHREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERUPDATEBRANCHREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERDELETEBRANCHREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERDELETEBRANCHREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERDELETEBRANCHERROR.fields_by_name['access_check'].message_type = errors__pb2._ACCESSCHECKERROR
_USERDELETEBRANCHERROR.fields_by_name['reference_update'].message_type = errors__pb2._REFERENCEUPDATEERROR
_USERDELETEBRANCHERROR.fields_by_name['custom_hook'].message_type = errors__pb2._CUSTOMHOOKERROR
_USERDELETEBRANCHERROR.oneofs_by_name['error'].fields.append(
  _USERDELETEBRANCHERROR.fields_by_name['access_check'])
_USERDELETEBRANCHERROR.fields_by_name['access_check'].containing_oneof = _USERDELETEBRANCHERROR.oneofs_by_name['error']
_USERDELETEBRANCHERROR.oneofs_by_name['error'].fields.append(
  _USERDELETEBRANCHERROR.fields_by_name['reference_update'])
_USERDELETEBRANCHERROR.fields_by_name['reference_update'].containing_oneof = _USERDELETEBRANCHERROR.oneofs_by_name['error']
_USERDELETEBRANCHERROR.oneofs_by_name['error'].fields.append(
  _USERDELETEBRANCHERROR.fields_by_name['custom_hook'])
_USERDELETEBRANCHERROR.fields_by_name['custom_hook'].containing_oneof = _USERDELETEBRANCHERROR.oneofs_by_name['error']
_USERDELETETAGREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERDELETETAGREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERCREATETAGREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERCREATETAGREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERCREATETAGREQUEST.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_USERCREATETAGRESPONSE.fields_by_name['tag'].message_type = shared__pb2._TAG
_USERMERGEBRANCHREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERMERGEBRANCHREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERMERGEBRANCHREQUEST.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_USERMERGEBRANCHRESPONSE.fields_by_name['branch_update'].message_type = _OPERATIONBRANCHUPDATE
_USERMERGEBRANCHERROR.fields_by_name['access_check'].message_type = errors__pb2._ACCESSCHECKERROR
_USERMERGEBRANCHERROR.fields_by_name['reference_update'].message_type = errors__pb2._REFERENCEUPDATEERROR
_USERMERGEBRANCHERROR.fields_by_name['custom_hook'].message_type = errors__pb2._CUSTOMHOOKERROR
_USERMERGEBRANCHERROR.fields_by_name['merge_conflict'].message_type = errors__pb2._MERGECONFLICTERROR
_USERMERGEBRANCHERROR.oneofs_by_name['error'].fields.append(
  _USERMERGEBRANCHERROR.fields_by_name['access_check'])
_USERMERGEBRANCHERROR.fields_by_name['access_check'].containing_oneof = _USERMERGEBRANCHERROR.oneofs_by_name['error']
_USERMERGEBRANCHERROR.oneofs_by_name['error'].fields.append(
  _USERMERGEBRANCHERROR.fields_by_name['reference_update'])
_USERMERGEBRANCHERROR.fields_by_name['reference_update'].containing_oneof = _USERMERGEBRANCHERROR.oneofs_by_name['error']
_USERMERGEBRANCHERROR.oneofs_by_name['error'].fields.append(
  _USERMERGEBRANCHERROR.fields_by_name['custom_hook'])
_USERMERGEBRANCHERROR.fields_by_name['custom_hook'].containing_oneof = _USERMERGEBRANCHERROR.oneofs_by_name['error']
_USERMERGEBRANCHERROR.oneofs_by_name['error'].fields.append(
  _USERMERGEBRANCHERROR.fields_by_name['merge_conflict'])
_USERMERGEBRANCHERROR.fields_by_name['merge_conflict'].containing_oneof = _USERMERGEBRANCHERROR.oneofs_by_name['error']
_USERMERGETOREFREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERMERGETOREFREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERMERGETOREFREQUEST.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_USERFFBRANCHREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERFFBRANCHREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERFFBRANCHRESPONSE.fields_by_name['branch_update'].message_type = _OPERATIONBRANCHUPDATE
_USERCHERRYPICKREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERCHERRYPICKREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERCHERRYPICKREQUEST.fields_by_name['commit'].message_type = shared__pb2._GITCOMMIT
_USERCHERRYPICKREQUEST.fields_by_name['start_repository'].message_type = shared__pb2._REPOSITORY
_USERCHERRYPICKREQUEST.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_USERCHERRYPICKRESPONSE.fields_by_name['branch_update'].message_type = _OPERATIONBRANCHUPDATE
_USERCHERRYPICKRESPONSE.fields_by_name['create_tree_error_code'].enum_type = _USERCHERRYPICKRESPONSE_CREATETREEERROR
_USERCHERRYPICKRESPONSE_CREATETREEERROR.containing_type = _USERCHERRYPICKRESPONSE
_USERCHERRYPICKERROR.fields_by_name['cherry_pick_conflict'].message_type = errors__pb2._MERGECONFLICTERROR
_USERCHERRYPICKERROR.fields_by_name['target_branch_diverged'].message_type = errors__pb2._NOTANCESTORERROR
_USERCHERRYPICKERROR.fields_by_name['changes_already_applied'].message_type = errors__pb2._CHANGESALREADYAPPLIEDERROR
_USERCHERRYPICKERROR.fields_by_name['access_check'].message_type = errors__pb2._ACCESSCHECKERROR
_USERCHERRYPICKERROR.oneofs_by_name['error'].fields.append(
  _USERCHERRYPICKERROR.fields_by_name['cherry_pick_conflict'])
_USERCHERRYPICKERROR.fields_by_name['cherry_pick_conflict'].containing_oneof = _USERCHERRYPICKERROR.oneofs_by_name['error']
_USERCHERRYPICKERROR.oneofs_by_name['error'].fields.append(
  _USERCHERRYPICKERROR.fields_by_name['target_branch_diverged'])
_USERCHERRYPICKERROR.fields_by_name['target_branch_diverged'].containing_oneof = _USERCHERRYPICKERROR.oneofs_by_name['error']
_USERCHERRYPICKERROR.oneofs_by_name['error'].fields.append(
  _USERCHERRYPICKERROR.fields_by_name['changes_already_applied'])
_USERCHERRYPICKERROR.fields_by_name['changes_already_applied'].containing_oneof = _USERCHERRYPICKERROR.oneofs_by_name['error']
_USERCHERRYPICKERROR.oneofs_by_name['error'].fields.append(
  _USERCHERRYPICKERROR.fields_by_name['access_check'])
_USERCHERRYPICKERROR.fields_by_name['access_check'].containing_oneof = _USERCHERRYPICKERROR.oneofs_by_name['error']
_USERREVERTREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERREVERTREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERREVERTREQUEST.fields_by_name['commit'].message_type = shared__pb2._GITCOMMIT
_USERREVERTREQUEST.fields_by_name['start_repository'].message_type = shared__pb2._REPOSITORY
_USERREVERTREQUEST.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_USERREVERTRESPONSE.fields_by_name['branch_update'].message_type = _OPERATIONBRANCHUPDATE
_USERREVERTRESPONSE.fields_by_name['create_tree_error_code'].enum_type = _USERREVERTRESPONSE_CREATETREEERROR
_USERREVERTRESPONSE_CREATETREEERROR.containing_type = _USERREVERTRESPONSE
_USERCOMMITFILESACTIONHEADER.fields_by_name['action'].enum_type = _USERCOMMITFILESACTIONHEADER_ACTIONTYPE
_USERCOMMITFILESACTIONHEADER_ACTIONTYPE.containing_type = _USERCOMMITFILESACTIONHEADER
_USERCOMMITFILESACTION.fields_by_name['header'].message_type = _USERCOMMITFILESACTIONHEADER
_USERCOMMITFILESACTION.oneofs_by_name['user_commit_files_action_payload'].fields.append(
  _USERCOMMITFILESACTION.fields_by_name['header'])
_USERCOMMITFILESACTION.fields_by_name['header'].containing_oneof = _USERCOMMITFILESACTION.oneofs_by_name['user_commit_files_action_payload']
_USERCOMMITFILESACTION.oneofs_by_name['user_commit_files_action_payload'].fields.append(
  _USERCOMMITFILESACTION.fields_by_name['content'])
_USERCOMMITFILESACTION.fields_by_name['content'].containing_oneof = _USERCOMMITFILESACTION.oneofs_by_name['user_commit_files_action_payload']
_USERCOMMITFILESREQUESTHEADER.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERCOMMITFILESREQUESTHEADER.fields_by_name['user'].message_type = shared__pb2._USER
_USERCOMMITFILESREQUESTHEADER.fields_by_name['start_repository'].message_type = shared__pb2._REPOSITORY
_USERCOMMITFILESREQUESTHEADER.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_USERCOMMITFILESREQUEST.fields_by_name['header'].message_type = _USERCOMMITFILESREQUESTHEADER
_USERCOMMITFILESREQUEST.fields_by_name['action'].message_type = _USERCOMMITFILESACTION
_USERCOMMITFILESREQUEST.oneofs_by_name['user_commit_files_request_payload'].fields.append(
  _USERCOMMITFILESREQUEST.fields_by_name['header'])
_USERCOMMITFILESREQUEST.fields_by_name['header'].containing_oneof = _USERCOMMITFILESREQUEST.oneofs_by_name['user_commit_files_request_payload']
_USERCOMMITFILESREQUEST.oneofs_by_name['user_commit_files_request_payload'].fields.append(
  _USERCOMMITFILESREQUEST.fields_by_name['action'])
_USERCOMMITFILESREQUEST.fields_by_name['action'].containing_oneof = _USERCOMMITFILESREQUEST.oneofs_by_name['user_commit_files_request_payload']
_USERCOMMITFILESRESPONSE.fields_by_name['branch_update'].message_type = _OPERATIONBRANCHUPDATE
_USERREBASECONFIRMABLEREQUEST_HEADER.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERREBASECONFIRMABLEREQUEST_HEADER.fields_by_name['user'].message_type = shared__pb2._USER
_USERREBASECONFIRMABLEREQUEST_HEADER.fields_by_name['remote_repository'].message_type = shared__pb2._REPOSITORY
_USERREBASECONFIRMABLEREQUEST_HEADER.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_USERREBASECONFIRMABLEREQUEST_HEADER.containing_type = _USERREBASECONFIRMABLEREQUEST
_USERREBASECONFIRMABLEREQUEST.fields_by_name['header'].message_type = _USERREBASECONFIRMABLEREQUEST_HEADER
_USERREBASECONFIRMABLEREQUEST.oneofs_by_name['user_rebase_confirmable_request_payload'].fields.append(
  _USERREBASECONFIRMABLEREQUEST.fields_by_name['header'])
_USERREBASECONFIRMABLEREQUEST.fields_by_name['header'].containing_oneof = _USERREBASECONFIRMABLEREQUEST.oneofs_by_name['user_rebase_confirmable_request_payload']
_USERREBASECONFIRMABLEREQUEST.oneofs_by_name['user_rebase_confirmable_request_payload'].fields.append(
  _USERREBASECONFIRMABLEREQUEST.fields_by_name['apply'])
_USERREBASECONFIRMABLEREQUEST.fields_by_name['apply'].containing_oneof = _USERREBASECONFIRMABLEREQUEST.oneofs_by_name['user_rebase_confirmable_request_payload']
_USERREBASECONFIRMABLERESPONSE.oneofs_by_name['user_rebase_confirmable_response_payload'].fields.append(
  _USERREBASECONFIRMABLERESPONSE.fields_by_name['rebase_sha'])
_USERREBASECONFIRMABLERESPONSE.fields_by_name['rebase_sha'].containing_oneof = _USERREBASECONFIRMABLERESPONSE.oneofs_by_name['user_rebase_confirmable_response_payload']
_USERREBASECONFIRMABLERESPONSE.oneofs_by_name['user_rebase_confirmable_response_payload'].fields.append(
  _USERREBASECONFIRMABLERESPONSE.fields_by_name['rebase_applied'])
_USERREBASECONFIRMABLERESPONSE.fields_by_name['rebase_applied'].containing_oneof = _USERREBASECONFIRMABLERESPONSE.oneofs_by_name['user_rebase_confirmable_response_payload']
_USERSQUASHREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERSQUASHREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERSQUASHREQUEST.fields_by_name['author'].message_type = shared__pb2._USER
_USERSQUASHREQUEST.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_USERREBASECONFIRMABLEERROR.fields_by_name['rebase_conflict'].message_type = errors__pb2._MERGECONFLICTERROR
_USERREBASECONFIRMABLEERROR.fields_by_name['access_check'].message_type = errors__pb2._ACCESSCHECKERROR
_USERREBASECONFIRMABLEERROR.oneofs_by_name['error'].fields.append(
  _USERREBASECONFIRMABLEERROR.fields_by_name['rebase_conflict'])
_USERREBASECONFIRMABLEERROR.fields_by_name['rebase_conflict'].containing_oneof = _USERREBASECONFIRMABLEERROR.oneofs_by_name['error']
_USERREBASECONFIRMABLEERROR.oneofs_by_name['error'].fields.append(
  _USERREBASECONFIRMABLEERROR.fields_by_name['access_check'])
_USERREBASECONFIRMABLEERROR.fields_by_name['access_check'].containing_oneof = _USERREBASECONFIRMABLEERROR.oneofs_by_name['error']
_USERSQUASHERROR.fields_by_name['resolve_revision'].message_type = errors__pb2._RESOLVEREVISIONERROR
_USERSQUASHERROR.fields_by_name['rebase_conflict'].message_type = errors__pb2._MERGECONFLICTERROR
_USERSQUASHERROR.oneofs_by_name['error'].fields.append(
  _USERSQUASHERROR.fields_by_name['resolve_revision'])
_USERSQUASHERROR.fields_by_name['resolve_revision'].containing_oneof = _USERSQUASHERROR.oneofs_by_name['error']
_USERSQUASHERROR.oneofs_by_name['error'].fields.append(
  _USERSQUASHERROR.fields_by_name['rebase_conflict'])
_USERSQUASHERROR.fields_by_name['rebase_conflict'].containing_oneof = _USERSQUASHERROR.oneofs_by_name['error']
_USERAPPLYPATCHREQUEST_HEADER.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERAPPLYPATCHREQUEST_HEADER.fields_by_name['user'].message_type = shared__pb2._USER
_USERAPPLYPATCHREQUEST_HEADER.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_USERAPPLYPATCHREQUEST_HEADER.containing_type = _USERAPPLYPATCHREQUEST
_USERAPPLYPATCHREQUEST.fields_by_name['header'].message_type = _USERAPPLYPATCHREQUEST_HEADER
_USERAPPLYPATCHREQUEST.oneofs_by_name['user_apply_patch_request_payload'].fields.append(
  _USERAPPLYPATCHREQUEST.fields_by_name['header'])
_USERAPPLYPATCHREQUEST.fields_by_name['header'].containing_oneof = _USERAPPLYPATCHREQUEST.oneofs_by_name['user_apply_patch_request_payload']
_USERAPPLYPATCHREQUEST.oneofs_by_name['user_apply_patch_request_payload'].fields.append(
  _USERAPPLYPATCHREQUEST.fields_by_name['patches'])
_USERAPPLYPATCHREQUEST.fields_by_name['patches'].containing_oneof = _USERAPPLYPATCHREQUEST.oneofs_by_name['user_apply_patch_request_payload']
_USERAPPLYPATCHRESPONSE.fields_by_name['branch_update'].message_type = _OPERATIONBRANCHUPDATE
_USERUPDATESUBMODULEREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_USERUPDATESUBMODULEREQUEST.fields_by_name['user'].message_type = shared__pb2._USER
_USERUPDATESUBMODULEREQUEST.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_USERUPDATESUBMODULERESPONSE.fields_by_name['branch_update'].message_type = _OPERATIONBRANCHUPDATE
DESCRIPTOR.message_types_by_name['UserCreateBranchRequest'] = _USERCREATEBRANCHREQUEST
DESCRIPTOR.message_types_by_name['UserCreateBranchResponse'] = _USERCREATEBRANCHRESPONSE
DESCRIPTOR.message_types_by_name['UserUpdateBranchRequest'] = _USERUPDATEBRANCHREQUEST
DESCRIPTOR.message_types_by_name['UserUpdateBranchResponse'] = _USERUPDATEBRANCHRESPONSE
DESCRIPTOR.message_types_by_name['UserDeleteBranchRequest'] = _USERDELETEBRANCHREQUEST
DESCRIPTOR.message_types_by_name['UserDeleteBranchResponse'] = _USERDELETEBRANCHRESPONSE
DESCRIPTOR.message_types_by_name['UserDeleteBranchError'] = _USERDELETEBRANCHERROR
DESCRIPTOR.message_types_by_name['UserDeleteTagRequest'] = _USERDELETETAGREQUEST
DESCRIPTOR.message_types_by_name['UserDeleteTagResponse'] = _USERDELETETAGRESPONSE
DESCRIPTOR.message_types_by_name['UserCreateTagRequest'] = _USERCREATETAGREQUEST
DESCRIPTOR.message_types_by_name['UserCreateTagResponse'] = _USERCREATETAGRESPONSE
DESCRIPTOR.message_types_by_name['UserMergeBranchRequest'] = _USERMERGEBRANCHREQUEST
DESCRIPTOR.message_types_by_name['UserMergeBranchResponse'] = _USERMERGEBRANCHRESPONSE
DESCRIPTOR.message_types_by_name['UserMergeBranchError'] = _USERMERGEBRANCHERROR
DESCRIPTOR.message_types_by_name['UserMergeToRefRequest'] = _USERMERGETOREFREQUEST
DESCRIPTOR.message_types_by_name['UserMergeToRefResponse'] = _USERMERGETOREFRESPONSE
DESCRIPTOR.message_types_by_name['OperationBranchUpdate'] = _OPERATIONBRANCHUPDATE
DESCRIPTOR.message_types_by_name['UserFFBranchRequest'] = _USERFFBRANCHREQUEST
DESCRIPTOR.message_types_by_name['UserFFBranchResponse'] = _USERFFBRANCHRESPONSE
DESCRIPTOR.message_types_by_name['UserCherryPickRequest'] = _USERCHERRYPICKREQUEST
DESCRIPTOR.message_types_by_name['UserCherryPickResponse'] = _USERCHERRYPICKRESPONSE
DESCRIPTOR.message_types_by_name['UserCherryPickError'] = _USERCHERRYPICKERROR
DESCRIPTOR.message_types_by_name['UserRevertRequest'] = _USERREVERTREQUEST
DESCRIPTOR.message_types_by_name['UserRevertResponse'] = _USERREVERTRESPONSE
DESCRIPTOR.message_types_by_name['UserCommitFilesActionHeader'] = _USERCOMMITFILESACTIONHEADER
DESCRIPTOR.message_types_by_name['UserCommitFilesAction'] = _USERCOMMITFILESACTION
DESCRIPTOR.message_types_by_name['UserCommitFilesRequestHeader'] = _USERCOMMITFILESREQUESTHEADER
DESCRIPTOR.message_types_by_name['UserCommitFilesRequest'] = _USERCOMMITFILESREQUEST
DESCRIPTOR.message_types_by_name['UserCommitFilesResponse'] = _USERCOMMITFILESRESPONSE
DESCRIPTOR.message_types_by_name['UserRebaseConfirmableRequest'] = _USERREBASECONFIRMABLEREQUEST
DESCRIPTOR.message_types_by_name['UserRebaseConfirmableResponse'] = _USERREBASECONFIRMABLERESPONSE
DESCRIPTOR.message_types_by_name['UserSquashRequest'] = _USERSQUASHREQUEST
DESCRIPTOR.message_types_by_name['UserSquashResponse'] = _USERSQUASHRESPONSE
DESCRIPTOR.message_types_by_name['UserRebaseConfirmableError'] = _USERREBASECONFIRMABLEERROR
DESCRIPTOR.message_types_by_name['UserSquashError'] = _USERSQUASHERROR
DESCRIPTOR.message_types_by_name['UserApplyPatchRequest'] = _USERAPPLYPATCHREQUEST
DESCRIPTOR.message_types_by_name['UserApplyPatchResponse'] = _USERAPPLYPATCHRESPONSE
DESCRIPTOR.message_types_by_name['UserUpdateSubmoduleRequest'] = _USERUPDATESUBMODULEREQUEST
DESCRIPTOR.message_types_by_name['UserUpdateSubmoduleResponse'] = _USERUPDATESUBMODULERESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

UserCreateBranchRequest = _reflection.GeneratedProtocolMessageType('UserCreateBranchRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERCREATEBRANCHREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCreateBranchRequest)
  ))
_sym_db.RegisterMessage(UserCreateBranchRequest)

UserCreateBranchResponse = _reflection.GeneratedProtocolMessageType('UserCreateBranchResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERCREATEBRANCHRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCreateBranchResponse)
  ))
_sym_db.RegisterMessage(UserCreateBranchResponse)

UserUpdateBranchRequest = _reflection.GeneratedProtocolMessageType('UserUpdateBranchRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERUPDATEBRANCHREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserUpdateBranchRequest)
  ))
_sym_db.RegisterMessage(UserUpdateBranchRequest)

UserUpdateBranchResponse = _reflection.GeneratedProtocolMessageType('UserUpdateBranchResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERUPDATEBRANCHRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserUpdateBranchResponse)
  ))
_sym_db.RegisterMessage(UserUpdateBranchResponse)

UserDeleteBranchRequest = _reflection.GeneratedProtocolMessageType('UserDeleteBranchRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERDELETEBRANCHREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserDeleteBranchRequest)
  ))
_sym_db.RegisterMessage(UserDeleteBranchRequest)

UserDeleteBranchResponse = _reflection.GeneratedProtocolMessageType('UserDeleteBranchResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERDELETEBRANCHRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserDeleteBranchResponse)
  ))
_sym_db.RegisterMessage(UserDeleteBranchResponse)

UserDeleteBranchError = _reflection.GeneratedProtocolMessageType('UserDeleteBranchError', (_message.Message,), dict(
  DESCRIPTOR = _USERDELETEBRANCHERROR,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserDeleteBranchError)
  ))
_sym_db.RegisterMessage(UserDeleteBranchError)

UserDeleteTagRequest = _reflection.GeneratedProtocolMessageType('UserDeleteTagRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERDELETETAGREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserDeleteTagRequest)
  ))
_sym_db.RegisterMessage(UserDeleteTagRequest)

UserDeleteTagResponse = _reflection.GeneratedProtocolMessageType('UserDeleteTagResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERDELETETAGRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserDeleteTagResponse)
  ))
_sym_db.RegisterMessage(UserDeleteTagResponse)

UserCreateTagRequest = _reflection.GeneratedProtocolMessageType('UserCreateTagRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERCREATETAGREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCreateTagRequest)
  ))
_sym_db.RegisterMessage(UserCreateTagRequest)

UserCreateTagResponse = _reflection.GeneratedProtocolMessageType('UserCreateTagResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERCREATETAGRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCreateTagResponse)
  ))
_sym_db.RegisterMessage(UserCreateTagResponse)

UserMergeBranchRequest = _reflection.GeneratedProtocolMessageType('UserMergeBranchRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERMERGEBRANCHREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserMergeBranchRequest)
  ))
_sym_db.RegisterMessage(UserMergeBranchRequest)

UserMergeBranchResponse = _reflection.GeneratedProtocolMessageType('UserMergeBranchResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERMERGEBRANCHRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserMergeBranchResponse)
  ))
_sym_db.RegisterMessage(UserMergeBranchResponse)

UserMergeBranchError = _reflection.GeneratedProtocolMessageType('UserMergeBranchError', (_message.Message,), dict(
  DESCRIPTOR = _USERMERGEBRANCHERROR,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserMergeBranchError)
  ))
_sym_db.RegisterMessage(UserMergeBranchError)

UserMergeToRefRequest = _reflection.GeneratedProtocolMessageType('UserMergeToRefRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERMERGETOREFREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserMergeToRefRequest)
  ))
_sym_db.RegisterMessage(UserMergeToRefRequest)

UserMergeToRefResponse = _reflection.GeneratedProtocolMessageType('UserMergeToRefResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERMERGETOREFRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserMergeToRefResponse)
  ))
_sym_db.RegisterMessage(UserMergeToRefResponse)

OperationBranchUpdate = _reflection.GeneratedProtocolMessageType('OperationBranchUpdate', (_message.Message,), dict(
  DESCRIPTOR = _OPERATIONBRANCHUPDATE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.OperationBranchUpdate)
  ))
_sym_db.RegisterMessage(OperationBranchUpdate)

UserFFBranchRequest = _reflection.GeneratedProtocolMessageType('UserFFBranchRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERFFBRANCHREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserFFBranchRequest)
  ))
_sym_db.RegisterMessage(UserFFBranchRequest)

UserFFBranchResponse = _reflection.GeneratedProtocolMessageType('UserFFBranchResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERFFBRANCHRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserFFBranchResponse)
  ))
_sym_db.RegisterMessage(UserFFBranchResponse)

UserCherryPickRequest = _reflection.GeneratedProtocolMessageType('UserCherryPickRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERCHERRYPICKREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCherryPickRequest)
  ))
_sym_db.RegisterMessage(UserCherryPickRequest)

UserCherryPickResponse = _reflection.GeneratedProtocolMessageType('UserCherryPickResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERCHERRYPICKRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCherryPickResponse)
  ))
_sym_db.RegisterMessage(UserCherryPickResponse)

UserCherryPickError = _reflection.GeneratedProtocolMessageType('UserCherryPickError', (_message.Message,), dict(
  DESCRIPTOR = _USERCHERRYPICKERROR,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCherryPickError)
  ))
_sym_db.RegisterMessage(UserCherryPickError)

UserRevertRequest = _reflection.GeneratedProtocolMessageType('UserRevertRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERREVERTREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserRevertRequest)
  ))
_sym_db.RegisterMessage(UserRevertRequest)

UserRevertResponse = _reflection.GeneratedProtocolMessageType('UserRevertResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERREVERTRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserRevertResponse)
  ))
_sym_db.RegisterMessage(UserRevertResponse)

UserCommitFilesActionHeader = _reflection.GeneratedProtocolMessageType('UserCommitFilesActionHeader', (_message.Message,), dict(
  DESCRIPTOR = _USERCOMMITFILESACTIONHEADER,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCommitFilesActionHeader)
  ))
_sym_db.RegisterMessage(UserCommitFilesActionHeader)

UserCommitFilesAction = _reflection.GeneratedProtocolMessageType('UserCommitFilesAction', (_message.Message,), dict(
  DESCRIPTOR = _USERCOMMITFILESACTION,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCommitFilesAction)
  ))
_sym_db.RegisterMessage(UserCommitFilesAction)

UserCommitFilesRequestHeader = _reflection.GeneratedProtocolMessageType('UserCommitFilesRequestHeader', (_message.Message,), dict(
  DESCRIPTOR = _USERCOMMITFILESREQUESTHEADER,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCommitFilesRequestHeader)
  ))
_sym_db.RegisterMessage(UserCommitFilesRequestHeader)

UserCommitFilesRequest = _reflection.GeneratedProtocolMessageType('UserCommitFilesRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERCOMMITFILESREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCommitFilesRequest)
  ))
_sym_db.RegisterMessage(UserCommitFilesRequest)

UserCommitFilesResponse = _reflection.GeneratedProtocolMessageType('UserCommitFilesResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERCOMMITFILESRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserCommitFilesResponse)
  ))
_sym_db.RegisterMessage(UserCommitFilesResponse)

UserRebaseConfirmableRequest = _reflection.GeneratedProtocolMessageType('UserRebaseConfirmableRequest', (_message.Message,), dict(

  Header = _reflection.GeneratedProtocolMessageType('Header', (_message.Message,), dict(
    DESCRIPTOR = _USERREBASECONFIRMABLEREQUEST_HEADER,
    __module__ = 'operations_pb2'
    # @@protoc_insertion_point(class_scope:gitaly.UserRebaseConfirmableRequest.Header)
    ))
  ,
  DESCRIPTOR = _USERREBASECONFIRMABLEREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserRebaseConfirmableRequest)
  ))
_sym_db.RegisterMessage(UserRebaseConfirmableRequest)
_sym_db.RegisterMessage(UserRebaseConfirmableRequest.Header)

UserRebaseConfirmableResponse = _reflection.GeneratedProtocolMessageType('UserRebaseConfirmableResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERREBASECONFIRMABLERESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserRebaseConfirmableResponse)
  ))
_sym_db.RegisterMessage(UserRebaseConfirmableResponse)

UserSquashRequest = _reflection.GeneratedProtocolMessageType('UserSquashRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERSQUASHREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserSquashRequest)
  ))
_sym_db.RegisterMessage(UserSquashRequest)

UserSquashResponse = _reflection.GeneratedProtocolMessageType('UserSquashResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERSQUASHRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserSquashResponse)
  ))
_sym_db.RegisterMessage(UserSquashResponse)

UserRebaseConfirmableError = _reflection.GeneratedProtocolMessageType('UserRebaseConfirmableError', (_message.Message,), dict(
  DESCRIPTOR = _USERREBASECONFIRMABLEERROR,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserRebaseConfirmableError)
  ))
_sym_db.RegisterMessage(UserRebaseConfirmableError)

UserSquashError = _reflection.GeneratedProtocolMessageType('UserSquashError', (_message.Message,), dict(
  DESCRIPTOR = _USERSQUASHERROR,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserSquashError)
  ))
_sym_db.RegisterMessage(UserSquashError)

UserApplyPatchRequest = _reflection.GeneratedProtocolMessageType('UserApplyPatchRequest', (_message.Message,), dict(

  Header = _reflection.GeneratedProtocolMessageType('Header', (_message.Message,), dict(
    DESCRIPTOR = _USERAPPLYPATCHREQUEST_HEADER,
    __module__ = 'operations_pb2'
    # @@protoc_insertion_point(class_scope:gitaly.UserApplyPatchRequest.Header)
    ))
  ,
  DESCRIPTOR = _USERAPPLYPATCHREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserApplyPatchRequest)
  ))
_sym_db.RegisterMessage(UserApplyPatchRequest)
_sym_db.RegisterMessage(UserApplyPatchRequest.Header)

UserApplyPatchResponse = _reflection.GeneratedProtocolMessageType('UserApplyPatchResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERAPPLYPATCHRESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserApplyPatchResponse)
  ))
_sym_db.RegisterMessage(UserApplyPatchResponse)

UserUpdateSubmoduleRequest = _reflection.GeneratedProtocolMessageType('UserUpdateSubmoduleRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERUPDATESUBMODULEREQUEST,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserUpdateSubmoduleRequest)
  ))
_sym_db.RegisterMessage(UserUpdateSubmoduleRequest)

UserUpdateSubmoduleResponse = _reflection.GeneratedProtocolMessageType('UserUpdateSubmoduleResponse', (_message.Message,), dict(
  DESCRIPTOR = _USERUPDATESUBMODULERESPONSE,
  __module__ = 'operations_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.UserUpdateSubmoduleResponse)
  ))
_sym_db.RegisterMessage(UserUpdateSubmoduleResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z2gitlab.com/gitlab-org/gitaly/v15/proto/go/gitalypb'))
_USERCREATEBRANCHREQUEST.fields_by_name['repository'].has_options = True
_USERCREATEBRANCHREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERUPDATEBRANCHREQUEST.fields_by_name['repository'].has_options = True
_USERUPDATEBRANCHREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERDELETEBRANCHREQUEST.fields_by_name['repository'].has_options = True
_USERDELETEBRANCHREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERDELETEBRANCHRESPONSE.fields_by_name['pre_receive_error'].has_options = True
_USERDELETEBRANCHRESPONSE.fields_by_name['pre_receive_error']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001'))
_USERDELETETAGREQUEST.fields_by_name['repository'].has_options = True
_USERDELETETAGREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERCREATETAGREQUEST.fields_by_name['repository'].has_options = True
_USERCREATETAGREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERMERGEBRANCHREQUEST.fields_by_name['repository'].has_options = True
_USERMERGEBRANCHREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERMERGETOREFREQUEST.fields_by_name['repository'].has_options = True
_USERMERGETOREFREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERFFBRANCHREQUEST.fields_by_name['repository'].has_options = True
_USERFFBRANCHREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERCHERRYPICKREQUEST.fields_by_name['repository'].has_options = True
_USERCHERRYPICKREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERREVERTREQUEST.fields_by_name['repository'].has_options = True
_USERREVERTREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERCOMMITFILESREQUESTHEADER.fields_by_name['repository'].has_options = True
_USERCOMMITFILESREQUESTHEADER.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERREBASECONFIRMABLEREQUEST_HEADER.fields_by_name['repository'].has_options = True
_USERREBASECONFIRMABLEREQUEST_HEADER.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERREBASECONFIRMABLEREQUEST_HEADER.fields_by_name['rebase_id'].has_options = True
_USERREBASECONFIRMABLEREQUEST_HEADER.fields_by_name['rebase_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001'))
_USERSQUASHREQUEST.fields_by_name['repository'].has_options = True
_USERSQUASHREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERAPPLYPATCHREQUEST_HEADER.fields_by_name['repository'].has_options = True
_USERAPPLYPATCHREQUEST_HEADER.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_USERUPDATESUBMODULEREQUEST.fields_by_name['repository'].has_options = True
_USERUPDATESUBMODULEREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))

_OPERATIONSERVICE = _descriptor.ServiceDescriptor(
  name='OperationService',
  full_name='gitaly.OperationService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=7207,
  serialized_end=8596,
  methods=[
  _descriptor.MethodDescriptor(
    name='UserCreateBranch',
    full_name='gitaly.OperationService.UserCreateBranch',
    index=0,
    containing_service=None,
    input_type=_USERCREATEBRANCHREQUEST,
    output_type=_USERCREATEBRANCHRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserUpdateBranch',
    full_name='gitaly.OperationService.UserUpdateBranch',
    index=1,
    containing_service=None,
    input_type=_USERUPDATEBRANCHREQUEST,
    output_type=_USERUPDATEBRANCHRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserDeleteBranch',
    full_name='gitaly.OperationService.UserDeleteBranch',
    index=2,
    containing_service=None,
    input_type=_USERDELETEBRANCHREQUEST,
    output_type=_USERDELETEBRANCHRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserCreateTag',
    full_name='gitaly.OperationService.UserCreateTag',
    index=3,
    containing_service=None,
    input_type=_USERCREATETAGREQUEST,
    output_type=_USERCREATETAGRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserDeleteTag',
    full_name='gitaly.OperationService.UserDeleteTag',
    index=4,
    containing_service=None,
    input_type=_USERDELETETAGREQUEST,
    output_type=_USERDELETETAGRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserMergeToRef',
    full_name='gitaly.OperationService.UserMergeToRef',
    index=5,
    containing_service=None,
    input_type=_USERMERGETOREFREQUEST,
    output_type=_USERMERGETOREFRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserMergeBranch',
    full_name='gitaly.OperationService.UserMergeBranch',
    index=6,
    containing_service=None,
    input_type=_USERMERGEBRANCHREQUEST,
    output_type=_USERMERGEBRANCHRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserFFBranch',
    full_name='gitaly.OperationService.UserFFBranch',
    index=7,
    containing_service=None,
    input_type=_USERFFBRANCHREQUEST,
    output_type=_USERFFBRANCHRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserCherryPick',
    full_name='gitaly.OperationService.UserCherryPick',
    index=8,
    containing_service=None,
    input_type=_USERCHERRYPICKREQUEST,
    output_type=_USERCHERRYPICKRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserCommitFiles',
    full_name='gitaly.OperationService.UserCommitFiles',
    index=9,
    containing_service=None,
    input_type=_USERCOMMITFILESREQUEST,
    output_type=_USERCOMMITFILESRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserRebaseConfirmable',
    full_name='gitaly.OperationService.UserRebaseConfirmable',
    index=10,
    containing_service=None,
    input_type=_USERREBASECONFIRMABLEREQUEST,
    output_type=_USERREBASECONFIRMABLERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserRevert',
    full_name='gitaly.OperationService.UserRevert',
    index=11,
    containing_service=None,
    input_type=_USERREVERTREQUEST,
    output_type=_USERREVERTRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserSquash',
    full_name='gitaly.OperationService.UserSquash',
    index=12,
    containing_service=None,
    input_type=_USERSQUASHREQUEST,
    output_type=_USERSQUASHRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserApplyPatch',
    full_name='gitaly.OperationService.UserApplyPatch',
    index=13,
    containing_service=None,
    input_type=_USERAPPLYPATCHREQUEST,
    output_type=_USERAPPLYPATCHRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
  _descriptor.MethodDescriptor(
    name='UserUpdateSubmodule',
    full_name='gitaly.OperationService.UserUpdateSubmodule',
    index=14,
    containing_service=None,
    input_type=_USERUPDATESUBMODULEREQUEST,
    output_type=_USERUPDATESUBMODULERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
])
_sym_db.RegisterServiceDescriptor(_OPERATIONSERVICE)

DESCRIPTOR.services_by_name['OperationService'] = _OPERATIONSERVICE

# @@protoc_insertion_point(module_scope)
