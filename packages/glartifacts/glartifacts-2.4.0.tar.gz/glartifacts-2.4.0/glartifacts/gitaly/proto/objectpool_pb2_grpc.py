# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import objectpool_pb2 as objectpool__pb2


class ObjectPoolServiceStub(object):
  """ObjectPoolService is a service containing RPCs to manipulate object pools.
  An object pool is a separate repository that can be linked to from multiple
  satellite repositories in order to deduplicate common objects between them.
  This is mostly used in the contexet of repository forks.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateObjectPool = channel.unary_unary(
        '/gitaly.ObjectPoolService/CreateObjectPool',
        request_serializer=objectpool__pb2.CreateObjectPoolRequest.SerializeToString,
        response_deserializer=objectpool__pb2.CreateObjectPoolResponse.FromString,
        )
    self.DeleteObjectPool = channel.unary_unary(
        '/gitaly.ObjectPoolService/DeleteObjectPool',
        request_serializer=objectpool__pb2.DeleteObjectPoolRequest.SerializeToString,
        response_deserializer=objectpool__pb2.DeleteObjectPoolResponse.FromString,
        )
    self.LinkRepositoryToObjectPool = channel.unary_unary(
        '/gitaly.ObjectPoolService/LinkRepositoryToObjectPool',
        request_serializer=objectpool__pb2.LinkRepositoryToObjectPoolRequest.SerializeToString,
        response_deserializer=objectpool__pb2.LinkRepositoryToObjectPoolResponse.FromString,
        )
    self.ReduplicateRepository = channel.unary_unary(
        '/gitaly.ObjectPoolService/ReduplicateRepository',
        request_serializer=objectpool__pb2.ReduplicateRepositoryRequest.SerializeToString,
        response_deserializer=objectpool__pb2.ReduplicateRepositoryResponse.FromString,
        )
    self.DisconnectGitAlternates = channel.unary_unary(
        '/gitaly.ObjectPoolService/DisconnectGitAlternates',
        request_serializer=objectpool__pb2.DisconnectGitAlternatesRequest.SerializeToString,
        response_deserializer=objectpool__pb2.DisconnectGitAlternatesResponse.FromString,
        )
    self.FetchIntoObjectPool = channel.unary_unary(
        '/gitaly.ObjectPoolService/FetchIntoObjectPool',
        request_serializer=objectpool__pb2.FetchIntoObjectPoolRequest.SerializeToString,
        response_deserializer=objectpool__pb2.FetchIntoObjectPoolResponse.FromString,
        )
    self.GetObjectPool = channel.unary_unary(
        '/gitaly.ObjectPoolService/GetObjectPool',
        request_serializer=objectpool__pb2.GetObjectPoolRequest.SerializeToString,
        response_deserializer=objectpool__pb2.GetObjectPoolResponse.FromString,
        )


class ObjectPoolServiceServicer(object):
  """ObjectPoolService is a service containing RPCs to manipulate object pools.
  An object pool is a separate repository that can be linked to from multiple
  satellite repositories in order to deduplicate common objects between them.
  This is mostly used in the contexet of repository forks.
  """

  def CreateObjectPool(self, request, context):
    """This comment is left unintentionally blank.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteObjectPool(self, request, context):
    """This comment is left unintentionally blank.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LinkRepositoryToObjectPool(self, request, context):
    """Repositories are assumed to be stored on the same disk
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReduplicateRepository(self, request, context):
    """This comment is left unintentionally blank.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DisconnectGitAlternates(self, request, context):
    """This comment is left unintentionally blank.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FetchIntoObjectPool(self, request, context):
    """This comment is left unintentionally blank.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetObjectPool(self, request, context):
    """This comment is left unintentionally blank.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ObjectPoolServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateObjectPool': grpc.unary_unary_rpc_method_handler(
          servicer.CreateObjectPool,
          request_deserializer=objectpool__pb2.CreateObjectPoolRequest.FromString,
          response_serializer=objectpool__pb2.CreateObjectPoolResponse.SerializeToString,
      ),
      'DeleteObjectPool': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteObjectPool,
          request_deserializer=objectpool__pb2.DeleteObjectPoolRequest.FromString,
          response_serializer=objectpool__pb2.DeleteObjectPoolResponse.SerializeToString,
      ),
      'LinkRepositoryToObjectPool': grpc.unary_unary_rpc_method_handler(
          servicer.LinkRepositoryToObjectPool,
          request_deserializer=objectpool__pb2.LinkRepositoryToObjectPoolRequest.FromString,
          response_serializer=objectpool__pb2.LinkRepositoryToObjectPoolResponse.SerializeToString,
      ),
      'ReduplicateRepository': grpc.unary_unary_rpc_method_handler(
          servicer.ReduplicateRepository,
          request_deserializer=objectpool__pb2.ReduplicateRepositoryRequest.FromString,
          response_serializer=objectpool__pb2.ReduplicateRepositoryResponse.SerializeToString,
      ),
      'DisconnectGitAlternates': grpc.unary_unary_rpc_method_handler(
          servicer.DisconnectGitAlternates,
          request_deserializer=objectpool__pb2.DisconnectGitAlternatesRequest.FromString,
          response_serializer=objectpool__pb2.DisconnectGitAlternatesResponse.SerializeToString,
      ),
      'FetchIntoObjectPool': grpc.unary_unary_rpc_method_handler(
          servicer.FetchIntoObjectPool,
          request_deserializer=objectpool__pb2.FetchIntoObjectPoolRequest.FromString,
          response_serializer=objectpool__pb2.FetchIntoObjectPoolResponse.SerializeToString,
      ),
      'GetObjectPool': grpc.unary_unary_rpc_method_handler(
          servicer.GetObjectPool,
          request_deserializer=objectpool__pb2.GetObjectPoolRequest.FromString,
          response_serializer=objectpool__pb2.GetObjectPoolResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'gitaly.ObjectPoolService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
