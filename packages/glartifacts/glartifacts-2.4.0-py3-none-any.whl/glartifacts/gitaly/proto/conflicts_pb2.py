# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: conflicts.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from . import lint_pb2 as lint__pb2
from . import shared_pb2 as shared__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='conflicts.proto',
  package='gitaly',
  syntax='proto3',
  serialized_pb=_b('\n\x0f\x63onflicts.proto\x12\x06gitaly\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\nlint.proto\x1a\x0cshared.proto\"\x98\x01\n\x18ListConflictFilesRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x16\n\x0eour_commit_oid\x18\x02 \x01(\t\x12\x18\n\x10their_commit_oid\x18\x03 \x01(\t\x12\x1c\n\x14\x61llow_tree_conflicts\x18\x04 \x01(\x08\"}\n\x12\x43onflictFileHeader\x12\x12\n\ncommit_oid\x18\x02 \x01(\t\x12\x12\n\ntheir_path\x18\x03 \x01(\x0c\x12\x10\n\x08our_path\x18\x04 \x01(\x0c\x12\x10\n\x08our_mode\x18\x05 \x01(\x05\x12\x15\n\rancestor_path\x18\x06 \x01(\x0cJ\x04\x08\x01\x10\x02\"h\n\x0c\x43onflictFile\x12,\n\x06header\x18\x01 \x01(\x0b\x32\x1a.gitaly.ConflictFileHeaderH\x00\x12\x11\n\x07\x63ontent\x18\x02 \x01(\x0cH\x00\x42\x17\n\x15\x63onflict_file_payload\"@\n\x19ListConflictFilesResponse\x12#\n\x05\x66iles\x18\x01 \x03(\x0b\x32\x14.gitaly.ConflictFile\"\xbf\x02\n\x1dResolveConflictsRequestHeader\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x16\n\x0eour_commit_oid\x18\x02 \x01(\t\x12-\n\x11target_repository\x18\x03 \x01(\x0b\x32\x12.gitaly.Repository\x12\x18\n\x10their_commit_oid\x18\x04 \x01(\t\x12\x15\n\rsource_branch\x18\x05 \x01(\x0c\x12\x15\n\rtarget_branch\x18\x06 \x01(\x0c\x12\x16\n\x0e\x63ommit_message\x18\x07 \x01(\x0c\x12\x1a\n\x04user\x18\x08 \x01(\x0b\x32\x0c.gitaly.User\x12-\n\ttimestamp\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\x8d\x01\n\x17ResolveConflictsRequest\x12\x37\n\x06header\x18\x01 \x01(\x0b\x32%.gitaly.ResolveConflictsRequestHeaderH\x00\x12\x14\n\nfiles_json\x18\x02 \x01(\x0cH\x00\x42#\n!resolve_conflicts_request_payload\"4\n\x18ResolveConflictsResponse\x12\x18\n\x10resolution_error\x18\x01 \x01(\t2\xd7\x01\n\x10\x43onflictsService\x12\x62\n\x11ListConflictFiles\x12 .gitaly.ListConflictFilesRequest\x1a!.gitaly.ListConflictFilesResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12_\n\x10ResolveConflicts\x12\x1f.gitaly.ResolveConflictsRequest\x1a .gitaly.ResolveConflictsResponse\"\x06\xfa\x97(\x02\x08\x01(\x01\x42\x34Z2gitlab.com/gitlab-org/gitaly/v15/proto/go/gitalypbb\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,lint__pb2.DESCRIPTOR,shared__pb2.DESCRIPTOR,])




_LISTCONFLICTFILESREQUEST = _descriptor.Descriptor(
  name='ListConflictFilesRequest',
  full_name='gitaly.ListConflictFilesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.ListConflictFilesRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='our_commit_oid', full_name='gitaly.ListConflictFilesRequest.our_commit_oid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='their_commit_oid', full_name='gitaly.ListConflictFilesRequest.their_commit_oid', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='allow_tree_conflicts', full_name='gitaly.ListConflictFilesRequest.allow_tree_conflicts', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=87,
  serialized_end=239,
)


_CONFLICTFILEHEADER = _descriptor.Descriptor(
  name='ConflictFileHeader',
  full_name='gitaly.ConflictFileHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit_oid', full_name='gitaly.ConflictFileHeader.commit_oid', index=0,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='their_path', full_name='gitaly.ConflictFileHeader.their_path', index=1,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='our_path', full_name='gitaly.ConflictFileHeader.our_path', index=2,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='our_mode', full_name='gitaly.ConflictFileHeader.our_mode', index=3,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ancestor_path', full_name='gitaly.ConflictFileHeader.ancestor_path', index=4,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=241,
  serialized_end=366,
)


_CONFLICTFILE = _descriptor.Descriptor(
  name='ConflictFile',
  full_name='gitaly.ConflictFile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='gitaly.ConflictFile.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='content', full_name='gitaly.ConflictFile.content', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='conflict_file_payload', full_name='gitaly.ConflictFile.conflict_file_payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=368,
  serialized_end=472,
)


_LISTCONFLICTFILESRESPONSE = _descriptor.Descriptor(
  name='ListConflictFilesResponse',
  full_name='gitaly.ListConflictFilesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='files', full_name='gitaly.ListConflictFilesResponse.files', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=474,
  serialized_end=538,
)


_RESOLVECONFLICTSREQUESTHEADER = _descriptor.Descriptor(
  name='ResolveConflictsRequestHeader',
  full_name='gitaly.ResolveConflictsRequestHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.ResolveConflictsRequestHeader.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='our_commit_oid', full_name='gitaly.ResolveConflictsRequestHeader.our_commit_oid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_repository', full_name='gitaly.ResolveConflictsRequestHeader.target_repository', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='their_commit_oid', full_name='gitaly.ResolveConflictsRequestHeader.their_commit_oid', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_branch', full_name='gitaly.ResolveConflictsRequestHeader.source_branch', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_branch', full_name='gitaly.ResolveConflictsRequestHeader.target_branch', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_message', full_name='gitaly.ResolveConflictsRequestHeader.commit_message', index=6,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user', full_name='gitaly.ResolveConflictsRequestHeader.user', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='gitaly.ResolveConflictsRequestHeader.timestamp', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=541,
  serialized_end=860,
)


_RESOLVECONFLICTSREQUEST = _descriptor.Descriptor(
  name='ResolveConflictsRequest',
  full_name='gitaly.ResolveConflictsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='gitaly.ResolveConflictsRequest.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='files_json', full_name='gitaly.ResolveConflictsRequest.files_json', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='resolve_conflicts_request_payload', full_name='gitaly.ResolveConflictsRequest.resolve_conflicts_request_payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=863,
  serialized_end=1004,
)


_RESOLVECONFLICTSRESPONSE = _descriptor.Descriptor(
  name='ResolveConflictsResponse',
  full_name='gitaly.ResolveConflictsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resolution_error', full_name='gitaly.ResolveConflictsResponse.resolution_error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1006,
  serialized_end=1058,
)

_LISTCONFLICTFILESREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_CONFLICTFILE.fields_by_name['header'].message_type = _CONFLICTFILEHEADER
_CONFLICTFILE.oneofs_by_name['conflict_file_payload'].fields.append(
  _CONFLICTFILE.fields_by_name['header'])
_CONFLICTFILE.fields_by_name['header'].containing_oneof = _CONFLICTFILE.oneofs_by_name['conflict_file_payload']
_CONFLICTFILE.oneofs_by_name['conflict_file_payload'].fields.append(
  _CONFLICTFILE.fields_by_name['content'])
_CONFLICTFILE.fields_by_name['content'].containing_oneof = _CONFLICTFILE.oneofs_by_name['conflict_file_payload']
_LISTCONFLICTFILESRESPONSE.fields_by_name['files'].message_type = _CONFLICTFILE
_RESOLVECONFLICTSREQUESTHEADER.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_RESOLVECONFLICTSREQUESTHEADER.fields_by_name['target_repository'].message_type = shared__pb2._REPOSITORY
_RESOLVECONFLICTSREQUESTHEADER.fields_by_name['user'].message_type = shared__pb2._USER
_RESOLVECONFLICTSREQUESTHEADER.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_RESOLVECONFLICTSREQUEST.fields_by_name['header'].message_type = _RESOLVECONFLICTSREQUESTHEADER
_RESOLVECONFLICTSREQUEST.oneofs_by_name['resolve_conflicts_request_payload'].fields.append(
  _RESOLVECONFLICTSREQUEST.fields_by_name['header'])
_RESOLVECONFLICTSREQUEST.fields_by_name['header'].containing_oneof = _RESOLVECONFLICTSREQUEST.oneofs_by_name['resolve_conflicts_request_payload']
_RESOLVECONFLICTSREQUEST.oneofs_by_name['resolve_conflicts_request_payload'].fields.append(
  _RESOLVECONFLICTSREQUEST.fields_by_name['files_json'])
_RESOLVECONFLICTSREQUEST.fields_by_name['files_json'].containing_oneof = _RESOLVECONFLICTSREQUEST.oneofs_by_name['resolve_conflicts_request_payload']
DESCRIPTOR.message_types_by_name['ListConflictFilesRequest'] = _LISTCONFLICTFILESREQUEST
DESCRIPTOR.message_types_by_name['ConflictFileHeader'] = _CONFLICTFILEHEADER
DESCRIPTOR.message_types_by_name['ConflictFile'] = _CONFLICTFILE
DESCRIPTOR.message_types_by_name['ListConflictFilesResponse'] = _LISTCONFLICTFILESRESPONSE
DESCRIPTOR.message_types_by_name['ResolveConflictsRequestHeader'] = _RESOLVECONFLICTSREQUESTHEADER
DESCRIPTOR.message_types_by_name['ResolveConflictsRequest'] = _RESOLVECONFLICTSREQUEST
DESCRIPTOR.message_types_by_name['ResolveConflictsResponse'] = _RESOLVECONFLICTSRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ListConflictFilesRequest = _reflection.GeneratedProtocolMessageType('ListConflictFilesRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTCONFLICTFILESREQUEST,
  __module__ = 'conflicts_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ListConflictFilesRequest)
  ))
_sym_db.RegisterMessage(ListConflictFilesRequest)

ConflictFileHeader = _reflection.GeneratedProtocolMessageType('ConflictFileHeader', (_message.Message,), dict(
  DESCRIPTOR = _CONFLICTFILEHEADER,
  __module__ = 'conflicts_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ConflictFileHeader)
  ))
_sym_db.RegisterMessage(ConflictFileHeader)

ConflictFile = _reflection.GeneratedProtocolMessageType('ConflictFile', (_message.Message,), dict(
  DESCRIPTOR = _CONFLICTFILE,
  __module__ = 'conflicts_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ConflictFile)
  ))
_sym_db.RegisterMessage(ConflictFile)

ListConflictFilesResponse = _reflection.GeneratedProtocolMessageType('ListConflictFilesResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTCONFLICTFILESRESPONSE,
  __module__ = 'conflicts_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ListConflictFilesResponse)
  ))
_sym_db.RegisterMessage(ListConflictFilesResponse)

ResolveConflictsRequestHeader = _reflection.GeneratedProtocolMessageType('ResolveConflictsRequestHeader', (_message.Message,), dict(
  DESCRIPTOR = _RESOLVECONFLICTSREQUESTHEADER,
  __module__ = 'conflicts_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ResolveConflictsRequestHeader)
  ))
_sym_db.RegisterMessage(ResolveConflictsRequestHeader)

ResolveConflictsRequest = _reflection.GeneratedProtocolMessageType('ResolveConflictsRequest', (_message.Message,), dict(
  DESCRIPTOR = _RESOLVECONFLICTSREQUEST,
  __module__ = 'conflicts_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ResolveConflictsRequest)
  ))
_sym_db.RegisterMessage(ResolveConflictsRequest)

ResolveConflictsResponse = _reflection.GeneratedProtocolMessageType('ResolveConflictsResponse', (_message.Message,), dict(
  DESCRIPTOR = _RESOLVECONFLICTSRESPONSE,
  __module__ = 'conflicts_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ResolveConflictsResponse)
  ))
_sym_db.RegisterMessage(ResolveConflictsResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z2gitlab.com/gitlab-org/gitaly/v15/proto/go/gitalypb'))
_LISTCONFLICTFILESREQUEST.fields_by_name['repository'].has_options = True
_LISTCONFLICTFILESREQUEST.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))
_RESOLVECONFLICTSREQUESTHEADER.fields_by_name['repository'].has_options = True
_RESOLVECONFLICTSREQUESTHEADER.fields_by_name['repository']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\306,\001'))

_CONFLICTSSERVICE = _descriptor.ServiceDescriptor(
  name='ConflictsService',
  full_name='gitaly.ConflictsService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1061,
  serialized_end=1276,
  methods=[
  _descriptor.MethodDescriptor(
    name='ListConflictFiles',
    full_name='gitaly.ConflictsService.ListConflictFiles',
    index=0,
    containing_service=None,
    input_type=_LISTCONFLICTFILESREQUEST,
    output_type=_LISTCONFLICTFILESRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\002')),
  ),
  _descriptor.MethodDescriptor(
    name='ResolveConflicts',
    full_name='gitaly.ConflictsService.ResolveConflicts',
    index=1,
    containing_service=None,
    input_type=_RESOLVECONFLICTSREQUEST,
    output_type=_RESOLVECONFLICTSRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\372\227(\002\010\001')),
  ),
])
_sym_db.RegisterServiceDescriptor(_CONFLICTSSERVICE)

DESCRIPTOR.services_by_name['ConflictsService'] = _CONFLICTSSERVICE

# @@protoc_insertion_point(module_scope)
