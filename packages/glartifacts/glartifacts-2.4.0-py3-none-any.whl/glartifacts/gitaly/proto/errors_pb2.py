# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: errors.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='errors.proto',
  package='gitaly',
  syntax='proto3',
  serialized_pb=_b('\n\x0c\x65rrors.proto\x12\x06gitaly\x1a\x1egoogle/protobuf/duration.proto\"]\n\x10\x41\x63\x63\x65ssCheckError\x12\x15\n\rerror_message\x18\x01 \x01(\t\x12\x10\n\x08protocol\x18\x02 \x01(\t\x12\x0f\n\x07user_id\x18\x03 \x01(\t\x12\x0f\n\x07\x63hanges\x18\x04 \x01(\x0c\"%\n\x15InvalidRefFormatError\x12\x0c\n\x04refs\x18\x02 \x03(\x0c\"C\n\x10NotAncestorError\x12\x17\n\x0fparent_revision\x18\x01 \x01(\x0c\x12\x16\n\x0e\x63hild_revision\x18\x02 \x01(\x0c\"\x1c\n\x1a\x43hangesAlreadyAppliedError\"O\n\x12MergeConflictError\x12\x19\n\x11\x63onflicting_files\x18\x01 \x03(\x0c\x12\x1e\n\x16\x63onflicting_commit_ids\x18\x02 \x03(\t\"\x17\n\x15ReferencesLockedError\"P\n\x14ReferenceUpdateError\x12\x16\n\x0ereference_name\x18\x01 \x01(\x0c\x12\x0f\n\x07old_oid\x18\x02 \x01(\t\x12\x0f\n\x07new_oid\x18\x03 \x01(\t\"(\n\x14ResolveRevisionError\x12\x10\n\x08revision\x18\x01 \x01(\x0c\"S\n\nLimitError\x12\x15\n\rerror_message\x18\x01 \x01(\t\x12.\n\x0bretry_after\x18\x02 \x01(\x0b\x32\x19.google.protobuf.Duration\"\xd8\x01\n\x0f\x43ustomHookError\x12\x0e\n\x06stdout\x18\x01 \x01(\x0c\x12\x0e\n\x06stderr\x18\x02 \x01(\x0c\x12\x33\n\thook_type\x18\x03 \x01(\x0e\x32 .gitaly.CustomHookError.HookType\"p\n\x08HookType\x12\x19\n\x15HOOK_TYPE_UNSPECIFIED\x10\x00\x12\x18\n\x14HOOK_TYPE_PRERECEIVE\x10\x01\x12\x14\n\x10HOOK_TYPE_UPDATE\x10\x02\x12\x19\n\x15HOOK_TYPE_POSTRECEIVE\x10\x03\x42\x34Z2gitlab.com/gitlab-org/gitaly/v15/proto/go/gitalypbb\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_duration__pb2.DESCRIPTOR,])



_CUSTOMHOOKERROR_HOOKTYPE = _descriptor.EnumDescriptor(
  name='HookType',
  full_name='gitaly.CustomHookError.HookType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='HOOK_TYPE_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HOOK_TYPE_PRERECEIVE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HOOK_TYPE_UPDATE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HOOK_TYPE_POSTRECEIVE', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=709,
  serialized_end=821,
)
_sym_db.RegisterEnumDescriptor(_CUSTOMHOOKERROR_HOOKTYPE)


_ACCESSCHECKERROR = _descriptor.Descriptor(
  name='AccessCheckError',
  full_name='gitaly.AccessCheckError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_message', full_name='gitaly.AccessCheckError.error_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='gitaly.AccessCheckError.protocol', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user_id', full_name='gitaly.AccessCheckError.user_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='changes', full_name='gitaly.AccessCheckError.changes', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=56,
  serialized_end=149,
)


_INVALIDREFFORMATERROR = _descriptor.Descriptor(
  name='InvalidRefFormatError',
  full_name='gitaly.InvalidRefFormatError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='refs', full_name='gitaly.InvalidRefFormatError.refs', index=0,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=151,
  serialized_end=188,
)


_NOTANCESTORERROR = _descriptor.Descriptor(
  name='NotAncestorError',
  full_name='gitaly.NotAncestorError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent_revision', full_name='gitaly.NotAncestorError.parent_revision', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child_revision', full_name='gitaly.NotAncestorError.child_revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=190,
  serialized_end=257,
)


_CHANGESALREADYAPPLIEDERROR = _descriptor.Descriptor(
  name='ChangesAlreadyAppliedError',
  full_name='gitaly.ChangesAlreadyAppliedError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=259,
  serialized_end=287,
)


_MERGECONFLICTERROR = _descriptor.Descriptor(
  name='MergeConflictError',
  full_name='gitaly.MergeConflictError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='conflicting_files', full_name='gitaly.MergeConflictError.conflicting_files', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='conflicting_commit_ids', full_name='gitaly.MergeConflictError.conflicting_commit_ids', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=289,
  serialized_end=368,
)


_REFERENCESLOCKEDERROR = _descriptor.Descriptor(
  name='ReferencesLockedError',
  full_name='gitaly.ReferencesLockedError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=370,
  serialized_end=393,
)


_REFERENCEUPDATEERROR = _descriptor.Descriptor(
  name='ReferenceUpdateError',
  full_name='gitaly.ReferenceUpdateError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reference_name', full_name='gitaly.ReferenceUpdateError.reference_name', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='old_oid', full_name='gitaly.ReferenceUpdateError.old_oid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='new_oid', full_name='gitaly.ReferenceUpdateError.new_oid', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=395,
  serialized_end=475,
)


_RESOLVEREVISIONERROR = _descriptor.Descriptor(
  name='ResolveRevisionError',
  full_name='gitaly.ResolveRevisionError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.ResolveRevisionError.revision', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=477,
  serialized_end=517,
)


_LIMITERROR = _descriptor.Descriptor(
  name='LimitError',
  full_name='gitaly.LimitError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_message', full_name='gitaly.LimitError.error_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='retry_after', full_name='gitaly.LimitError.retry_after', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=519,
  serialized_end=602,
)


_CUSTOMHOOKERROR = _descriptor.Descriptor(
  name='CustomHookError',
  full_name='gitaly.CustomHookError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stdout', full_name='gitaly.CustomHookError.stdout', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stderr', full_name='gitaly.CustomHookError.stderr', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hook_type', full_name='gitaly.CustomHookError.hook_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CUSTOMHOOKERROR_HOOKTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=605,
  serialized_end=821,
)

_LIMITERROR.fields_by_name['retry_after'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_CUSTOMHOOKERROR.fields_by_name['hook_type'].enum_type = _CUSTOMHOOKERROR_HOOKTYPE
_CUSTOMHOOKERROR_HOOKTYPE.containing_type = _CUSTOMHOOKERROR
DESCRIPTOR.message_types_by_name['AccessCheckError'] = _ACCESSCHECKERROR
DESCRIPTOR.message_types_by_name['InvalidRefFormatError'] = _INVALIDREFFORMATERROR
DESCRIPTOR.message_types_by_name['NotAncestorError'] = _NOTANCESTORERROR
DESCRIPTOR.message_types_by_name['ChangesAlreadyAppliedError'] = _CHANGESALREADYAPPLIEDERROR
DESCRIPTOR.message_types_by_name['MergeConflictError'] = _MERGECONFLICTERROR
DESCRIPTOR.message_types_by_name['ReferencesLockedError'] = _REFERENCESLOCKEDERROR
DESCRIPTOR.message_types_by_name['ReferenceUpdateError'] = _REFERENCEUPDATEERROR
DESCRIPTOR.message_types_by_name['ResolveRevisionError'] = _RESOLVEREVISIONERROR
DESCRIPTOR.message_types_by_name['LimitError'] = _LIMITERROR
DESCRIPTOR.message_types_by_name['CustomHookError'] = _CUSTOMHOOKERROR
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AccessCheckError = _reflection.GeneratedProtocolMessageType('AccessCheckError', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSCHECKERROR,
  __module__ = 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.AccessCheckError)
  ))
_sym_db.RegisterMessage(AccessCheckError)

InvalidRefFormatError = _reflection.GeneratedProtocolMessageType('InvalidRefFormatError', (_message.Message,), dict(
  DESCRIPTOR = _INVALIDREFFORMATERROR,
  __module__ = 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.InvalidRefFormatError)
  ))
_sym_db.RegisterMessage(InvalidRefFormatError)

NotAncestorError = _reflection.GeneratedProtocolMessageType('NotAncestorError', (_message.Message,), dict(
  DESCRIPTOR = _NOTANCESTORERROR,
  __module__ = 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.NotAncestorError)
  ))
_sym_db.RegisterMessage(NotAncestorError)

ChangesAlreadyAppliedError = _reflection.GeneratedProtocolMessageType('ChangesAlreadyAppliedError', (_message.Message,), dict(
  DESCRIPTOR = _CHANGESALREADYAPPLIEDERROR,
  __module__ = 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ChangesAlreadyAppliedError)
  ))
_sym_db.RegisterMessage(ChangesAlreadyAppliedError)

MergeConflictError = _reflection.GeneratedProtocolMessageType('MergeConflictError', (_message.Message,), dict(
  DESCRIPTOR = _MERGECONFLICTERROR,
  __module__ = 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.MergeConflictError)
  ))
_sym_db.RegisterMessage(MergeConflictError)

ReferencesLockedError = _reflection.GeneratedProtocolMessageType('ReferencesLockedError', (_message.Message,), dict(
  DESCRIPTOR = _REFERENCESLOCKEDERROR,
  __module__ = 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ReferencesLockedError)
  ))
_sym_db.RegisterMessage(ReferencesLockedError)

ReferenceUpdateError = _reflection.GeneratedProtocolMessageType('ReferenceUpdateError', (_message.Message,), dict(
  DESCRIPTOR = _REFERENCEUPDATEERROR,
  __module__ = 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ReferenceUpdateError)
  ))
_sym_db.RegisterMessage(ReferenceUpdateError)

ResolveRevisionError = _reflection.GeneratedProtocolMessageType('ResolveRevisionError', (_message.Message,), dict(
  DESCRIPTOR = _RESOLVEREVISIONERROR,
  __module__ = 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ResolveRevisionError)
  ))
_sym_db.RegisterMessage(ResolveRevisionError)

LimitError = _reflection.GeneratedProtocolMessageType('LimitError', (_message.Message,), dict(
  DESCRIPTOR = _LIMITERROR,
  __module__ = 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.LimitError)
  ))
_sym_db.RegisterMessage(LimitError)

CustomHookError = _reflection.GeneratedProtocolMessageType('CustomHookError', (_message.Message,), dict(
  DESCRIPTOR = _CUSTOMHOOKERROR,
  __module__ = 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CustomHookError)
  ))
_sym_db.RegisterMessage(CustomHookError)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z2gitlab.com/gitlab-org/gitaly/v15/proto/go/gitalypb'))
# @@protoc_insertion_point(module_scope)
