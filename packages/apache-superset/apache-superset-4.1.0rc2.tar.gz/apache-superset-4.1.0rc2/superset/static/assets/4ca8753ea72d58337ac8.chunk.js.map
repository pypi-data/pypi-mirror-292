{"version":3,"file":"4ca8753ea72d58337ac8.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/plugin-chart-echarts/src/Treemap/EchartsTreemap.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DataRecordValue,\n  BinaryQueryObjectFilterClause,\n  getTimeFormatter,\n  getColumnLabel,\n  getNumberFormatter,\n} from '@superset-ui/core';\nimport { useCallback } from 'react';\nimport Echart from '../components/Echart';\nimport { NULL_STRING } from '../constants';\nimport { EventHandlers } from '../types';\nimport { extractTreePathInfo } from './constants';\nimport { TreemapTransformedProps } from './types';\nimport { formatSeriesName } from '../utils/series';\n\nexport default function EchartsTreemap({\n  echartOptions,\n  emitCrossFilters,\n  groupby,\n  height,\n  labelMap,\n  onContextMenu,\n  refs,\n  setDataMask,\n  selectedValues,\n  width,\n  formData,\n  coltypeMapping,\n}: TreemapTransformedProps) {\n  const getCrossFilterDataMask = useCallback(\n    (data, treePathInfo) => {\n      if (data?.children) {\n        return undefined;\n      }\n      const { treePath } = extractTreePathInfo(treePathInfo);\n      const name = treePath.join(',');\n      const selected = Object.values(selectedValues);\n      let values: string[];\n      if (selected.includes(name)) {\n        values = selected.filter(v => v !== name);\n      } else {\n        values = [name];\n      }\n\n      const groupbyValues = values.map(value => labelMap[value]);\n\n      return {\n        dataMask: {\n          extraFormData: {\n            filters:\n              values.length === 0\n                ? []\n                : groupby.map((col, idx) => {\n                    const val: DataRecordValue[] = groupbyValues.map(\n                      v => v[idx],\n                    );\n                    if (val === null || val === undefined)\n                      return {\n                        col,\n                        op: 'IS NULL' as const,\n                      };\n                    return {\n                      col,\n                      op: 'IN' as const,\n                      val: val as (string | number | boolean)[],\n                    };\n                  }),\n          },\n          filterState: {\n            value: groupbyValues.length ? groupbyValues : null,\n            selectedValues: values.length ? values : null,\n          },\n        },\n        isCurrentValueSelected: selected.includes(name),\n      };\n    },\n    [groupby, labelMap, selectedValues],\n  );\n\n  const handleChange = useCallback(\n    (data, treePathInfo) => {\n      if (!emitCrossFilters) {\n        return;\n      }\n\n      const dataMask = getCrossFilterDataMask(data, treePathInfo)?.dataMask;\n      if (dataMask) {\n        setDataMask(dataMask);\n      }\n    },\n    [emitCrossFilters, getCrossFilterDataMask, setDataMask],\n  );\n\n  const eventHandlers: EventHandlers = {\n    click: props => {\n      const { data, treePathInfo } = props;\n      handleChange(data, treePathInfo);\n    },\n    contextmenu: async eventParams => {\n      if (onContextMenu) {\n        eventParams.event.stop();\n        const { data, treePathInfo } = eventParams;\n        const { treePath } = extractTreePathInfo(treePathInfo);\n        if (treePath.length > 0) {\n          const pointerEvent = eventParams.event.event;\n          const drillToDetailFilters: BinaryQueryObjectFilterClause[] = [];\n          const drillByFilters: BinaryQueryObjectFilterClause[] = [];\n          treePath.forEach((path, i) => {\n            const val = path === 'null' ? NULL_STRING : path;\n            drillToDetailFilters.push({\n              col: groupby[i],\n              op: '==',\n              val,\n              formattedVal: path,\n            });\n            drillByFilters.push({\n              col: groupby[i],\n              op: '==',\n              val,\n              formattedVal: formatSeriesName(val, {\n                timeFormatter: getTimeFormatter(formData.dateFormat),\n                numberFormatter: getNumberFormatter(formData.numberFormat),\n                coltype: coltypeMapping?.[getColumnLabel(groupby[i])],\n              }),\n            });\n          });\n          onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n            drillToDetail: drillToDetailFilters,\n            crossFilter: getCrossFilterDataMask(data, treePathInfo),\n            drillBy: { filters: drillByFilters, groupbyFieldName: 'groupby' },\n          });\n        }\n      }\n    },\n  };\n\n  return (\n    <Echart\n      refs={refs}\n      height={height}\n      width={width}\n      echartOptions={echartOptions}\n      eventHandlers={eventHandlers}\n      selectedValues={selectedValues}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useCallback,\n  Ref,\n} from 'react';\n\nimport { styled } from '@superset-ui/core';\nimport { ECharts, init } from 'echarts';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n    refs,\n  }: EchartsProps,\n  ref: Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef<ECharts>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (chartRef.current) {\n        chartRef.current.resize({ width, height });\n      }\n    },\n    [],\n  );\n\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => chartRef.current?.dispose();\n  }, []);\n\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"],"names":["EchartsTreemap","echartOptions","emitCrossFilters","groupby","height","labelMap","onContextMenu","refs","setDataMask","selectedValues","width","formData","coltypeMapping","getCrossFilterDataMask","useCallback","data","treePathInfo","children","treePath","extractTreePathInfo","name","join","selected","Object","values","includes","filter","v","groupbyValues","map","value","dataMask","extraFormData","filters","length","col","idx","val","op","filterState","isCurrentValueSelected","handleChange","_getCrossFilterDataMa","eventHandlers","click","props","contextmenu","async","eventParams","event","stop","pointerEvent","drillToDetailFilters","drillByFilters","forEach","path","i","NULL_STRING","push","formattedVal","formatSeriesName","timeFormatter","getTimeFormatter","dateFormat","numberFormatter","getNumberFormatter","numberFormat","coltype","getColumnLabel","clientX","clientY","drillToDetail","crossFilter","drillBy","groupbyFieldName","_jsx","Echart","Styles","styled","div","zrEventHandlers","ref","divRef","useRef","chartRef","currentSelection","useMemo","keys","previousSelection","useImperativeHandle","getEchartInstance","current","useEffect","init","entries","handler","_chartRef$current","_chartRef$current2","off","on","_chartRef$current3","_chartRef$current4","getZr","setOption","dispatchAction","type","dataIndex","handleSizeChange","resize","_chartRef$current5","dispose","useLayoutEffect","forwardRef"],"sourceRoot":""}