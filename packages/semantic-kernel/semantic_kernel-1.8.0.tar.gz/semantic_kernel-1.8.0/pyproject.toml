[tool.poetry]
name = "semantic-kernel"
version = "1.8.0"
description = "Semantic Kernel Python SDK"
authors = ["Microsoft <SK-Support@microsoft.com>"]
readme = "pip/README.md"
packages = [{include = "semantic_kernel"}]
homepage = "https://learn.microsoft.com/en-us/semantic-kernel/overview/"
repository = "https://github.com/microsoft/semantic-kernel/"

[tool.poetry.urls]
"Source Code" = "https://github.com/microsoft/semantic-kernel/tree/main/python"
"Release Notes" = "https://github.com/microsoft/semantic-kernel/releases?q=tag%3Apython-1&expanded=true"

[tool.poetry.dependencies]
python = "^3.10,<3.13"

# main dependencies
aiohttp = "^3.8"
pydantic = "^2"
pydantic-settings = "^2"
defusedxml = "^0.7.1"

# embeddings
numpy = [
    { version = ">=1.25", python = "<3.12" },
    { version = ">=1.26", python = ">=3.12" },
]

# openai connector
openai = ">=1.0"

# openapi and swagger
openapi_core = ">=0.18,<0.20"

# OpenTelemetry
opentelemetry-api = "^1.24.0"
opentelemetry-sdk = "^1.24.0"

prance = "^23.6.21.0"

# templating
pybars4 = "^0.9.13"
jinja2 = "^3.1.3"
nest-asyncio = "^1.6.0"

### Optional dependencies
# azure
azure-ai-inference = {version = "^1.0.0b1", allow-prereleases = true, optional = true}
azure-search-documents = {version = "11.6.0b4", allow-prereleases = true, optional = true}
azure-core = { version = "^1.28.0", optional = true}
azure-identity = { version = "^1.13.0", optional = true}
azure-cosmos = { version = "^4.7.0", optional = true}
# chroma
chromadb = { version = ">=0.4.13,<0.6.0", optional = true}
# google
google-cloud-aiplatform = { version = "^1.60.0", optional = true}
google-generativeai = { version = "^0.7.2", optional = true}
# hugging face
transformers = { version = "^4.28.1", extras=['torch'], optional = true}
sentence-transformers = { version = "^2.2.2", optional = true}
torch = {version = "2.2.2", optional = true}
# mongo
motor = { version = "^3.3.2", optional = true }
# notebooks
ipykernel = { version = "^6.21.1", optional = true}
# milvus
pymilvus = { version = ">=2.3,<2.4.6", optional = true}
milvus = { version = ">=2.3,<2.3.8", markers = 'sys_platform != "win32"', optional = true}
# mistralai
mistralai = { version = "^0.4.1", optional = true}
# ollama
ollama = { version = "^0.2.1", optional = true}
# anthropic
anthropic = { version = "^0.32.0", optional = true }
# pinecone
pinecone-client = { version = "^5.0.0", optional = true}
# postgres
psycopg = { version="^3.2.1", extras=["binary","pool"], optional = true}
# qdrant
qdrant-client = { version = '^1.9', optional = true}
# redis
redis = { version = "^5.0.7", extras=['hiredis'], optional = true}
types-redis = { version="^4.6.0.20240425", optional = true }
# usearch
usearch = { version = "^2.9", optional = true}
pyarrow = { version = ">=12.0.1,<18.0.0", optional = true}
weaviate-client = { version = ">=3.18,<5.0", optional = true}
pandas = {version = "^2.2.2", optional = true}

[tool.poetry.group.dev.dependencies]
pre-commit = ">=3.7.1"
ipykernel = "^6.29.4"
nbconvert = "^7.16.4"
pytest = "^8.2.1"
pytest-xdist = { version="^3.6.1", extras=["psutil"]}
pytest-cov = ">=5.0.0"
pytest-asyncio = "^0.23.7"
snoop = "^0.4.3"
mypy = ">=1.10.0"
types-PyYAML = "^6.0.12.20240311"
ruff = ">=0.5.2,<0.7.0"

[tool.poetry.group.unit-tests]
optional = true

[tool.poetry.group.unit-tests.dependencies]
azure-ai-inference = {version = "^1.0.0b1", allow-prereleases = true}
azure-search-documents = {version = "11.6.0b4", allow-prereleases = true}
azure-core = "^1.28.0"
azure-cosmos = "^4.7.0"
mistralai = "^0.4.1"
ollama = "^0.2.1"
google-cloud-aiplatform = "^1.60.0"
anthropic = "^0.32.0"
google-generativeai = "^0.7.2"
transformers = { version = "^4.28.1", extras=['torch']}
sentence-transformers = { version = "^2.2.2"}
torch = {version = "2.2.2"}
# qdrant
qdrant-client = '^1.9'
# redis
redis = { version = "^5.0.7", extras=['hiredis']}
pandas = {version = "^2.2.2"}

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
# azure
azure-ai-inference = {version = "^1.0.0b1", allow-prereleases = true}
azure-search-documents = {version = "11.6.0b4", allow-prereleases = true}
azure-core = "^1.28.0"
azure-identity = "^1.13.0"
azure-cosmos = "^4.7.0"
msgraph-sdk = "^1.2.0"
# chroma
chromadb = ">=0.4.13,<0.6.0"
# google
google-cloud-aiplatform = "^1.60.0"
google-generativeai = "^0.7.2"
# hugging face
transformers = { version = "^4.28.1", extras=['torch']}
sentence-transformers = { version = "^2.2.2"}
torch = {version = "2.2.2"}
# milvus
pymilvus = ">=2.3,<2.4.6"
milvus = { version = ">=2.3,<2.3.8", markers = 'sys_platform != "win32"'}
# mistralai
mistralai = "^0.4.1"
# ollama
ollama = "^0.2.1"
# anthropic
anthropic = "^0.32.0"
# mongodb
motor = "^3.3.2"
# pinecone
pinecone-client = "^5.0.0"
# postgres
psycopg = { version="^3.1.9", extras=["binary","pool"]}
# qdrant
qdrant-client = '^1.9'
# redis
redis = { version="^5.0.7", extras=['hiredis']}
types-redis = { version="^4.6.0.20240425" }
# usearch
usearch = "^2.9"
pyarrow = ">=12.0.1,<18.0.0"
# weaviate
weaviate-client = ">=3.18,<5.0"
pandas = {version = "^2.2.2"}

# Extras are exposed to pip, this allows a user to easily add the right dependencies to their environment
[tool.poetry.extras]
all = ["transformers", "sentence-transformers", "torch", "qdrant-client", "chromadb", "pymilvus", "milvus", "mistralai", "ollama", "anthropic", "google", "weaviate-client", "pinecone-client", "psycopg", "redis", "azure-ai-inference", "azure-search-documents", "azure-core", "azure-identity", "azure-cosmos", "usearch", "pyarrow", "ipykernel", "motor"]

azure = ["azure-ai-inference", "azure-search-documents", "azure-core", "azure-identity", "azure-cosmos", "msgraph-sdk"]
chromadb = ["chromadb"]
google = ["google-cloud-aiplatform", "google-generativeai"]
hugging_face = ["transformers", "sentence-transformers", "torch"]
milvus = ["pymilvus", "milvus"]
mistralai = ["mistralai"]
ollama = ["ollama"]
anthropic = ["anthropic"]
mongo = ["motor"]
notebooks = ["ipykernel"]
pinecone = ["pinecone-client"]
postgres = ["psycopg"]
qdrant = ["qdrant-client"]
redis = ["redis", "types-redis"]
usearch = ["usearch", "pyarrow"]
weaviate = ["weaviate-client"]

[tool.pytest.ini_options]
addopts = "-ra -q -r fEX"

[tool.ruff]
line-length = 120
target-version = "py310"
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]

[tool.ruff.lint]
fixable = ["ALL"]
unfixable = []
preview = true
select = [
    "D", #pydocstyle checks
    "E", #error checks
    "F", #pyflakes checks
    "I", #isort
    "CPY", #copyright
    "ISC", #implicit string concat
    "INP", #implicit namespace package
    "RSE", #raise exception parantheses check
    "RET", #flake8-return check
    "SIM", #flake8-simplify check
    "TD", #todos
    "FIX", #fixme checks 
    "ERA", #remove connected out code
    "RUF" #RUF specific rules
]
ignore = [
    "D100", #allow missing docstring in public module
    "D104", #allow missing docstring in public package
    "TD003", #allow missing link to todo issue
    "FIX002" #allow todo
]

[tool.ruff.format]
preview = true
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
# Ignore all directories named `tests` and `samples`.
"tests/**" = ["D", "INP", "TD", "ERA001", "RUF"]
"samples/**" = ["D", "INP", "ERA001", "RUF"]
# Ignore all files that end in `_test.py`.
"*_test.py" = ["D"]
"*.ipynb" = ["CPY", "E501"]

[tool.ruff.lint.flake8-copyright]
notice-rgx = "^# Copyright \\(c\\) Microsoft\\. All rights reserved\\."
min-file-size = 1

[tool.bandit]
targets = ["python/semantic_kernel"]
exclude_dirs = ["python/tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

