
[build-system]
requires = ["setuptools", "setuptools-scm", "numpy"]
build-backend = "setuptools.build_meta"

[project]
name = "transforms84"
authors = [
    {name = "Daniel Stoops", email = "google@gmail.com"},
]
description = "Simple coordinate transformations with helper functions"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = ["numpy"]
dynamic = ["version"]

[project.optional-dependencies]
tests = [
    "ruff>=0.5.7",
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "mypy>=1.11.1",
    "tox>=4.17.1",
    "wheel>=0.44.0",
    "setuptools>=72.2.0",
]
dev = [
    "ruff>=0.5.7",
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "mypy>=1.11.1",
    "tox>=4.17.1",
    "wheel>=0.44.0",
    "setuptools>=72.2.0",
    "pre-commit>=3.8.0",
    "build>=1.2.1",
]
examples = [
    "jupyterlab>=4.2.4",
    "shapely>=2.0.5",
    "czml3>=1.0.2",
]

[project.urls]
Homepage = "https://github.com/Stoops-ML/transforms84"
Repository = "https://github.com/Stoops-ML/transforms84"
Issues = "https://github.com/Stoops-ML/transforms84/issues"

[tool.setuptools.dynamic]
version = {attr = "transforms84.__version__"}

[tool.ruff]
exclude = [
    "old",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
extend-include = ["*.ipynb"]
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--cov=transforms84",
    "--cov-fail-under=100",
    # "--cov-report=term-missing",
    # "--cov-report=term",
]

[tool.mypy]
files = [
    "src/transforms84/**/*.py",
    "tests/**/*.py",
]
warn_redundant_casts = true
warn_unused_configs = true
pretty = true
show_error_codes = true
disallow_any_generics = true
disallow_subclassing_any = true
#disallow_untyped_calls = true
#disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true

[[tool.mypy.overrides]]
module = "numpy.typing"
plugins = "mypy_plugin"

# Ignore certain missing imports
[[tool.mypy.overrides]]
module = ["pytest.*"]
ignore_missing_imports = true

[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist = quality, py{310,311,312}

    [gh-actions]
    python =
        3.10: py310
        3.11: py311, quality
        3.12: py312

    [testenv]
    basepython =
        py310: {env:PYTHON:python3.10}
        py311: {env:PYTHON:python3.11}
        py312: {env:PYTHON:python3.12}
        {quality}: {env:PYTHON:python3}
    setenv =
        PYTHONUNBUFFERED = yes
    extras = tests
    commands =
        pytest
        mypy

    [testenv:quality]
    description = checks code quality
    deps =
        ruff
    skip_install = true
    commands =
        ruff check
        ruff format --diff
"""
