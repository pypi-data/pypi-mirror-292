name: Build, test and lint

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      UV_CACHE_DIR: /tmp/.uv-cache
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.3.3/install.sh | sh

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Lint (flake8)
        run: |
          # stop the build if there are Python syntax errors or undefined names
          uv run pflake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          uv run pflake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Check formatting (black)
        run: uv run black --check --diff .
      - name: Type check (mypy)
        run: uv run mypy . --strict --ignore-missing-imports

      - name: Test (pytest)
        run: uv run pytest

      - name: Minimize uv cache
        run: uv cache prune --ci
