# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import lastmile_auto_eval.eval_api_pb2 as eval__api__pb2


class EvalApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEvaluationData = channel.unary_unary(
                '/evalapi.EvalApi/GetEvaluationData',
                request_serializer=eval__api__pb2.RequestBody.SerializeToString,
                response_deserializer=eval__api__pb2.Response.FromString,
                )
        self.StreamEvaluationData = channel.unary_stream(
                '/evalapi.EvalApi/StreamEvaluationData',
                request_serializer=eval__api__pb2.RequestBody.SerializeToString,
                response_deserializer=eval__api__pb2.Response.FromString,
                )
        self.ExchangeEvaluationData = channel.stream_stream(
                '/evalapi.EvalApi/ExchangeEvaluationData',
                request_serializer=eval__api__pb2.RequestBody.SerializeToString,
                response_deserializer=eval__api__pb2.Response.FromString,
                )
        self.SubmitEvaluation = channel.unary_unary(
                '/evalapi.EvalApi/SubmitEvaluation',
                request_serializer=eval__api__pb2.RequestBody.SerializeToString,
                response_deserializer=eval__api__pb2.Job.FromString,
                )
        self.SubmitStreamEvaluation = channel.stream_unary(
                '/evalapi.EvalApi/SubmitStreamEvaluation',
                request_serializer=eval__api__pb2.RequestBody.SerializeToString,
                response_deserializer=eval__api__pb2.Job.FromString,
                )


class EvalApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetEvaluationData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamEvaluationData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExchangeEvaluationData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitEvaluation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitStreamEvaluation(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EvalApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEvaluationData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEvaluationData,
                    request_deserializer=eval__api__pb2.RequestBody.FromString,
                    response_serializer=eval__api__pb2.Response.SerializeToString,
            ),
            'StreamEvaluationData': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamEvaluationData,
                    request_deserializer=eval__api__pb2.RequestBody.FromString,
                    response_serializer=eval__api__pb2.Response.SerializeToString,
            ),
            'ExchangeEvaluationData': grpc.stream_stream_rpc_method_handler(
                    servicer.ExchangeEvaluationData,
                    request_deserializer=eval__api__pb2.RequestBody.FromString,
                    response_serializer=eval__api__pb2.Response.SerializeToString,
            ),
            'SubmitEvaluation': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitEvaluation,
                    request_deserializer=eval__api__pb2.RequestBody.FromString,
                    response_serializer=eval__api__pb2.Job.SerializeToString,
            ),
            'SubmitStreamEvaluation': grpc.stream_unary_rpc_method_handler(
                    servicer.SubmitStreamEvaluation,
                    request_deserializer=eval__api__pb2.RequestBody.FromString,
                    response_serializer=eval__api__pb2.Job.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'evalapi.EvalApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EvalApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetEvaluationData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/evalapi.EvalApi/GetEvaluationData',
            eval__api__pb2.RequestBody.SerializeToString,
            eval__api__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamEvaluationData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/evalapi.EvalApi/StreamEvaluationData',
            eval__api__pb2.RequestBody.SerializeToString,
            eval__api__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExchangeEvaluationData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/evalapi.EvalApi/ExchangeEvaluationData',
            eval__api__pb2.RequestBody.SerializeToString,
            eval__api__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitEvaluation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/evalapi.EvalApi/SubmitEvaluation',
            eval__api__pb2.RequestBody.SerializeToString,
            eval__api__pb2.Job.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitStreamEvaluation(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/evalapi.EvalApi/SubmitStreamEvaluation',
            eval__api__pb2.RequestBody.SerializeToString,
            eval__api__pb2.Job.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
