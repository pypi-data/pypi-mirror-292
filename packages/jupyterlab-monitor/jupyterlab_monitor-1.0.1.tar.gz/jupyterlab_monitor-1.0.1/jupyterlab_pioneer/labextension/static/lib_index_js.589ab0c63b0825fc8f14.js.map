{"version":3,"file":"lib_index_js.589ab0c63b0825fc8f14.js","mappings":"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","sources":["webpack://jupyterlab-pioneer/./src/handler.ts","webpack://jupyterlab-pioneer/./src/index.ts","webpack://jupyterlab-pioneer/./src/producer.ts","webpack://jupyterlab-pioneer/./src/utils.tsx"],"sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\n\nimport { ServerConnection } from '@jupyterlab/services';\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI<T>(\n  endPoint = '',\n  init: RequestInit = {}\n): Promise<T> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings();\n  const requestUrl = URLExt.join(\n    settings.baseUrl,\n    'jupyterlab-pioneer', // API Namespace\n    endPoint\n  );\n\n  let response: Response;\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    throw new ServerConnection.NetworkError(error as any);\n  }\n\n  let data: any = await response.text();\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.log('Not a JSON response body.', response);\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data);\n  }\n\n  return data;\n}\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { INotebookTracker, NotebookPanel } from '@jupyterlab/notebook';\nimport { INotebookContent } from '@jupyterlab/nbformat';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { Token } from '@lumino/coreutils';\nimport { requestAPI } from './handler';\nimport { producerCollection } from './producer';\nimport { ActiveEvent, Config, Exporter } from './types';\nimport { sendInfoNotification, addInfoToHelpMenu } from './utils';\n\nconst PLUGIN_ID = 'jupyterlab-pioneer:plugin';\n\nexport const IJupyterLabPioneer = new Token<IJupyterLabPioneer>(PLUGIN_ID);\n\nexport interface IJupyterLabPioneer {\n  exporters: Exporter[];\n\n  /**\n   * Load exporters defined in the configuration file.\n   */\n  loadExporters(notebookPanel: NotebookPanel): Promise<void>;\n\n  /**\n   * Send event data to exporters defined in the configuration file.\n   *\n   * @param {NotebookPanel} notebookPanel The notebook panel the extension currently listens to.\n   * @param {Object} eventDetail An object containing event details.\n   * @param {Exporter} exporter The exporter configuration.\n   * @param {Boolean} logWholeNotebook A boolean indicating whether to log the entire notebook or not.\n   */\n  publishEvent(\n    notebookPanel: NotebookPanel,\n    eventDetail: Object,\n    exporter: Exporter,\n    logWholeNotebook?: Boolean\n  ): Promise<void>;\n}\n\nclass JupyterLabPioneer implements IJupyterLabPioneer {\n  exporters: Exporter[];\n\n  constructor() {\n    this.exporters = [];\n  }\n\n  async loadExporters(notebookPanel: NotebookPanel) {\n    const config = (await requestAPI<any>('config')) as Config;\n    const activeEvents: ActiveEvent[] = config.activeEvents;\n    const exporters: Exporter[] =\n      notebookPanel.content.model?.getMetadata('exporters') || config.exporters; // The exporters configuration in the notebook metadata overrides the configuration in the configuration file \"jupyter_jupyterlab_pioneer_config.py\"\n\n    const processedExporters =\n      activeEvents && activeEvents.length\n        ? exporters.map(e => {\n            if (!e.activeEvents) {\n              e.activeEvents = activeEvents;\n              return e;\n            } else {\n              return e;\n            }\n          })\n        : exporters.filter(e => e.activeEvents && e.activeEvents.length);\n    // Exporters without specifying the corresponding activeEvents will use the global activeEvents configuration.\n    // When the global activeEvents configuration is null, exporters that do not have corresponding activeEvents will be ignored.\n    console.log(processedExporters);\n    this.exporters = processedExporters;\n  }\n\n  async publishEvent(\n    notebookPanel: NotebookPanel,\n    eventDetail: Object,\n    exporter: Exporter,\n    logWholeNotebook?: Boolean\n  ) {\n    if (!notebookPanel) {\n      throw Error('router is listening to a null notebook panel');\n    }\n    const requestBody = {\n      eventDetail: eventDetail,\n      notebookState: {\n        sessionID: notebookPanel?.sessionContext.session?.id,\n        notebookPath: notebookPanel?.context.path,\n        notebookContent: logWholeNotebook\n          ? (notebookPanel?.model?.toJSON() as INotebookContent)\n          : null // decide whether to log the entire notebook\n      },\n      exporter: exporter\n    };\n    const response = await requestAPI<any>('export', {\n      method: 'POST',\n      body: JSON.stringify(requestBody)\n    });\n    console.log(response);\n  }\n}\n\nconst plugin: JupyterFrontEndPlugin<JupyterLabPioneer> = {\n  id: PLUGIN_ID,\n  autoStart: true,\n  requires: [INotebookTracker, IMainMenu],\n  provides: IJupyterLabPioneer,\n  activate: async (\n    app: JupyterFrontEnd,\n    notebookTracker: INotebookTracker,\n    mainMenu: IMainMenu\n  ) => {\n    const version = await requestAPI<string>('version');\n    console.log(`${PLUGIN_ID}: ${version}`);\n    const config = (await requestAPI<any>('config')) as Config;\n\n    const pioneer = new JupyterLabPioneer();\n\n    addInfoToHelpMenu(app, mainMenu, version);\n\n    notebookTracker.widgetAdded.connect(\n      async (_, notebookPanel: NotebookPanel) => {\n        await notebookPanel.revealed;\n        await notebookPanel.sessionContext.ready;\n        await pioneer.loadExporters(notebookPanel);\n\n        producerCollection.forEach(producer => {\n          new producer().listen(notebookPanel, pioneer);\n        });\n      }\n    );\n\n    sendInfoNotification(config.exporters, true);\n\n    return pioneer;\n  }\n};\n\nexport default plugin;\n","import {\n  Notebook,\n  NotebookPanel,\n  NotebookActions,\n  KernelError\n} from '@jupyterlab/notebook';\nimport { Cell, ICellModel } from '@jupyterlab/cells';\nimport { DocumentRegistry } from '@jupyterlab/docregistry';\nimport { IObservableList } from '@jupyterlab/observables';\nimport { CodeMirrorEditor } from '@jupyterlab/codemirror';\nimport { EditorView, ViewUpdate } from '@codemirror/view';\nimport { IJupyterLabPioneer } from './index';\nimport { requestAPI } from './handler';\n\nexport class ActiveCellChangeEventProducer {\n  static id: string = 'ActiveCellChangeEvent';\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    notebookPanel.content.activeCellChanged.connect(\n      async (_, cell: Cell<ICellModel> | null) => {\n        if (cell && notebookPanel.content.widgets) {\n          const activatedCell = {\n            id: cell?.model.id,\n            index: notebookPanel.content.widgets.findIndex(\n              value => value === cell\n            )\n          };\n          const event = {\n            eventName: ActiveCellChangeEventProducer.id,\n            eventTime: Date.now(),\n            eventInfo: {\n              cells: [activatedCell] // activated cell\n            }\n          };\n          pioneer.exporters.forEach(async exporter => {\n            if (\n              exporter.activeEvents\n                ?.map(o => o.name)\n                .includes(ActiveCellChangeEventProducer.id)\n            ) {\n              await pioneer.publishEvent(\n                notebookPanel,\n                event,\n                exporter,\n                exporter.activeEvents?.find(\n                  o => o.name == ActiveCellChangeEventProducer.id\n                )?.logWholeNotebook\n              );\n            }\n          });\n        }\n      }\n    );\n  }\n}\n\nexport class CellAddEventProducer {\n  static id: string = 'CellAddEvent';\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    notebookPanel.content.model?.cells.changed.connect(\n      async (_, args: IObservableList.IChangedArgs<ICellModel>) => {\n        if (args.type === 'add') {\n          const addedCell = {\n            id: args.newValues[0].id,\n            index: args.newIndex\n          };\n          const event = {\n            eventName: CellAddEventProducer.id,\n            eventTime: Date.now(),\n            eventInfo: {\n              cells: [addedCell]\n            }\n          };\n          pioneer.exporters.forEach(async exporter => {\n            if (\n              exporter.activeEvents\n                ?.map(o => o.name)\n                .includes(CellAddEventProducer.id)\n            ) {\n              await pioneer.publishEvent(\n                notebookPanel,\n                event,\n                exporter,\n                exporter.activeEvents?.find(\n                  o => o.name == CellAddEventProducer.id\n                )?.logWholeNotebook\n              );\n            }\n          });\n        }\n      }\n    );\n  }\n}\n\nexport class CellEditEventProducer {\n  static id: string = 'CellEditEvent';\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    const sendDoc = async (_: Notebook, cell: Cell<ICellModel> | null) => {\n      await cell?.ready; // wait until cell is ready, to prevent errors when creating new cells\n      const editor = cell?.editor as CodeMirrorEditor;\n\n      const event = {\n        eventName: CellEditEventProducer.id,\n        eventTime: Date.now(),\n        eventInfo: {\n          index: notebookPanel.content.widgets.findIndex(\n            value => value === cell\n          ),\n          doc: editor?.state?.doc?.toJSON() // send entire cell content if this is a new cell\n        }\n      };\n      pioneer.exporters.forEach(async exporter => {\n        if (\n          exporter.activeEvents\n            ?.map(o => o.name)\n            .includes(CellEditEventProducer.id)\n        ) {\n          await pioneer.publishEvent(\n            notebookPanel,\n            event,\n            exporter,\n            exporter.activeEvents?.find(o => o.name == CellEditEventProducer.id)\n              ?.logWholeNotebook\n          );\n        }\n      });\n    };\n\n    const addDocChangeListener = async (cell: Cell<ICellModel> | null) => {\n      await cell?.ready; // wait until cell is ready, to prevent errors when creating new cells\n      const editor = cell?.editor as CodeMirrorEditor;\n\n      editor?.injectExtension(\n        EditorView.updateListener.of(async (v: ViewUpdate) => {\n          if (v.docChanged) {\n            const event = {\n              eventName: CellEditEventProducer.id,\n              eventTime: Date.now(),\n              eventInfo: {\n                index: notebookPanel.content.widgets.findIndex(\n                  value => value === cell\n                ),\n                changes: v.changes.toJSON() // send changes\n              }\n            };\n            pioneer.exporters.forEach(async exporter => {\n              if (\n                exporter.activeEvents\n                  ?.map(o => o.name)\n                  .includes(CellEditEventProducer.id)\n              ) {\n                await pioneer.publishEvent(\n                  notebookPanel,\n                  event,\n                  exporter,\n                  false // do not log whole notebook for doc changes\n                );\n              }\n            });\n          }\n        })\n      );\n    };\n\n    notebookPanel?.content?.widgets.forEach(cell => {\n      addDocChangeListener(cell);\n    }); // add listener to existing cells\n    sendDoc(notebookPanel.content, notebookPanel.content.activeCell); // send initial active cell content\n\n    notebookPanel.content.model?.cells.changed.connect(\n      async (_, args: IObservableList.IChangedArgs<ICellModel>) => {\n        if (args.type === 'add') {\n          addDocChangeListener(notebookPanel?.content?.widgets[args.newIndex]);\n        }\n      }\n    ); // add doc change listener to cells created after initialization\n    notebookPanel.content.activeCellChanged.connect(sendDoc); // send active cell content when active cell changes\n  }\n}\n\nexport class CellExecuteEventProducer {\n  static id: string = 'CellExecuteEvent';\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    NotebookActions.executed.connect(\n      async (\n        _: any,\n        args: {\n          notebook: Notebook;\n          cell: Cell<ICellModel>;\n          success: Boolean;\n          error?: KernelError | null | undefined;\n        }\n      ) => {\n        if (notebookPanel.content === args.notebook) {\n          const executedCell = {\n            id: args.cell.model.id,\n            index: args.notebook.widgets.findIndex(value => value == args.cell)\n          };\n          const event = {\n            eventName: CellExecuteEventProducer.id,\n            eventTime: Date.now(),\n            eventInfo: {\n              cells: [executedCell],\n              success: args.success,\n              kernelError: args.success ? null : args.error\n            }\n          };\n          pioneer.exporters.forEach(async exporter => {\n            if (\n              exporter.activeEvents\n                ?.map(o => o.name)\n                .includes(CellExecuteEventProducer.id)\n            ) {\n              await pioneer.publishEvent(\n                notebookPanel,\n                event,\n                exporter,\n                exporter.activeEvents?.find(\n                  o => o.name == CellExecuteEventProducer.id\n                )?.logWholeNotebook\n              );\n            }\n          });\n        }\n      }\n    );\n  }\n}\n\nexport class CellRemoveEventProducer {\n  static id: string = 'CellRemoveEvent';\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    notebookPanel.content.model?.cells.changed.connect(\n      async (_, args: IObservableList.IChangedArgs<ICellModel>) => {\n        if (args.type === 'remove') {\n          const removedCell = {\n            index: args.oldIndex\n          };\n          const event = {\n            eventName: CellRemoveEventProducer.id,\n            eventTime: Date.now(),\n            eventInfo: {\n              cells: [removedCell]\n            }\n          };\n          pioneer.exporters.forEach(async exporter => {\n            if (\n              exporter.activeEvents\n                ?.map(o => o.name)\n                .includes(CellRemoveEventProducer.id)\n            ) {\n              await pioneer.publishEvent(\n                notebookPanel,\n                event,\n                exporter,\n                exporter.activeEvents?.find(\n                  o => o.name == CellRemoveEventProducer.id\n                )?.logWholeNotebook\n              );\n            }\n          });\n        }\n      }\n    );\n  }\n}\n\nexport class ClipboardCopyEventProducer {\n  static id: string = 'ClipboardCopyEvent';\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    notebookPanel.node.addEventListener('copy', async () => {\n      const cell = {\n        id: notebookPanel.content.activeCell?.model.id,\n        index: notebookPanel.content.widgets.findIndex(\n          value => value === notebookPanel.content.activeCell\n        )\n      };\n      const text = document.getSelection()?.toString();\n      const event = {\n        eventName: ClipboardCopyEventProducer.id,\n        eventTime: Date.now(),\n        eventInfo: {\n          cells: [cell],\n          selection: text\n        }\n      };\n      pioneer.exporters.forEach(async exporter => {\n        if (\n          exporter.activeEvents\n            ?.map(o => o.name)\n            .includes(ClipboardCopyEventProducer.id)\n        ) {\n          await pioneer.publishEvent(\n            notebookPanel,\n            event,\n            exporter,\n            exporter.activeEvents?.find(\n              o => o.name == ClipboardCopyEventProducer.id\n            )?.logWholeNotebook\n          );\n        }\n      });\n    });\n  }\n}\n\nexport class ClipboardCutEventProducer {\n  static id: string = 'ClipboardCutEvent';\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    notebookPanel.node.addEventListener('cut', async () => {\n      const cell = {\n        id: notebookPanel.content.activeCell?.model.id,\n        index: notebookPanel.content.widgets.findIndex(\n          value => value === notebookPanel.content.activeCell\n        )\n      };\n      const text = document.getSelection()?.toString();\n      const event = {\n        eventName: ClipboardCutEventProducer.id,\n        eventTime: Date.now(),\n        eventInfo: {\n          cells: [cell],\n          selection: text\n        }\n      };\n      pioneer.exporters.forEach(async exporter => {\n        if (\n          exporter.activeEvents\n            ?.map(o => o.name)\n            .includes(ClipboardCutEventProducer.id)\n        ) {\n          await pioneer.publishEvent(\n            notebookPanel,\n            event,\n            exporter,\n            exporter.activeEvents?.find(\n              o => o.name == ClipboardCutEventProducer.id\n            )?.logWholeNotebook\n          );\n        }\n      });\n    });\n  }\n}\n\nexport class ClipboardPasteEventProducer {\n  static id: string = 'ClipboardPasteEvent';\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    notebookPanel.node.addEventListener('paste', async (e: ClipboardEvent) => {\n      const cell = {\n        id: notebookPanel.content.activeCell?.model.id,\n        index: notebookPanel.content.widgets.findIndex(\n          value => value === notebookPanel.content.activeCell\n        )\n      };\n      const text = (e.clipboardData || (window as any).clipboardData).getData(\n        'text'\n      );\n      const event = {\n        eventName: ClipboardPasteEventProducer.id,\n        eventTime: Date.now(),\n        eventInfo: {\n          cells: [cell],\n          selection: text\n        }\n      };\n      pioneer.exporters.forEach(async exporter => {\n        if (\n          exporter.activeEvents\n            ?.map(o => o.name)\n            .includes(ClipboardPasteEventProducer.id)\n        ) {\n          await pioneer.publishEvent(\n            notebookPanel,\n            event,\n            exporter,\n            exporter.activeEvents?.find(\n              o => o.name == ClipboardPasteEventProducer.id\n            )?.logWholeNotebook\n          );\n        }\n      });\n    });\n  }\n}\n\nexport class NotebookHiddenEventProducer {\n  static id: string = 'NotebookHiddenEvent';\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    document.addEventListener('visibilitychange', async (e: Event) => {\n      if (\n        document.visibilityState === 'hidden' &&\n        document.contains(notebookPanel.node)\n      ) {\n        const event = {\n          eventName: NotebookHiddenEventProducer.id,\n          eventTime: Date.now(),\n          eventInfo: null\n        };\n        pioneer.exporters.forEach(async exporter => {\n          if (\n            exporter.activeEvents\n              ?.map(o => o.name)\n              .includes(NotebookHiddenEventProducer.id)\n          ) {\n            await pioneer.publishEvent(\n              notebookPanel,\n              event,\n              exporter,\n              exporter.activeEvents?.find(\n                o => o.name == NotebookHiddenEventProducer.id\n              )?.logWholeNotebook\n            );\n          }\n        });\n      }\n    });\n  }\n}\n\nexport class NotebookOpenEventProducer {\n  static id: string = 'NotebookOpenEvent';\n  private produced: boolean = false;\n\n  async listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    if (!this.produced) {\n      const event = {\n        eventName: NotebookOpenEventProducer.id,\n        eventTime: Date.now(),\n        eventInfo: {\n          environ: await requestAPI<any>('environ')\n        }\n      };\n      pioneer.exporters.forEach(async exporter => {\n        if (\n          exporter.activeEvents\n            ?.map(o => o.name)\n            .includes(NotebookOpenEventProducer.id)\n        ) {\n          await pioneer.publishEvent(\n            notebookPanel,\n            event,\n            exporter,\n            exporter.activeEvents?.find(\n              o => o.name == NotebookOpenEventProducer.id\n            )?.logWholeNotebook\n          );\n          this.produced = true;\n        }\n      });\n    }\n  }\n}\n\nexport class NotebookSaveEventProducer {\n  static id: string = 'NotebookSaveEvent';\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    notebookPanel.context.saveState.connect(\n      async (_, saveState: DocumentRegistry.SaveState) => {\n        if (saveState.match('completed')) {\n          const event = {\n            eventName: NotebookSaveEventProducer.id,\n            eventTime: Date.now(),\n            eventInfo: null\n          };\n          pioneer.exporters.forEach(async exporter => {\n            if (\n              exporter.activeEvents\n                ?.map(o => o.name)\n                .includes(NotebookSaveEventProducer.id)\n            ) {\n              await pioneer.publishEvent(\n                notebookPanel,\n                event,\n                exporter,\n                exporter.activeEvents?.find(\n                  o => o.name == NotebookSaveEventProducer.id\n                )?.logWholeNotebook\n              );\n            }\n          });\n        }\n      }\n    );\n  }\n}\n\nconst getVisibleCells = (notebookPanel: NotebookPanel) => {\n  const visibleCells: Array<any> = [];\n\n  for (let index = 0; index < notebookPanel.content.widgets.length; index++) {\n    const cell = notebookPanel.content.widgets[index];\n\n    const cellTop = cell.node.offsetTop;\n    const cellBottom = cell.node.offsetTop + cell.node.offsetHeight;\n    const viewTop = notebookPanel.node.getElementsByClassName('jp-WindowedPanel-outer')[0].scrollTop;\n    const viewBottom =\n      notebookPanel.content.node.getElementsByClassName('jp-WindowedPanel-outer')[0].scrollTop +\n      notebookPanel.content.node.getElementsByClassName('jp-WindowedPanel-outer')[0].clientHeight;\n\n    if (cellTop <= viewBottom && cellBottom >= viewTop) {\n      visibleCells.push({\n        id: cell.model.id,\n        index: index\n      });\n    }\n  }\n\n  return visibleCells;\n};\n\nexport class NotebookScrollEventProducer {\n  static id: string = 'NotebookScrollEvent';\n  private timeout = 0;\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    notebookPanel.node.getElementsByClassName('jp-WindowedPanel-outer')[0].addEventListener('scroll', async (e: Event) => {\n      e.stopPropagation();\n      clearTimeout(this.timeout);\n      await new Promise(\n        resolve => (this.timeout = window.setTimeout(resolve, 1500))\n      ); // wait 1.5 seconds before preceding\n      const event = {\n        eventName: NotebookScrollEventProducer.id,\n        eventTime: Date.now(),\n        eventInfo: {\n          cells: getVisibleCells(notebookPanel)\n        }\n      };\n      pioneer.exporters.forEach(async exporter => {\n        if (\n          exporter.activeEvents\n            ?.map(o => o.name)\n            .includes(NotebookScrollEventProducer.id)\n        ) {\n          await pioneer.publishEvent(\n            notebookPanel,\n            event,\n            exporter,\n            exporter.activeEvents?.find(\n              o => o.name == NotebookScrollEventProducer.id\n            )?.logWholeNotebook\n          );\n        }\n      });\n    });\n  }\n}\n\nexport class NotebookVisibleEventProducer {\n  static id: string = 'NotebookVisibleEvent';\n\n  listen(notebookPanel: NotebookPanel, pioneer: IJupyterLabPioneer) {\n    document.addEventListener('visibilitychange', async () => {\n      if (\n        document.visibilityState === 'visible' &&\n        document.contains(notebookPanel.node)\n      ) {\n        const event = {\n          eventName: NotebookVisibleEventProducer.id,\n          eventTime: Date.now(),\n          eventInfo: {\n            cells: getVisibleCells(notebookPanel)\n          }\n        };\n        pioneer.exporters.forEach(async exporter => {\n          if (\n            exporter.activeEvents\n              ?.map(o => o.name)\n              .includes(NotebookVisibleEventProducer.id)\n          ) {\n            await pioneer.publishEvent(\n              notebookPanel,\n              event,\n              exporter,\n              exporter.activeEvents?.find(\n                o => o.name == NotebookVisibleEventProducer.id\n              )?.logWholeNotebook\n            );\n          }\n        });\n      }\n    });\n  }\n}\n\nexport const producerCollection = [\n  ActiveCellChangeEventProducer,\n  CellAddEventProducer,\n  CellExecuteEventProducer,\n  CellRemoveEventProducer,\n  CellEditEventProducer,\n  ClipboardCopyEventProducer,\n  ClipboardCutEventProducer,\n  ClipboardPasteEventProducer,\n  NotebookHiddenEventProducer,\n  NotebookOpenEventProducer,\n  NotebookSaveEventProducer,\n  NotebookScrollEventProducer,\n  NotebookVisibleEventProducer\n];\n","import * as React from 'react';\nimport { Dialog, showDialog, Notification } from '@jupyterlab/apputils';\nimport { JupyterFrontEnd } from '@jupyterlab/application';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { Exporter } from './types';\n\nexport const sendInfoNotification = (\n  exporters: Exporter[],\n  isGlobal: boolean\n) => {\n  const exporterMessage = exporters\n    .map(each => each.args?.id || each.type)\n    .join(' & ');\n  let message;\n  if (isGlobal && exporterMessage) {\n    message = `Telemetry data is being logged to ${exporterMessage} through jupyterlab-pioneer. \\n See Help menu -> JupyterLab Pioneer for more details.`;\n  } else if (isGlobal && !exporterMessage) {\n    message = `Telemetry data is being logged through jupyterlab-pioneer. \\n See Help menu -> JupyterLab Pioneer for more details.`;\n  } else {\n    message = `Embedded telemetry settings loaded. Telemetry data is being logged to ${exporterMessage} now.`;\n  }\n  Notification.info(message, { autoClose: 20000 });\n};\n\nexport const addInfoToHelpMenu = (\n  app: JupyterFrontEnd,\n  mainMenu: IMainMenu,\n  version: string\n) => {\n  // Add extension info to help menu\n  app.commands.addCommand('help:pioneer', {\n    label: 'JupyterLab Pioneer',\n    execute: () => {\n      // Create the header of the dialog\n      const title = (\n        <span className=\"jp-About-header\">\n          JupyterLab Pioneer\n          <div className=\"jp-About-header-info\">\n            <span className=\"jp-About-version-info\">\n              <span className=\"jp-About-version\">Version {version}</span>\n            </span>\n          </div>\n        </span>\n      );\n\n      // Create the body of the dialog\n      const contributorsURL =\n        'https://github.com/educational-technology-collective/jupyterlab-pioneer/graphs/contributors';\n      const docURL = 'https://jupyterlab-pioneer.readthedocs.io/en/latest/';\n      const gitURL =\n        'https://github.com/educational-technology-collective/jupyterlab-pioneer';\n      const externalLinks = (\n        <span className=\"jp-About-externalLinks\">\n          <a\n            href={contributorsURL}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"jp-Button-flat\"\n          >\n            CONTRIBUTOR LIST\n          </a>\n          <a\n            href={docURL}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"jp-Button-flat\"\n          >\n            DOCUMENTATION\n          </a>\n          <a\n            href={gitURL}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"jp-Button-flat\"\n          >\n            GITHUB REPO\n          </a>\n        </span>\n      );\n      const copyright = (\n        <span className=\"jp-About-copyright\">\n          © 2023 Educational Technology Collective\n        </span>\n      );\n      const body = (\n        <div className=\"jp-About-body\">\n          {externalLinks}\n          {copyright}\n        </div>\n      );\n\n      return showDialog({\n        title,\n        body,\n        buttons: [\n          Dialog.createButton({\n            label: 'Dismiss',\n            className: 'jp-About-button jp-mod-reject jp-mod-styled'\n          })\n        ]\n      });\n    }\n  });\n\n  mainMenu.helpMenu.addGroup([{ command: 'help:pioneer' }]);\n};\n"],"names":[],"sourceRoot":""}