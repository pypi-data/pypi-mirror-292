# coding: utf-8

"""
    Orbit Determination API

    Orbit Determination API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_determination_python_client.models.unscented_kalman_filter_initial_guess_configuration import UnscentedKalmanFilterInitialGuessConfiguration

class TestUnscentedKalmanFilterInitialGuessConfiguration(unittest.TestCase):
    """UnscentedKalmanFilterInitialGuessConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UnscentedKalmanFilterInitialGuessConfiguration:
        """Test UnscentedKalmanFilterInitialGuessConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UnscentedKalmanFilterInitialGuessConfiguration`
        """
        model = UnscentedKalmanFilterInitialGuessConfiguration()
        if include_optional:
            return UnscentedKalmanFilterInitialGuessConfiguration(
                initial_orbit = spacetower_orbit_determination_python_client.models.orbit.Orbit(
                    orbit_type = 'KEPLERIAN', ),
                space_object = spacetower_orbit_determination_python_client.models.space_object.SpaceObject(
                    mass = 1.337, 
                    solar_array_system = spacetower_orbit_determination_python_client.models.solar_array_system.SolarArraySystem(
                        solar_array_power = 1.337, ), 
                    propulsion_system = spacetower_orbit_determination_python_client.models.propulsion_system.PropulsionSystem(
                        active_propulsion_power_consumption = 1.337, 
                        thruster = spacetower_orbit_determination_python_client.models.thruster.Thruster(
                            thrust = 1.337, 
                            specific_impulse = 1.337, 
                            axis_in_space_object_frame = spacetower_orbit_determination_python_client.models.vector3_d.Vector3D(
                                x = 1.337, 
                                y = 1.337, 
                                z = 1.337, ), ), ), 
                    space_object_type = 'ISOTROPIC', ),
                initial_orbital_covariance = spacetower_orbit_determination_python_client.models.orbital_covariance_matrix.OrbitalCovarianceMatrix(
                    covariance_type = 'KEPLERIAN', )
            )
        else:
            return UnscentedKalmanFilterInitialGuessConfiguration(
                initial_orbit = spacetower_orbit_determination_python_client.models.orbit.Orbit(
                    orbit_type = 'KEPLERIAN', ),
        )
        """

    def testUnscentedKalmanFilterInitialGuessConfiguration(self):
        """Test UnscentedKalmanFilterInitialGuessConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
