"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class VideoComposition(google.protobuf.message.Message):
    """/ Video composition of the video stream from the robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCREEN_FIELD_NUMBER: builtins.int
    screen: builtins.str
    """/ Name of the screen to stream"""
    def __init__(
        self,
        *,
        screen: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["screen", b"screen"]) -> None: ...

global___VideoComposition = VideoComposition

@typing_extensions.final
class CameraControls(google.protobuf.message.Message):
    """/ Camera controls available on the robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PTZ_GO_TO_FIELD_NUMBER: builtins.int
    NAVIGATE_TO_FIELD_NUMBER: builtins.int
    ptz_go_to: builtins.bool
    """/ The robot supports controlling PTZ camera by clicking in video stream"""
    navigate_to: builtins.bool
    """/ The robot supports navigation by clicking in video stream"""
    def __init__(
        self,
        *,
        ptz_go_to: builtins.bool = ...,
        navigate_to: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["navigate_to", b"navigate_to", "ptz_go_to", b"ptz_go_to"]) -> None: ...

global___CameraControls = CameraControls

@typing_extensions.final
class VideoConfiguration(google.protobuf.message.Message):
    """/ Video configuration of the video stream from the robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESCRIPTION_FIELD_NUMBER: builtins.int
    STREAM_ID_FIELD_NUMBER: builtins.int
    ROOM_ID_FIELD_NUMBER: builtins.int
    AVAILABLE_VIDEO_COMPOSITIONS_FIELD_NUMBER: builtins.int
    AVAILABLE_CAMERA_CONTROLS_FIELD_NUMBER: builtins.int
    description: builtins.str
    """/ Description of video feed"""
    stream_id: builtins.int
    """/ Id of the stream"""
    room_id: builtins.int
    """/ Id of the video room"""
    @property
    def available_video_compositions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VideoComposition]:
        """/ Available video compositions"""
    @property
    def available_camera_controls(self) -> global___CameraControls:
        """/ Available camera controls"""
    def __init__(
        self,
        *,
        description: builtins.str = ...,
        stream_id: builtins.int = ...,
        room_id: builtins.int = ...,
        available_video_compositions: collections.abc.Iterable[global___VideoComposition] | None = ...,
        available_camera_controls: global___CameraControls | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["available_camera_controls", b"available_camera_controls"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["available_camera_controls", b"available_camera_controls", "available_video_compositions", b"available_video_compositions", "description", b"description", "room_id", b"room_id", "stream_id", b"stream_id"]) -> None: ...

global___VideoConfiguration = VideoConfiguration

@typing_extensions.final
class LocalMediaTrack(google.protobuf.message.Message):
    """/ Information about the local media track published by the robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENABLED_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    enabled: builtins.bool
    """/ A boolean indicating whether the local media track is enabled. If the value is
    / true, the track is active and sending media data. If the value is false, the track is inactive and not sending data.
    """
    id: builtins.str
    """/ A unique identifier for the local media track. This identifier is used to differentiate between multiple media tracks."""
    kind: builtins.str
    """/ A string representing the type of media track. The value of this field will typically be "audio" or "video"."""
    name: builtins.str
    """/ A string representing the name of the media track. This name can be used to identify the
    / track in a human-readable way, and is often displayed to users in a video conferencing application.
    """
    priority: builtins.str
    """/ A string representing the priority of the media track. This field is used to determine which tracks should be
    / transmitted first in cases where bandwidth is limited. Higher-priority tracks will be transmitted before lower-priority tracks.
    """
    def __init__(
        self,
        *,
        enabled: builtins.bool = ...,
        id: builtins.str = ...,
        kind: builtins.str = ...,
        name: builtins.str = ...,
        priority: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled", b"enabled", "id", b"id", "kind", b"kind", "name", b"name", "priority", b"priority"]) -> None: ...

global___LocalMediaTrack = LocalMediaTrack

@typing_extensions.final
class LocalMediaTracks(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCAL_TRACKS_FIELD_NUMBER: builtins.int
    SDP_FIELD_NUMBER: builtins.int
    @property
    def local_tracks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocalMediaTrack]:
        """/ local media tracks"""
    sdp: builtins.str
    """/ Session Description as per the Session Description Protocol (SDP)"""
    def __init__(
        self,
        *,
        local_tracks: collections.abc.Iterable[global___LocalMediaTrack] | None = ...,
        sdp: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["local_tracks", b"local_tracks", "sdp", b"sdp"]) -> None: ...

global___LocalMediaTracks = LocalMediaTracks

@typing_extensions.final
class MediaDisconnect(google.protobuf.message.Message):
    """/ Request disconnect of media streams"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___MediaDisconnect = MediaDisconnect

@typing_extensions.final
class MediaPublisher(google.protobuf.message.Message):
    """/ Specify session and sdp for publishing a local media track"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCAL_TRACKS_FIELD_NUMBER: builtins.int
    HEARTBEAT_FIELD_NUMBER: builtins.int
    MEDIA_DISCONNECT_FIELD_NUMBER: builtins.int
    @property
    def local_tracks(self) -> global___LocalMediaTracks:
        """/ Local media tracks"""
    heartbeat: builtins.int
    """/ Heartbeat message count (monotonically increasing)"""
    @property
    def media_disconnect(self) -> global___MediaDisconnect:
        """/ Robot notifies it will or has disconnected their media stream"""
    def __init__(
        self,
        *,
        local_tracks: global___LocalMediaTracks | None = ...,
        heartbeat: builtins.int = ...,
        media_disconnect: global___MediaDisconnect | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["heartbeat", b"heartbeat", "kind", b"kind", "local_tracks", b"local_tracks", "media_disconnect", b"media_disconnect"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["heartbeat", b"heartbeat", "kind", b"kind", "local_tracks", b"local_tracks", "media_disconnect", b"media_disconnect"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["kind", b"kind"]) -> typing_extensions.Literal["local_tracks", "heartbeat", "media_disconnect"] | None: ...

global___MediaPublisher = MediaPublisher

@typing_extensions.final
class TokenRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___TokenRequest = TokenRequest

@typing_extensions.final
class MediaSubscriber(google.protobuf.message.Message):
    """/ Specify which robot media stream to subscribe to"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROBOT_DATA_SET_ID_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    HEARTBEAT_FIELD_NUMBER: builtins.int
    robot_data_set_id: builtins.int
    """/ Robot dataset id of the robot we want to connect to"""
    @property
    def token(self) -> global___TokenRequest:
        """/ InRobot request token"""
    heartbeat: builtins.int
    """/ InRobot heartbeat, format: unix timestamp"""
    def __init__(
        self,
        *,
        robot_data_set_id: builtins.int = ...,
        token: global___TokenRequest | None = ...,
        heartbeat: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["heartbeat", b"heartbeat", "kind", b"kind", "token", b"token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["heartbeat", b"heartbeat", "kind", b"kind", "robot_data_set_id", b"robot_data_set_id", "token", b"token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["kind", b"kind"]) -> typing_extensions.Literal["token", "heartbeat"] | None: ...

global___MediaSubscriber = MediaSubscriber

@typing_extensions.final
class VideoRequest(google.protobuf.message.Message):
    """/ Specify your webrtc offer"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PUBLISHER_FIELD_NUMBER: builtins.int
    SUBSCRIBER_FIELD_NUMBER: builtins.int
    @property
    def publisher(self) -> global___MediaPublisher:
        """/ use this field if the request issuer wants to publish local media tracks"""
    @property
    def subscriber(self) -> global___MediaSubscriber:
        """/ use this field if the request issuer wants to consume/subscribe to remote media tracks"""
    def __init__(
        self,
        *,
        publisher: global___MediaPublisher | None = ...,
        subscriber: global___MediaSubscriber | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["kind", b"kind", "publisher", b"publisher", "subscriber", b"subscriber"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["kind", b"kind", "publisher", b"publisher", "subscriber", b"subscriber"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["kind", b"kind"]) -> typing_extensions.Literal["publisher", "subscriber"] | None: ...

global___VideoRequest = VideoRequest

@typing_extensions.final
class TwilioConnectCredentials(google.protobuf.message.Message):
    """/ If using the twilio-video.js sdk, the necessary session description
    / is deduced from the token and room name by the Twilio API
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKEN_FIELD_NUMBER: builtins.int
    token: builtins.str
    """/ jwt auth token issued by the Cognite gRPC signaling service"""
    def __init__(
        self,
        *,
        token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["token", b"token"]) -> None: ...

global___TwilioConnectCredentials = TwilioConnectCredentials

@typing_extensions.final
class IceServer(google.protobuf.message.Message):
    """/ A media traversal candidate, i.e a potential network path between peers"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    URLS_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    CREDENTIAL_FIELD_NUMBER: builtins.int
    @property
    def urls(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """/ urls to connect to"""
    username: builtins.str
    """/ ice server username"""
    credential: builtins.str
    """/ ice server password"""
    def __init__(
        self,
        *,
        urls: collections.abc.Iterable[builtins.str] | None = ...,
        username: builtins.str = ...,
        credential: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["credential", b"credential", "urls", b"urls", "username", b"username"]) -> None: ...

global___IceServer = IceServer

@typing_extensions.final
class IceServers(google.protobuf.message.Message):
    """/ Collection of all ICE server candidates"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVERS_FIELD_NUMBER: builtins.int
    @property
    def servers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IceServer]: ...
    def __init__(
        self,
        *,
        servers: collections.abc.Iterable[global___IceServer] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["servers", b"servers"]) -> None: ...

global___IceServers = IceServers

@typing_extensions.final
class VideoHeartbeatResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___VideoHeartbeatResponse = VideoHeartbeatResponse

@typing_extensions.final
class VideoResponse(google.protobuf.message.Message):
    """/ The WebRTC offer returned from the Janus/Twilio SFU"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ICE_SERVERS_FIELD_NUMBER: builtins.int
    SDP_FIELD_NUMBER: builtins.int
    TWILIO_CONNECT_CREDENTIALS_FIELD_NUMBER: builtins.int
    HEARTBEAT_FIELD_NUMBER: builtins.int
    @property
    def ice_servers(self) -> global___IceServers:
        """/ A list of possible addresses that the WebRTC Agent is available on"""
    sdp: builtins.str
    """/ If connecting using bare-bones webrtc library"""
    @property
    def twilio_connect_credentials(self) -> global___TwilioConnectCredentials:
        """/ If connecting using twilio-video.js library"""
    @property
    def heartbeat(self) -> global___VideoHeartbeatResponse:
        """/ Empty response on heartbeat"""
    def __init__(
        self,
        *,
        ice_servers: global___IceServers | None = ...,
        sdp: builtins.str = ...,
        twilio_connect_credentials: global___TwilioConnectCredentials | None = ...,
        heartbeat: global___VideoHeartbeatResponse | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["heartbeat", b"heartbeat", "ice_servers", b"ice_servers", "kind", b"kind", "sdp", b"sdp", "twilio_connect_credentials", b"twilio_connect_credentials"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["heartbeat", b"heartbeat", "ice_servers", b"ice_servers", "kind", b"kind", "sdp", b"sdp", "twilio_connect_credentials", b"twilio_connect_credentials"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["kind", b"kind"]) -> typing_extensions.Literal["ice_servers", "sdp", "twilio_connect_credentials", "heartbeat"] | None: ...

global___VideoResponse = VideoResponse

@typing_extensions.final
class VideoControlRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___VideoControlRequest = VideoControlRequest

@typing_extensions.final
class VideoControlResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEARTBEAT_FIELD_NUMBER: builtins.int
    heartbeat: builtins.int
    """/ Heartbeat to robot, format: unix timestamp"""
    def __init__(
        self,
        *,
        heartbeat: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["heartbeat", b"heartbeat"]) -> None: ...

global___VideoControlResponse = VideoControlResponse
