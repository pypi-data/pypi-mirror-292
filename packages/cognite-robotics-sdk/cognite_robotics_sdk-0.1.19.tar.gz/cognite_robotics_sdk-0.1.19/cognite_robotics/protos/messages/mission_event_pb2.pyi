"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import messages.robot_state_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ActionOutcome:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ActionOutcomeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ActionOutcome.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ACTION_COMPLETED: _ActionOutcome.ValueType  # 0
    """/ Action was successfully completed"""
    ACTION_FAILED: _ActionOutcome.ValueType  # 1
    """/ Robot tried but did not manage to successfully complete the action and gave up"""
    ACTION_ABORTED: _ActionOutcome.ValueType  # 2
    """/ User aborted (or asked to skip) action while action was in progress"""
    ACTION_SKIPPED: _ActionOutcome.ValueType  # 3
    """/ User asked to skip the action before action was started"""

class ActionOutcome(_ActionOutcome, metaclass=_ActionOutcomeEnumTypeWrapper):
    """/ Outcome of an action"""

ACTION_COMPLETED: ActionOutcome.ValueType  # 0
"""/ Action was successfully completed"""
ACTION_FAILED: ActionOutcome.ValueType  # 1
"""/ Robot tried but did not manage to successfully complete the action and gave up"""
ACTION_ABORTED: ActionOutcome.ValueType  # 2
"""/ User aborted (or asked to skip) action while action was in progress"""
ACTION_SKIPPED: ActionOutcome.ValueType  # 3
"""/ User asked to skip the action before action was started"""
global___ActionOutcome = ActionOutcome

@typing_extensions.final
class ActionDoneEvent(google.protobuf.message.Message):
    """/ ActionDoneEvent is sent when an action is completed"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTION_REPORT_ID_FIELD_NUMBER: builtins.int
    ACTION_OUTCOME_FIELD_NUMBER: builtins.int
    ACTION_EXTERNAL_ID_FIELD_NUMBER: builtins.int
    ACTION_NAME_FIELD_NUMBER: builtins.int
    action_report_id: builtins.str
    """/ Marks completion of an action within a mission"""
    action_outcome: global___ActionOutcome.ValueType
    """/ Outcome state of the action"""
    action_external_id: builtins.str
    """/ Action external id (unique identifier for the executed action)"""
    action_name: builtins.str
    """/ Action name"""
    def __init__(
        self,
        *,
        action_report_id: builtins.str = ...,
        action_outcome: global___ActionOutcome.ValueType = ...,
        action_external_id: builtins.str = ...,
        action_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["action_external_id", b"action_external_id", "action_name", b"action_name", "action_outcome", b"action_outcome", "action_report_id", b"action_report_id"]) -> None: ...

global___ActionDoneEvent = ActionDoneEvent

@typing_extensions.final
class StateChangeEvent(google.protobuf.message.Message):
    """/ StateChangeEvent is sent when a state changes"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MISSION_STATE_FIELD_NUMBER: builtins.int
    CONNECTION_STATE_FIELD_NUMBER: builtins.int
    DOCKING_STATE_FIELD_NUMBER: builtins.int
    POWER_STATE_FIELD_NUMBER: builtins.int
    mission_state: messages.robot_state_pb2.MissionState.ValueType
    connection_state: messages.robot_state_pb2.ConnectionState.ValueType
    docking_state: messages.robot_state_pb2.DockingState.ValueType
    power_state: messages.robot_state_pb2.PowerState.ValueType
    def __init__(
        self,
        *,
        mission_state: messages.robot_state_pb2.MissionState.ValueType = ...,
        connection_state: messages.robot_state_pb2.ConnectionState.ValueType = ...,
        docking_state: messages.robot_state_pb2.DockingState.ValueType = ...,
        power_state: messages.robot_state_pb2.PowerState.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["connection_state", b"connection_state", "docking_state", b"docking_state", "mission_state", b"mission_state", "new_state", b"new_state", "power_state", b"power_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["connection_state", b"connection_state", "docking_state", b"docking_state", "mission_state", b"mission_state", "new_state", b"new_state", "power_state", b"power_state"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["new_state", b"new_state"]) -> typing_extensions.Literal["mission_state", "connection_state", "docking_state", "power_state"] | None: ...

global___StateChangeEvent = StateChangeEvent

@typing_extensions.final
class MissionEvent(google.protobuf.message.Message):
    """/ MissionEvent contains events that happen during missions"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OCCURRED_TIME_FIELD_NUMBER: builtins.int
    ACTION_DONE_EVENT_FIELD_NUMBER: builtins.int
    STATE_CHANGE_EVENT_FIELD_NUMBER: builtins.int
    occurred_time: builtins.int
    """/ Time when the event occurred (UNIX_EPOCH in milliseconds)"""
    @property
    def action_done_event(self) -> global___ActionDoneEvent: ...
    @property
    def state_change_event(self) -> global___StateChangeEvent: ...
    def __init__(
        self,
        *,
        occurred_time: builtins.int = ...,
        action_done_event: global___ActionDoneEvent | None = ...,
        state_change_event: global___StateChangeEvent | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action_done_event", b"action_done_event", "event", b"event", "state_change_event", b"state_change_event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action_done_event", b"action_done_event", "event", b"event", "occurred_time", b"occurred_time", "state_change_event", b"state_change_event"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["event", b"event"]) -> typing_extensions.Literal["action_done_event", "state_change_event"] | None: ...

global___MissionEvent = MissionEvent
