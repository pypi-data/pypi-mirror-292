"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import messages.common_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class User(google.protobuf.message.Message):
    """/ Details of the user in control over a robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_IDENTIFIER_FIELD_NUMBER: builtins.int
    USER_EMAIL_FIELD_NUMBER: builtins.int
    user_identifier: builtins.str
    """/ Unique user identifier, provided by Cognite auth services"""
    user_email: builtins.str
    """/ User email, used for display
    this field will be deprecated once user identity information is available internally from Cognite services
    """
    def __init__(
        self,
        *,
        user_identifier: builtins.str = ...,
        user_email: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_email", b"user_email", "user_identifier", b"user_identifier"]) -> None: ...

global___User = User

@typing_extensions.final
class ControlAuthorityRequest(google.protobuf.message.Message):
    """/ Request to take or release control authority over a robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROBOT_DATA_SET_ID_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    robot_data_set_id: builtins.int
    """/ Id of the robot"""
    @property
    def command(self) -> global___ControlAuthorityCommand:
        """/ Control authority command"""
    def __init__(
        self,
        *,
        robot_data_set_id: builtins.int = ...,
        command: global___ControlAuthorityCommand | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["command", b"command"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["command", b"command", "robot_data_set_id", b"robot_data_set_id"]) -> None: ...

global___ControlAuthorityRequest = ControlAuthorityRequest

@typing_extensions.final
class ControlAuthorityCommand(google.protobuf.message.Message):
    """/ Control authority command"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TAKE_CONTROL_AUTHORITY_FIELD_NUMBER: builtins.int
    RELEASE_CONTROL_AUTHORITY_FIELD_NUMBER: builtins.int
    @property
    def take_control_authority(self) -> global___TakeControlAuthority:
        """/ Take control authority over the robot"""
    @property
    def release_control_authority(self) -> global___ReleaseControlAuthority:
        """/ Release control authority over the robot"""
    def __init__(
        self,
        *,
        take_control_authority: global___TakeControlAuthority | None = ...,
        release_control_authority: global___ReleaseControlAuthority | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["command", b"command", "release_control_authority", b"release_control_authority", "take_control_authority", b"take_control_authority"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["command", b"command", "release_control_authority", b"release_control_authority", "take_control_authority", b"take_control_authority"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["command", b"command"]) -> typing_extensions.Literal["take_control_authority", "release_control_authority"] | None: ...

global___ControlAuthorityCommand = ControlAuthorityCommand

@typing_extensions.final
class TakeControlAuthority(google.protobuf.message.Message):
    """/ Message to take control over a robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_EMAIL_FIELD_NUMBER: builtins.int
    HIJACK_FIELD_NUMBER: builtins.int
    user_email: builtins.str
    """/ The user_email field will be deprecated in the near future"""
    hijack: builtins.bool
    def __init__(
        self,
        *,
        user_email: builtins.str = ...,
        hijack: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hijack", b"hijack", "hijack_control_authority", b"hijack_control_authority"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hijack", b"hijack", "hijack_control_authority", b"hijack_control_authority", "user_email", b"user_email"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["hijack_control_authority", b"hijack_control_authority"]) -> typing_extensions.Literal["hijack"] | None: ...

global___TakeControlAuthority = TakeControlAuthority

@typing_extensions.final
class ReleaseControlAuthority(google.protobuf.message.Message):
    """/ Message to release control over a robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ReleaseControlAuthority = ReleaseControlAuthority

@typing_extensions.final
class ControlAuthorityResponse(google.protobuf.message.Message):
    """/ Response to control authority request"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WHO_HAS_CONTROL_AUTHORITY_FIELD_NUMBER: builtins.int
    SUCCESS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def who_has_control_authority(self) -> global___WhoHasControlAuthorityMessage:
        """/ Information on the user in control over the robot"""
    @property
    def success(self) -> messages.common_pb2.SuccessMessage: ...
    @property
    def error(self) -> messages.common_pb2.ErrorMessage: ...
    def __init__(
        self,
        *,
        who_has_control_authority: global___WhoHasControlAuthorityMessage | None = ...,
        success: messages.common_pb2.SuccessMessage | None = ...,
        error: messages.common_pb2.ErrorMessage | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error", b"error", "response", b"response", "success", b"success", "who_has_control_authority", b"who_has_control_authority"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error", b"error", "response", b"response", "success", b"success", "who_has_control_authority", b"who_has_control_authority"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["response", b"response"]) -> typing_extensions.Literal["success", "error"] | None: ...

global___ControlAuthorityResponse = ControlAuthorityResponse

@typing_extensions.final
class WhoHasControlAuthorityMessage(google.protobuf.message.Message):
    """/ Message detailing who has control authority over a robot within a project"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    ROBOT_DATA_SET_ID_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    project_id: builtins.int
    """/ Project id"""
    robot_data_set_id: builtins.int
    """/ Robot unique identifier, available through Robotics API"""
    @property
    def user(self) -> global___User:
        """/ User in control over the robot with robot_data_set_id"""
    def __init__(
        self,
        *,
        project_id: builtins.int = ...,
        robot_data_set_id: builtins.int = ...,
        user: global___User | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user", b"user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project_id", b"project_id", "robot_data_set_id", b"robot_data_set_id", "user", b"user"]) -> None: ...

global___WhoHasControlAuthorityMessage = WhoHasControlAuthorityMessage
