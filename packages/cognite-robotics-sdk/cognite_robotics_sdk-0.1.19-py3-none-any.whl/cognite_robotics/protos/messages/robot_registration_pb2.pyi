"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import messages.common_pb2
import messages.mission_pb2
import messages.video_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Metadata(google.protobuf.message.Message):
    """/ Metadata that will be used by InRobot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GET_ESTOP_FIELD_NUMBER: builtins.int
    POWER_ON_FIELD_NUMBER: builtins.int
    HAS_PAUSE_MISSION_FIELD_NUMBER: builtins.int
    get_estop: builtins.bool
    """/ Robot has estop functionality"""
    power_on: builtins.bool
    """/ Robot has power_on functionality"""
    has_pause_mission: builtins.bool
    """/ Robot has mission pause and resume functionality"""
    def __init__(
        self,
        *,
        get_estop: builtins.bool = ...,
        power_on: builtins.bool = ...,
        has_pause_mission: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["get_estop", b"get_estop", "has_pause_mission", b"has_pause_mission", "power_on", b"power_on"]) -> None: ...

global___Metadata = Metadata

@typing_extensions.final
class RobotRegistrationRequest(google.protobuf.message.Message):
    """/ Request to register a robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROBOT_NAME_FIELD_NUMBER: builtins.int
    ROBOT_DESCRIPTION_FIELD_NUMBER: builtins.int
    ROBOT_TYPE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    CAPABILITIES_FIELD_NUMBER: builtins.int
    VIDEO_CONFIG_FIELD_NUMBER: builtins.int
    robot_name: builtins.str
    """/ Name of robot"""
    robot_description: builtins.str
    """/ Additional description"""
    robot_type: builtins.str
    """/ What kind of robot e.g SPOT, ANYMAL, DJI_DRONE, TAUROB .."""
    @property
    def metadata(self) -> global___Metadata:
        """/ Robot metadata"""
    @property
    def capabilities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[messages.mission_pb2.RobotCapability]:
        """/ All capabilities that the robot supports"""
    @property
    def video_config(self) -> messages.video_pb2.VideoConfiguration:
        """/ Configuration for InRobot to correctly connect to robot video room"""
    def __init__(
        self,
        *,
        robot_name: builtins.str = ...,
        robot_description: builtins.str = ...,
        robot_type: builtins.str = ...,
        metadata: global___Metadata | None = ...,
        capabilities: collections.abc.Iterable[messages.mission_pb2.RobotCapability] | None = ...,
        video_config: messages.video_pb2.VideoConfiguration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata", "video_config", b"video_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["capabilities", b"capabilities", "metadata", b"metadata", "robot_description", b"robot_description", "robot_name", b"robot_name", "robot_type", b"robot_type", "video_config", b"video_config"]) -> None: ...

global___RobotRegistrationRequest = RobotRegistrationRequest

@typing_extensions.final
class RobotRegistrationResponse(google.protobuf.message.Message):
    """/ Response received from robot registration"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REGISTERED_CAPABILITIES_FIELD_NUMBER: builtins.int
    SUCCESS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def registered_capabilities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[messages.mission_pb2.RobotCapability]:
        """/ Registered capabilities"""
    @property
    def success(self) -> messages.common_pb2.SuccessMessage: ...
    @property
    def error(self) -> messages.common_pb2.ErrorMessage: ...
    def __init__(
        self,
        *,
        registered_capabilities: collections.abc.Iterable[messages.mission_pb2.RobotCapability] | None = ...,
        success: messages.common_pb2.SuccessMessage | None = ...,
        error: messages.common_pb2.ErrorMessage | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error", b"error", "response", b"response", "success", b"success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error", b"error", "registered_capabilities", b"registered_capabilities", "response", b"response", "success", b"success"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["response", b"response"]) -> typing_extensions.Literal["success", "error"] | None: ...

global___RobotRegistrationResponse = RobotRegistrationResponse
