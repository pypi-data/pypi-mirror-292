"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Frame:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FrameEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Frame.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    BODY: _Frame.ValueType  # 0
    MAP: _Frame.ValueType  # 1

class Frame(_Frame, metaclass=_FrameEnumTypeWrapper):
    """/ Coordinate frame representations"""

BODY: Frame.ValueType  # 0
MAP: Frame.ValueType  # 1
global___Frame = Frame

@typing_extensions.final
class Point(google.protobuf.message.Message):
    """/ Point in 3D space"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float
    """/ Meters"""
    y: builtins.float
    """/ Meters"""
    z: builtins.float
    """/ Meters"""
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
        z: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___Point = Point

@typing_extensions.final
class Quaternion(google.protobuf.message.Message):
    """/ Hamilton convention"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    W_FIELD_NUMBER: builtins.int
    x: builtins.float
    y: builtins.float
    z: builtins.float
    w: builtins.float
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
        z: builtins.float = ...,
        w: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["w", b"w", "x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___Quaternion = Quaternion

@typing_extensions.final
class Pose(google.protobuf.message.Message):
    """/ Pose is used to describe the BODY position/orientation of the robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARENT_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    ORIENTATION_FIELD_NUMBER: builtins.int
    parent: global___Frame.ValueType
    """/ Parent frame of BODY (typically MAP)"""
    @property
    def position(self) -> global___Point:
        """/ To parent frame from BODY frame"""
    @property
    def orientation(self) -> global___Quaternion:
        """/ To parent frame from BODY frame"""
    def __init__(
        self,
        *,
        parent: global___Frame.ValueType = ...,
        position: global___Point | None = ...,
        orientation: global___Quaternion | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["orientation", b"orientation", "position", b"position"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["orientation", b"orientation", "parent", b"parent", "position", b"position"]) -> None: ...

global___Pose = Pose

@typing_extensions.final
class LinearVelocity(google.protobuf.message.Message):
    """/ Linear velocity in ENU-frame"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float
    """/ Meters / second"""
    y: builtins.float
    """/ Meters / second"""
    z: builtins.float
    """/ Meters / second"""
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
        z: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___LinearVelocity = LinearVelocity

@typing_extensions.final
class AngularVelocity(google.protobuf.message.Message):
    """/ Angular velocity in ENU-frame"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float
    """/ Radians / second"""
    y: builtins.float
    """/ Radians / second"""
    z: builtins.float
    """/ Radians / second"""
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
        z: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___AngularVelocity = AngularVelocity

@typing_extensions.final
class Twist(google.protobuf.message.Message):
    """/ Twist is used to describe the BODY velocities of the robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARENT_FIELD_NUMBER: builtins.int
    LINEAR_FIELD_NUMBER: builtins.int
    ANGULAR_FIELD_NUMBER: builtins.int
    parent: global___Frame.ValueType
    """/ Parent frame of BODY (typically MAP)"""
    @property
    def linear(self) -> global___LinearVelocity:
        """/ Linear BODY velocity wrt. parent (MAP) frame, given in parent (MAP) coordinates"""
    @property
    def angular(self) -> global___AngularVelocity:
        """/ Angular BODY velocity wrt. parent (MAP) frame, given in BODY coordinates (roll, pitch, yaw)"""
    def __init__(
        self,
        *,
        parent: global___Frame.ValueType = ...,
        linear: global___LinearVelocity | None = ...,
        angular: global___AngularVelocity | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["angular", b"angular", "linear", b"linear"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["angular", b"angular", "linear", b"linear", "parent", b"parent"]) -> None: ...

global___Twist = Twist

@typing_extensions.final
class Odometry(google.protobuf.message.Message):
    """/ Odometry of robot seen in robot body frame with respect to odom frame (ENU)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POSE_FIELD_NUMBER: builtins.int
    TWIST_FIELD_NUMBER: builtins.int
    @property
    def pose(self) -> global___Pose:
        """/ Estimate of position and orientation"""
    @property
    def twist(self) -> global___Twist:
        """/ Estimate of linear and angular velocities"""
    def __init__(
        self,
        *,
        pose: global___Pose | None = ...,
        twist: global___Twist | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pose", b"pose", "twist", b"twist"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pose", b"pose", "twist", b"twist"]) -> None: ...

global___Odometry = Odometry

@typing_extensions.final
class Transform(google.protobuf.message.Message):
    """/ Transform is used to update offsets between coordinate systems such as ODOM and MAP"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TO_FIELD_NUMBER: builtins.int
    FRM_FIELD_NUMBER: builtins.int
    TRANSLATION_FIELD_NUMBER: builtins.int
    ORIENTATION_FIELD_NUMBER: builtins.int
    to: global___Frame.ValueType
    """/ Which frame are you transforming to"""
    frm: global___Frame.ValueType
    """/ Which frame are you transforming from"""
    @property
    def translation(self) -> global___Point:
        """/ SE(3) translation group"""
    @property
    def orientation(self) -> global___Quaternion:
        """/ SE(3) rotation group"""
    def __init__(
        self,
        *,
        to: global___Frame.ValueType = ...,
        frm: global___Frame.ValueType = ...,
        translation: global___Point | None = ...,
        orientation: global___Quaternion | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["orientation", b"orientation", "translation", b"translation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["frm", b"frm", "orientation", b"orientation", "to", b"to", "translation", b"translation"]) -> None: ...

global___Transform = Transform
