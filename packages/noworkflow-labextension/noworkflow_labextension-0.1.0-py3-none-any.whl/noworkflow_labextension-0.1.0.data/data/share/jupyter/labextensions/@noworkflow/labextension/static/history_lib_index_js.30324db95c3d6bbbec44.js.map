{"version":3,"file":"history_lib_index_js.30324db95c3d6bbbec44.js","mappings":";;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;;;;;;;;;;;ACDhD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,mBAAO,CAAC,oEAAe;AACvB,mBAAmB,mBAAO,CAAC,0DAAU;AACrC,mBAAmB,mBAAO,CAAC,0DAAU;AACrC,6BAA6B,mBAAO,CAAC,8EAAoB;AACzD,uBAAuB,mBAAO,CAAC,kEAAc;AAC7C,kBAAkB,mBAAO,CAAC,wDAAS;AACnC,WAAW,mBAAO,CAAC,uEAAY;AAC/B;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtwBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wBAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C,uCAAuC;AACvuBAAuB;AACjgCAAgC;AAChC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC;AAChC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ,IAAI;AACpC,cAAc,mCAAmC,EAAE;AACnD,cAAc,mCAAmC,EAAE;AACnD,cAAc,+BAA+B,EAAE;AAC/C,cAAc,+BAA+B,EAAE;AAC/C,cAAc,+BAA+B,EAAE;AAC/C,cAAc,mCAAmC,EAAE;AACnD,cAAc,mCAAmC,EAAE;AACnD,cAAc,QAAQ,IAAI,QAAQ;AAClC,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,+BAA+B;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;;;;;;;;;;;AC1lBP;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,0CAAU;AAC/B,aAAa,mBAAO,CAAC,kDAAc;AACnC,aAAa,mBAAO,CAAC,wCAAS;;;;;;;;;;;AClBjB;AACb,8CAA6C,EAAE,aAAa,EAAC","sources":["webpack://@noworkflow/labextension/../history/lib/config.js","webpack://@noworkflow/labextension/../history/lib/graph.js","webpack://@noworkflow/labextension/../history/lib/index.js","webpack://@noworkflow/labextension/../history/lib/structures.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HistoryGraph = void 0;\nrequire(\"d3-transition\");\nconst d3_color_1 = require(\"d3-color\");\nconst d3_scale_1 = require(\"d3-scale\");\nconst d3_scale_chromatic_1 = require(\"d3-scale-chromatic\");\nconst d3_selection_1 = require(\"d3-selection\");\nconst d3_zoom_1 = require(\"d3-zoom\");\nconst fs = require(\"file-saver\");\nclass HistoryGraph {\n    constructor(graphId, div, config = {}) {\n        this.nodes = [];\n        this.versionNodes = [];\n        this.edges = [];\n        this.maxX = 0;\n        this.maxY = 0;\n        this.maxId = 0;\n        this.i = 0;\n        var defaultConfig = {\n            customSelectNode: (g, d) => false,\n            customCtrlClick: (g, d) => false,\n            customForm: (g, form) => null,\n            customSize: (g) => [g.config.width, g.config.height],\n            customWindowTabCommand: (trialIdSimplified, trialId, command) => false,\n            hintMessage: \"Ctrl+Shift click or âŒ˜+Shift click to diff trials\",\n            width: 200,\n            height: 100,\n            radius: 20,\n            moveX: 20,\n            moveY: 25,\n            moveY2: 10,\n            spacing: 17,\n            margin: 50,\n            fontSize: 10,\n            useTooltip: false,\n        };\n        this.config = Object.assign({}, defaultConfig, config);\n        this.graphId = graphId;\n        this.zoom = (0, d3_zoom_1.zoom)()\n            .on(\"zoom\", (event) => {\n            return this.zoomFunction(event);\n        })\n            .on(\"start\", () => (0, d3_selection_1.select)('body').style(\"cursor\", \"move\"))\n            .on(\"end\", () => (0, d3_selection_1.select)('body').style(\"cursor\", \"auto\"))\n            .wheelDelta(function () {\n            const e = event;\n            return -e.deltaY * (e.deltaMode ? 120 : 1) / 2000;\n        });\n        this.div = (0, d3_selection_1.select)(div);\n        let form = (0, d3_selection_1.select)(div)\n            .append(\"form\")\n            .classed(\"history-toolbar\", true);\n        this.svg = (0, d3_selection_1.select)(div)\n            .append(\"div\")\n            .append(\"svg\")\n            .attr(\"width\", this.config.width)\n            .attr(\"height\", this.config.height)\n            .call(this.zoom)\n            .on(\"mouseup\", () => this.svgMouseUp());\n        this.state = {\n            selectedNode: null,\n            mouseDownNode: null,\n            justScale: false\n        };\n        // Tooltip\n        this.tooltipDiv = (0, d3_selection_1.select)(\"body\").append(\"div\")\n            .classed(\"now-tooltip now-history-tooltip\", true)\n            .style(\"opacity\", 0)\n            .style(\"max-width\", \"250px\")\n            .on(\"mouseout\", () => {\n            this.closeTooltip();\n        });\n        this.createToolbar(form);\n        this.createMarker('end-arrow', 'endarrow', '#000');\n        this.g = this.svg.append(\"g\")\n            .attr(\"id\", this._graphId())\n            .attr(\"transform\", \"translate(0,0)\")\n            .classed('HistoryGraph', true);\n    }\n    createToolbar(form) {\n        let formdiv = form.append(\"div\")\n            .classed(\"buttons\", true);\n        this.config.customForm(this, formdiv);\n        // Reset zoom\n        formdiv.append(\"a\")\n            .classed(\"toollink\", true)\n            .attr(\"id\", \"history-\" + this.graphId + \"-history-zoom\")\n            .attr(\"href\", \"#\")\n            .attr(\"title\", \"Restore zoom\")\n            .on(\"click\", () => this.restorePosition())\n            .append(\"i\")\n            .classed(\"fa fa-eye\", true);\n        // Toggle Tooltips\n        let tooltipsToggle = formdiv.append(\"input\")\n            .attr(\"id\", \"history-\" + this.graphId + \"-toolbar-tooltips\")\n            .attr(\"type\", \"checkbox\")\n            .attr(\"name\", \"history-toolbar-tooltips\")\n            .attr(\"value\", \"show\")\n            .property(\"checked\", this.config.useTooltip)\n            .on(\"change\", () => {\n            this.closeTooltip();\n            this.config.useTooltip = tooltipsToggle.property(\"checked\");\n        });\n        formdiv.append(\"label\")\n            .attr(\"for\", \"history-\" + this.graphId + \"-toolbar-tooltips\")\n            .attr(\"title\", \"Show tooltips on mouse hover\")\n            .append(\"i\")\n            .classed(\"fa fa-comment\", true);\n        // Download SVG\n        formdiv.append(\"a\")\n            .classed(\"toollink\", true)\n            .attr(\"id\", \"history-\" + this.graphId + \"-download\")\n            .attr(\"href\", \"#\")\n            .attr(\"title\", \"Download graph SVG\")\n            .on(\"click\", () => {\n            this.download();\n        })\n            .append(\"i\")\n            .classed(\"fa fa-download\", true);\n        // Set Font Size\n        let fontToggle = formdiv.append(\"input\")\n            .attr(\"id\", \"history-\" + this.graphId + \"-toolbar-fonts\")\n            .attr(\"type\", \"checkbox\")\n            .attr(\"name\", \"history-toolbar-fonts\")\n            .attr(\"value\", \"show\")\n            .property(\"checked\", false)\n            .on(\"change\", () => {\n            let display = fontToggle.property(\"checked\") ? \"inline-block\" : \"none\";\n            fontSize.style(\"display\", display);\n        });\n        formdiv.append(\"label\")\n            .attr(\"for\", \"history-\" + this.graphId + \"-toolbar-fonts\")\n            .attr(\"title\", \"Set font size\")\n            .append(\"i\")\n            .classed(\"fa fa-font\", true);\n        let fontSize = formdiv.append(\"input\")\n            .attr(\"type\", \"number\")\n            .attr(\"value\", this.config.fontSize)\n            .style(\"width\", \"50px\")\n            .style(\"display\", \"none\")\n            .attr(\"title\", \"Node font size\")\n            .on(\"change\", () => {\n            this.config.fontSize = fontSize.property(\"value\");\n            this.svg.selectAll(\"text.trial-id\")\n                .attr(\"font-size\", this.config.fontSize);\n        });\n        // Submit\n        formdiv.append(\"input\")\n            .attr(\"type\", \"submit\")\n            .attr(\"name\", \"prevent-enter\")\n            .attr(\"onclick\", \"return false;\")\n            .style(\"display\", \"none\");\n        formdiv.append(\"div\");\n        formdiv.append(\"div\")\n            .text(this.config.hintMessage)\n            .style('font-family', 'sans-serif')\n            .style('font-size', '12px')\n            .style('pointer-events', 'none');\n    }\n    load(data) {\n        let nodes = [], otherNodes = [], edges = [], spacing = this.config.spacing, margin = this.config.margin;\n        let spacing2 = 2 * spacing, spacing4 = 4 * spacing, start = margin, max = 0, id = 0, last = data.nodes.length - 1, tid = 0, useVersion = false;\n        let levels = [];\n        for (var i = 0; i <= last; i++) {\n            let node = data.nodes[i];\n            var previous = levels[node.level];\n            if (previous == undefined) {\n                previous = -1;\n            }\n            var trials = node.trials;\n            if (trials == undefined) {\n                trials = [];\n            }\n            levels[node.level] = Math.max(previous, trials.length);\n        }\n        let levelsy = [];\n        var current = margin;\n        for (var i = 0; i <= levels.length; i++) {\n            levelsy[i] = current;\n            current += spacing2 + levels[i] * spacing2;\n        }\n        for (var i = 0; i <= last; i++) {\n            let node = data.nodes[i];\n            let x = start + spacing4 * id;\n            let y = levelsy[node.level];\n            var new_node = {\n                id: id,\n                display: node.display,\n                x: x,\n                y: y,\n                title: node.id.toString(),\n                info: node,\n                radius: this.config.radius,\n                gradient: false,\n                status: node.status\n            };\n            nodes.push(new_node);\n            if (typeof (node.trials) != \"undefined\") {\n                useVersion = true;\n                for (var j = 0; j < node.trials.length; j++) {\n                    let trialNode = node.trials[j];\n                    let ny = y + (j + 1) * spacing2 + spacing;\n                    otherNodes.push({\n                        id: tid,\n                        display: trialNode.display,\n                        x: x + this.config.radius / 2,\n                        y: ny,\n                        title: trialNode.id.toString(),\n                        info: trialNode,\n                        tooltip: trialNode.tooltip,\n                        radius: this.config.radius / 2,\n                        gradient: true,\n                        status: trialNode.status\n                    });\n                    tid += 1;\n                    max = Math.max(max, y);\n                }\n            }\n            else {\n                new_node.tooltip = node.tooltip;\n            }\n            max = Math.max(max, y);\n            this.maxX = x;\n            id += 1;\n        }\n        max += spacing2;\n        this.maxY = max;\n        this.maxId = Math.max(tid, id);\n        for (var i = 0; i < data.edges.length; i++) {\n            let edge = Object.assign({}, data.edges[i]);\n            edge.id = edge.source + \"-\" + edge.target;\n            edge.source = nodes[edge.source];\n            edge.target = nodes[edge.target];\n            if (edge.source != edge.target) {\n                edges.push(edge);\n            }\n        }\n        if (useVersion) {\n            this.nodes = otherNodes;\n            this.versionNodes = nodes;\n        }\n        else {\n            this.nodes = nodes;\n            this.versionNodes = [];\n        }\n        this.edges = edges;\n        this.updateWindow();\n        this.restorePosition();\n        this.update();\n        this.menuOnRightClick();\n        return nodes;\n    }\n    updateWindow() {\n        let size = this.config.customSize(this);\n        this.config.width = size[0];\n        this.config.height = size[1];\n        this.svg\n            .attr(\"width\", size[0])\n            .attr(\"height\", size[1]);\n    }\n    update() {\n        var nodes = this.g.selectAll('g.node')\n            .data(this.nodes, (d) => d.id);\n        var edges = this.g.selectAll('g.link')\n            .data(this.edges, (d) => d.id);\n        var version = this.g.selectAll('g.version')\n            .data(this.versionNodes, (d) => d.id);\n        this.updateNodes(nodes);\n        this.updateVersionNodes(version);\n        this.updateLinks(edges);\n    }\n    restorePosition() {\n        let scale = this.config.height / this.maxY;\n        if (scale <= 1.0) {\n            this.svg.call(this.zoom.transform, d3_zoom_1.zoomIdentity\n                .translate(this.config.width\n                - this.maxX * scale\n                - this.config.margin, 0)\n                .scale(scale));\n        }\n        else {\n            this.svg.call(this.zoom.transform, d3_zoom_1.zoomIdentity\n                .scale(1)\n                .translate(this.config.width\n                - this.maxX\n                - this.config.margin, 0));\n        }\n        this.state.justScale = false;\n    }\n    selectNode(node) {\n        this.state.selectedNode = node;\n        this.config.customSelectNode(this, node);\n        this.svg.selectAll('.node[attr-trial=\"' + node.title + '\"] > rect')\n            .attr('stroke', 'rgb(200, 238, 241)')\n            .classed('selected', true);\n    }\n    selectTrial(trialId) {\n        for (var node of this.nodes) {\n            if (node.title == trialId) {\n                this.selectNode(node);\n                return;\n            }\n        }\n    }\n    download(name) {\n        var isFileSaverSupported = false;\n        try {\n            isFileSaverSupported = !!new Blob();\n        }\n        catch (e) {\n            alert(\"blob not supported\");\n        }\n        name = (name === undefined) ? \"history.svg\" : name;\n        let gnode = this.g.node();\n        var bbox = gnode.getBBox();\n        var width = this.svg.attr(\"width\"), height = this.svg.attr(\"height\");\n        this.g.attr(\"transform\", \"translate(\" + (-bbox.x + 5) + \", \" + (-bbox.y + 5) + \")\");\n        let svgNode = this.svg\n            .attr(\"title\", \"Trial\")\n            .attr(\"version\", 1.1)\n            .attr(\"width\", bbox.width + 10)\n            .attr(\"height\", bbox.height + 10)\n            .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n            .node();\n        var html = svgNode.parentNode.innerHTML;\n        html = '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + html.slice(4);\n        this.svg\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n        this.g.attr(\"transform\", this.transform);\n        if (isFileSaverSupported) {\n            var blob = new Blob([html], { type: \"image/svg+xml\" });\n            fs.saveAs(blob, name);\n        }\n    }\n    closeTooltip() {\n        this.tooltipDiv.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n        this.tooltipDiv.classed(\"hidden\", true);\n    }\n    showTooltip(event, d) {\n        if (typeof (d.tooltip) == \"undefined\") {\n            return;\n        }\n        this.tooltipDiv.classed(\"hidden\", false);\n        this.tooltipDiv.transition()\n            .duration(200)\n            .style(\"opacity\", 0.9);\n        this.tooltipDiv.html(d.tooltip)\n            .style(\"left\", (event.pageX - 3) + \"px\")\n            .style(\"top\", (event.pageY - 28) + \"px\");\n    }\n    createMarker(name, cls, fill) {\n        this.svg.append(\"svg:defs\").selectAll(\"marker\")\n            .data([name])\n            .enter().append(\"svg:marker\")\n            .attr(\"id\", String)\n            .attr(\"viewBox\", \"0 -5 10 10\")\n            .attr(\"refX\", 6)\n            .attr(\"refY\", 0)\n            .attr(\"markerWidth\", 3)\n            .attr(\"markerHeight\", 3)\n            .attr(\"orient\", \"auto\")\n            .append(\"svg:path\")\n            .classed(cls, true)\n            .attr(\"fill\", fill)\n            .attr(\"d\", \"M0,-5L10,0L0,5\");\n    }\n    unselectNode() {\n        this.g.selectAll('g.node').filter((cd) => {\n            if (this.state.selectedNode == null) {\n                return false;\n            }\n            return cd.id === this.state.selectedNode.id;\n        }).select('rect')\n            .classed('selected', false)\n            .attr(\"stroke\", \"#000\");\n        this.state.selectedNode = null;\n    }\n    nodeMouseDown(event, d3node, d) {\n        event.stopPropagation();\n        this.state.mouseDownNode = d;\n        this.closeTooltip();\n    }\n    nodeMouseUp(event, d3node, d) {\n        event.stopPropagation();\n        if (!this.state.mouseDownNode) {\n            return;\n        }\n        if (this.state.justScale) {\n            this.state.justScale = false;\n        }\n        else {\n            if (event.ctrlKey || event.shiftKey || event.altKey) {\n                this.config.customCtrlClick(this, d);\n                return;\n            }\n            if (this.state.selectedNode) {\n                this.unselectNode();\n            }\n            d3node\n                .attr('stroke', 'rgb(200, 238, 241)')\n                .classed('selected', true);\n            this.state.selectedNode = d;\n            this.config.customSelectNode(this, d);\n        }\n        this.state.mouseDownNode = null;\n    }\n    svgMouseUp() {\n        if (this.state.justScale) {\n            this.state.justScale = false;\n        }\n    }\n    updateVersionNodes(nodes) {\n        var nodeEnter = nodes.enter().append(\"g\")\n            .classed(\"version\", true)\n            .attr(\"attr-trialid\", (d) => d.title)\n            .attr(\"transform\", (d) => {\n            return \"translate(\" + 0 + \",\" + 0 + \")\";\n        });\n        // Circle for new nodes\n        nodeEnter.append('rect')\n            .attr(\"transform\", (d) => {\n            return \"translate(\" + d.x + \",\" + d.y + \")\";\n        })\n            .attr('width', (d) => 2 * d.radius)\n            .attr('height', (d) => 2 * d.radius)\n            .attr('rx', 0)\n            .attr('ry', 0)\n            //.attr('r', )\n            .attr(\"stroke\", \"#000\")\n            .attr(\"stroke-width\", \"2.5px\")\n            .attr(\"fill\", \"#F6FBFF\")\n            .attr(\"stroke\", \"#000\")\n            .attr(\"stroke-width\", \"2.5px\");\n        nodeEnter.append('text')\n            .classed('trial-id', true)\n            .attr('font-family', 'sans-serif')\n            .attr('font-size', this.config.fontSize + 'px')\n            .attr('pointer-events', 'none')\n            .attr('x', (d) => d.radius)\n            .attr('y', (d) => d.radius + 4)\n            .attr('stroke', '#000')\n            .attr('text-anchor', 'middle')\n            //.attr('font-weight', 'bold')\n            .attr(\"transform\", (d) => {\n            return \"translate(\" + d.x + \",\" + d.y + \")\";\n        }).text((d) => d.display);\n        nodeEnter.merge(nodes); // nodeUpdate\n        nodes.exit().remove(); // nodeExit\n    }\n    updateNodes(nodes) {\n        let self = this;\n        var nodeEnter = nodes.enter().append(\"g\")\n            .classed(\"node\", true)\n            .attr(\"attr-trialid\", (d) => d.title)\n            .attr(\"cursor\", \"pointer\")\n            .attr(\"transform\", (d) => {\n            return \"translate(\" + 0 + \",\" + 0 + \")\";\n        });\n        // Circle for new nodes\n        nodeEnter.append('rect')\n            .attr(\"transform\", (d) => {\n            return \"translate(\" + d.x + \",\" + d.y + \")\";\n        })\n            .attr('cursor', 'pointer')\n            .attr('title', (d) => d.info.display)\n            .attr('width', (d) => 2 * d.radius)\n            .attr('height', (d) => 2 * d.radius)\n            .attr('rx', (d) => 2 * d.radius)\n            .attr('ry', (d) => 2 * d.radius)\n            //.attr('r', )\n            .attr(\"stroke\", \"#000\")\n            .attr(\"stroke-width\", \"2.5px\")\n            .attr(\"fill\", function (d) {\n            var proportion = Math.round(200 * (1.0 - (parseInt(d.title) / self.maxId)) + 50);\n            if (d.status === 'unfinished') {\n                return d.gradient ? (0, d3_color_1.rgb)(255, proportion, proportion, 255).toString() : \"rgb(238, 200, 241)\";\n            }\n            if (d.status === 'finished') {\n                return d.gradient ? (0, d3_color_1.rgb)(proportion, proportion, proportion, 255).toString() : \"#F6FBFF\";\n            }\n            if (d.status === 'backup') {\n                return d.gradient ? (0, d3_color_1.rgb)(255, 255, proportion, 255).toString() : \"rgb(241, 238, 200)\";\n            }\n            return '#666';\n        })\n            .attr(\"stroke\", function (d) {\n            return ((0, d3_selection_1.select)(this).classed('selected')) ? 'rgb(200, 238, 241)' : \"#000\";\n        })\n            .attr(\"stroke-width\", \"2.5px\")\n            .on('mousedown', function (event, d) {\n            self.nodeMouseDown(event, (0, d3_selection_1.select)(this), d);\n        }).on('click', function (event, d) {\n            self.nodeMouseUp(event, (0, d3_selection_1.select)(this), d);\n        }).on('mouseover', function (event, d) {\n            if (!self.state.mouseDownNode && self.config.useTooltip) {\n                self.closeTooltip();\n                self.showTooltip(event, d);\n            }\n            (0, d3_selection_1.select)(this)\n                .attr('stroke', 'rgb(200, 238, 241)');\n        }).on('mouseout', function (event, d) {\n            (0, d3_selection_1.select)(this)\n                .attr(\"stroke\", (d) => {\n                return ((0, d3_selection_1.select)(this).classed('selected')) ? 'rgb(200, 238, 241)' : \"#000\";\n            });\n        })\n            .classed(\"custom-menu\", true);\n        nodeEnter.append('text')\n            .classed('trial-id', true)\n            .attr('font-family', 'sans-serif')\n            .attr('font-size', this.config.fontSize + 'px')\n            .attr('pointer-events', 'none')\n            .attr('x', (d) => d.radius)\n            .attr('y', (d) => d.radius + 4)\n            .attr('stroke', '#000')\n            .attr('text-anchor', 'middle')\n            //.attr('font-weight', 'bold')\n            .attr(\"transform\", (d) => {\n            return \"translate(\" + d.x + \",\" + d.y + \")\";\n        }).text((d) => d.gradient ? \"\" : d.display);\n        nodeEnter.merge(nodes); // nodeUpdate\n        nodes.exit().remove(); // nodeExit\n    }\n    updateLinks(link) {\n        // Enter any new links\n        let colors = (0, d3_scale_1.scaleOrdinal)(d3_scale_chromatic_1.schemeCategory10);\n        var linkEnter = link.enter().insert('path', 'g')\n            .classed('link', true)\n            .attr('cursor', 'crosshair')\n            .attr('fill', 'none')\n            .attr('stroke', '#000')\n            .attr('stroke-width', '4px');\n        linkEnter\n            .attr(\"d\", (d) => {\n            var deltaX = d.target.x - d.source.x, deltaY = d.target.y - d.source.y, dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY), normX = deltaX / dist, normY = deltaY / dist, sourcePadding = this.config.radius - 5, targetPadding = this.config.radius + (d.right ? 3 : -5), sourceX = d.source.x + this.config.radius + (sourcePadding * normX), sourceY = d.source.y + this.config.radius + (sourcePadding * normY), targetX = d.target.x + this.config.radius - (targetPadding * normX), targetY = d.target.y + this.config.radius - (targetPadding * normY);\n            var step = 0;\n            if (d.level > 0) {\n                step += this.config.moveY;\n                step += (d.level - 1) * this.config.moveY2;\n            }\n            return `M ${sourceX}, ${sourceY}\n          C ${(sourceX - this.config.moveX / 2)} ${sourceY}\n            ${(sourceX - this.config.moveX / 2)} ${(sourceY + 3 * step / 4)}\n            ${(sourceX - this.config.moveX)} ${(sourceY + step)}\n          L ${(sourceX - this.config.moveX)} ${(sourceY + step)}\n            ${(targetX + this.config.moveX)} ${(sourceY + step)}\n          C ${(targetX + this.config.moveX / 2)} ${(sourceY + 3 * step / 4)}\n            ${(targetX + this.config.moveX / 2)} ${sourceY}\n            ${targetX}, ${targetY}`;\n        })\n            .attr('marker-end', (d) => {\n            return d.right ? 'url(#end-arrow)' : '';\n        })\n            .attr('stroke', (d) => {\n            return (0, d3_color_1.rgb)(colors(d.level.toString())).darker().toString();\n        });\n        // Update\n        linkEnter.merge(link); // linkUpdate\n        // Remove any exiting links\n        link.exit().remove(); // linkExit\n    }\n    zoomFunction(event) {\n        this.state.justScale = true;\n        this.closeTooltip();\n        this.transform = event.transform;\n        this.g.attr(\"transform\", event.transform);\n    }\n    _graphId() {\n        return \"history-graph-\" + this.graphId;\n    }\n    menuOnRightClick() {\n        let rightClickMenu = document.getElementById(\"context-menu\");\n        // Set up an event handler for the documnt right click\n        document.addEventListener(\"contextmenu\", function (event) {\n            var _a;\n            //open right click menu\n            let target = event.target;\n            if (target && target.classList.contains(\"custom-menu\")) {\n                event.preventDefault();\n                if (rightClickMenu) {\n                    rightClickMenu.setAttribute(\"selected-trial\", (_a = target.parentElement) === null || _a === void 0 ? void 0 : _a.getAttribute(\"attr-trialid\"));\n                    rightClickMenu.setAttribute(\"selected-trial-simplified\", target.getAttribute(\"title\"));\n                    rightClickMenu.style.top = (event.pageY - 10).toString();\n                    rightClickMenu.style.left = (event.pageX - 90).toString();\n                    rightClickMenu.style.display = \"block\";\n                    rightClickMenu.classList.add(\"show\");\n                }\n            }\n        });\n        // close the menu\n        document.addEventListener(\"click\", function (event) {\n            if (rightClickMenu) {\n                rightClickMenu.style.display = \"none\";\n                rightClickMenu.classList.remove(\"show\");\n            }\n        });\n    }\n}\nexports.HistoryGraph = HistoryGraph;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./config\"), exports);\n__exportStar(require(\"./structures\"), exports);\n__exportStar(require(\"./graph\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n"],"names":[],"sourceRoot":""}