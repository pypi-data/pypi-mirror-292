"use strict";(self.webpackChunk_jupyterlite_xeus=self.webpackChunk_jupyterlite_xeus||[]).push([[27],{27:(e,s,t)=>{t.r(s),t.d(s,{default:()=>_});var i=t(655),r=t(671),n=t(232),o=t(257),a=t(115),l=t.n(a),c=t(602),d=t(262);class h{constructor(e){this._contentsProcessor=void 0,this._isDisposed=!1,this._disposed=new c.Signal(this),this._executeDelegate=new d.PromiseDelegate,this._parentHeader=void 0,this._parent=void 0;const{id:s,name:r,sendMessage:n,location:o,kernelspec:a,contentsManager:h}=e;this._id=s,this._name=r,this._location=o,this._kernelspec=a,this._contentsManager=h,this._sendMessage=n,this._worker=new Worker(new URL(t.p+t.u(671),t.b),{type:void 0}),this._worker.onmessage=this._processWorkerMessage.bind(this),this._remote=l()(this._worker),this.setupFilesystemAPIs(),this._remote.initialize(this._kernelspec,i.PageConfig.getBaseUrl()),this.initFileSystem(e)}async handleMessage(e){this._parent=e,this._parentHeader=e.header,await this._sendMessageToWorker(e)}async _sendMessageToWorker(e){if("input_reply"!==e.header.msg_type&&(this._executeDelegate=new d.PromiseDelegate),await this._remote.processMessage({msg:e,parent:this.parent}),"input_reply"!==e.header.msg_type)return await this._executeDelegate.promise}get parentHeader(){return this._parentHeader}get parent(){return this._parent}get location(){return this._location}_processWorkerMessage(e){var s,t,i,r;e.data.header&&(e.data.header.session=null!==(t=null===(s=this._parentHeader)||void 0===s?void 0:s.session)&&void 0!==t?t:"",e.data.session=null!==(r=null===(i=this._parentHeader)||void 0===i?void 0:i.session)&&void 0!==r?r:"",this._sendMessage(e.data),"status"===e.data.header.msg_type&&"idle"===e.data.content.execution_state&&this._executeDelegate.resolve())}get ready(){return Promise.resolve()}get isDisposed(){return this._isDisposed}get disposed(){return this._disposed}dispose(){this.isDisposed||(this._worker.terminate(),this._worker=null,this._remote=null,this._isDisposed=!0,this._disposed.emit(void 0))}get id(){return this._id}get name(){return this._name}setupFilesystemAPIs(){this._remote.processDriveRequest=async e=>{if(n.DriveContentsProcessor)return void 0===this._contentsProcessor&&(this._contentsProcessor=new n.DriveContentsProcessor({contentsManager:this._contentsManager})),await this._contentsProcessor.processDriveRequest(e);console.error("File system calls over Atomics.wait is only supported with jupyterlite>=0.4.0a3")}}async initFileSystem(e){let s,t;if(e.location.includes(":")){const i=e.location.split(":");s=i[0],t=i[1]}else s="",t=e.location;await this._remote.ready(),await this._remote.mount(s,"/drive",i.PageConfig.getBaseUrl()),await this._remote.isDir("/files")?await this._remote.cd("/files"):await this._remote.cd(t)}}function p(e){const s=i.URLExt.join(i.PageConfig.getBaseUrl(),e),t=new XMLHttpRequest;return t.open("GET",s,!1),t.send(null),JSON.parse(t.responseText)}let u=[];try{u=p("xeus/kernels.json")}catch(e){throw console.log(`Could not fetch xeus/kernels.json: ${e}`),e}const _=u.map((e=>({id:`@jupyterlite/xeus-${e}:register`,autoStart:!0,requires:[o.IKernelSpecs],optional:[r.IServiceWorkerManager,n.IBroadcastChannelWrapper],activate:(s,t,r,n)=>{const o=p("xeus/kernels/"+e+"/kernel.json");o.name=e,o.dir=e;for(const[e,s]of Object.entries(o.resources))o.resources[e]=i.URLExt.join(i.PageConfig.getBaseUrl(),s);const a=s.serviceManager.contents;t.register({spec:o,create:async e=>{const s=!!((null==r?void 0:r.enabled)&&(null==n?void 0:n.enabled)||crossOriginIsolated);return s?console.info(`${o.name} contents will be synced with Jupyter Contents`):console.warn(`${o.name} contents will NOT be synced with Jupyter Contents`),new h({...e,contentsManager:a,mountDrive:s,kernelspec:o})}})}})))}}]);