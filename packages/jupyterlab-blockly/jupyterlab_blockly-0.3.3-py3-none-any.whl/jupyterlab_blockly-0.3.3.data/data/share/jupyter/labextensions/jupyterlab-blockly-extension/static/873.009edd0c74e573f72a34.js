"use strict";(self.webpackChunkjupyterlab_blockly_extension=self.webpackChunkjupyterlab_blockly_extension||[]).push([[873],{1873:(e,n,t)=>{t.r(n),t.d(n,{default:()=>b});var o=t(974),r=t(1355),c=t(2607),l=t(7656),a=t(9356),i=t(4586),s=t(9360),d=t(6605),p=t(765),u=t(1130),y=t(7101),g=t(9627),m=t(9799);const k=new r.LabIcon({name:"blockly:icon/logo",svgstr:'<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<svg\n   xmlns:dc="http://purl.org/dc/elements/1.1/"\n   xmlns:cc="http://creativecommons.org/ns#"\n   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\n   xmlns:svg="http://www.w3.org/2000/svg"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   id="Layer_6"\n   data-name="Layer 6"\n   viewBox="0 0 192 192"\n   version="1.1"\n   sodipodi:docname="logo-only.svg"\n   inkscape:version="0.92.2pre0 (973e216, 2017-07-25)"\n   inkscape:export-filename="/usr/local/google/home/epastern/Documents/Blockly Logos/Square/logo-only.png"\n   inkscape:export-xdpi="96"\n   inkscape:export-ydpi="96">\n  <metadata\n     id="metadata913">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about="">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />\n        <dc:title>blockly-logo</dc:title>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <sodipodi:namedview\n     pagecolor="#ffffff"\n     bordercolor="#666666"\n     borderopacity="1"\n     objecttolerance="10"\n     gridtolerance="10"\n     guidetolerance="10"\n     inkscape:pageopacity="0"\n     inkscape:pageshadow="2"\n     inkscape:window-width="2560"\n     inkscape:window-height="1379"\n     id="namedview911"\n     showgrid="false"\n     inkscape:zoom="2"\n     inkscape:cx="239.87642"\n     inkscape:cy="59.742687"\n     inkscape:window-x="0"\n     inkscape:window-y="0"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="g1013" />\n  <defs\n     id="defs902">\n    <style\n       id="style900">.cls-1{fill:#4285f4;}.cls-2{fill:#c8d1db;}</style>\n  </defs>\n  <title\n     id="title904">blockly-logo</title>\n  <g\n     id="g1013"\n     transform="translate(23.500002,-7.9121105)"\n     inkscape:export-xdpi="96"\n     inkscape:export-ydpi="96">\n    <path\n       id="path906"\n       d="M 20.140625,32 C 13.433598,31.994468 7.9944684,37.433598 8,44.140625 V 148.85938 C 7.99447,155.56641 13.433598,161.00553 20.140625,161 h 4.726563 c 2.330826,8.74182 10.245751,14.82585 19.292968,14.83008 C 53.201562,175.81878 61.108176,169.73621 63.4375,161 h 4.841797 15.726562 c 4.418278,0 8,-3.58172 8,-8 V 40 l -8,-8 z"\n       style="fill:#4285f4"\n       inkscape:connector-curvature="0"\n       sodipodi:nodetypes="ccccccccssccc" />\n    <path\n       sodipodi:nodetypes="ccccccccccccccccc"\n       inkscape:connector-curvature="0"\n       id="path908"\n       d="M 80.007812,31.994141 C 79.997147,49.696887 80,67.396525 80,85.109375 L 63.369141,75.710938 C 60.971784,74.358189 58.004891,76.087168 58,78.839844 v 40.621096 c 0.0049,2.75267 2.971786,4.48165 5.369141,3.1289 L 80,113.18945 v 37.5918 2.21875 8 h 8 1.425781 36.054689 c 6.36195,-2.6e-4 11.51927,-5.15758 11.51953,-11.51953 V 43.480469 C 136.97822,37.133775 131.8272,32.000222 125.48047,32 Z"\n       style="fill:#c8d1db" />\n  </g>\n</svg>\n'}),w="Blockly editor";var f;function*h(e){for(const n of e)n instanceof g.WidgetRenderer&&(yield n)}!function(e){e.createNew="blockly:create-new-blockly-file",e.interruptKernel="blockly:interrupt-kernel",e.reconnectToKernel="blockly:reconnect-to-kernel",e.shutdownKernel="blockly:shutdown-kernel",e.restartKernel="blockly:restart-kernel"}(f||(f={}));const b={id:"jupyterlab-blocky:plugin",autoStart:!0,requires:[o.ILayoutRestorer,l.IRenderMimeRegistry,a.IEditorServices,i.IFileBrowserFactory,p.ISettingRegistry,d.ITranslator],optional:[s.ILauncher,c.ICommandPalette,u.IMainMenu,y.IJupyterWidgetRegistry],provides:m.IBlocklyRegistry,activate:(e,n,t,o,l,a,i,s,d,p,u)=>{console.log("JupyterLab extension jupyterlab-blocky is activated!");const y=new c.WidgetTracker({namespace:"jupyterlab-blocky"});n&&n.restore(y,{command:"docmanager:open",args:e=>({path:e.context.path,factory:w}),name:e=>e.context.path});const{commands:b}=e,x=new m.BlocklyEditorFactory({name:w,modelName:"text",fileTypes:["blockly"],defaultFor:["blockly"],canStartKernel:!0,preferKernel:!0,shutdownOnClose:!0,rendermime:t,mimetypeService:o.mimeTypeService,factoryService:o.factoryService,translator:i});function v(e){return e.get("locale").composite}function C(){return null!==y.currentWidget&&y.currentWidget===e.shell.currentWidget}function K(n){const t=y.currentWidget;return!1!==n.activate&&t&&e.shell.activateById(t.id),null!=t?t:null}return x.widgetCreated.connect(((e,n)=>{n.title.icon=k,n.context.pathChanged.connect((()=>{y.save(n)})),y.add(n)})),e.docRegistry.addFileType({name:"blockly",displayName:"Blockly",contentType:"file",fileFormat:"json",extensions:[".jpblockly"],mimeTypes:["application/json"],icon:r.jsonIcon,iconLabel:"JupyterLab-Blockly"}),e.docRegistry.addWidgetFactory(x),a.load("@jupyterlab/translation-extension:plugin").then((e=>{const n=v(e);e.changed.connect(v);const t="default"===n?"En":n[n.length-2].toUpperCase()+n[n.length-1].toLowerCase();console.log(`Current Language : '${t}'`),x.registry.setlanguage(t)})),b.addCommand(f.createNew,{label:e=>e.isPalette?"New Blockly Editor":"Blockly Editor",caption:"Create a new Blockly Editor",icon:e=>e.isPalette?null:k,execute:async e=>{const n=e.cwd||l.tracker.currentWidget.model.path,t=await b.execute("docmanager:new-untitled",{path:n,type:"file",ext:".jpblockly"});return b.execute("docmanager:open",{path:t.path,factory:w})}}),s&&s.add({command:f.createNew,category:"Other",rank:1}),d&&d.addItem({command:f.createNew,args:{isPalette:!0},category:"Blockly editor"}),b.addCommand(f.interruptKernel,{label:"Interrupt Kernel",execute:e=>{var n;const t=K(e);if(!t)return;const o=null===(n=t.context.sessionContext.session)||void 0===n?void 0:n.kernel;return o?o.interrupt():Promise.resolve(void 0)},isEnabled:C}),b.addCommand(f.restartKernel,{label:"Restart Kernelâ€¦",execute:e=>{var n;const t=K(e);if(!t)return;const o=null===(n=t.context.sessionContext.session)||void 0===n?void 0:n.kernel;return o?o.restart():Promise.resolve(void 0)},isEnabled:C}),b.addCommand(f.shutdownKernel,{label:"Shut Down Kernel",execute:e=>{const n=K(e);if(n)return n.context.sessionContext.shutdown()}}),b.addCommand(f.reconnectToKernel,{label:"Reconnect to Kernel",execute:e=>{var n;const t=K(e);if(!t)return;const o=null===(n=t.context.sessionContext.session)||void 0===n?void 0:n.kernel;return o?o.reconnect():Promise.resolve(void 0)}}),p&&(p.kernelMenu.kernelUsers.interruptKernel.add({id:f.interruptKernel,isEnabled:C}),p.kernelMenu.kernelUsers.reconnectToKernel.add({id:f.reconnectToKernel,isEnabled:C}),p.kernelMenu.kernelUsers.restartKernel.add({id:f.restartKernel,isEnabled:C}),p.kernelMenu.kernelUsers.shutdownKernel.add({id:f.shutdownKernel,isEnabled:C})),u&&(y.forEach((e=>{(0,g.registerWidgetManager)(e.context,e.content.rendermime,h([e.content.cell]))})),y.widgetAdded.connect(((e,n)=>{(0,g.registerWidgetManager)(n.context,n.content.rendermime,h([n.content.cell]))}))),x.registry}}}}]);
//# sourceMappingURL=873.009edd0c74e573f72a34.js.map?v=009edd0c74e573f72a34