[project]
authors = [{name = "jakepenzak", email = "jakepzak@gmail.com"}]
dependencies = ["scikit-learn>=1.5.1,<2", "econml>=0.15.1,<0.16", "flaml>=2.2.0,<3", "xgboost>=2.1.1,<3", "rich>=13.7.1,<14", "ibis-framework[pandas]>=8.0.0", "pandas>=2.2.2,<3", "typeguard>=4.3.0,<5", "doubleml>=0.8.2,<0.9", "matplotlib>=3.9.2,<4", "numpy==1.26.4", "dowhy>=0.11.1,<0.12"]
description = "Extensions & abstractions of advanced econometric techniques leveraging machine learning."
name = "caml"
requires-python = ">= 3.10"
version = "0.0.0.dev2"
license = {file = "LICENSE"}
classifiers = [
  "Development Status :: 1 - Planning",
  "Programming Language :: Python"
]

[project.optional-dependencies]
dev = ["pre-commit>=3.7.0", "ruff>=0.3.7", "quartodoc>=0.7.2", "coverage>=7.4.4", "pytest", "pytest-mock", "pytest-cov", "twine>=5.1.1,<6", "ipykernel>=6.29.5,<7", "setuptools", "pytest-html>=4.1.1,<5", "genbadge>=1.1.1,<2", "defusedxml>=0.7.1,<0.8", "ipywidgets>=8.1.3,<9"]
pyspark = ["pyspark", "ibis-framework[pyspark]>=8.0.0", "flaml[spark]>=2.2.0,<3", "optuna>=3.6.1,<4", "ray[default,tune]>2"]
polars = ["polars", "ibis-framework[polars]>=8.0.0"]
ray = [ "pydantic<2", "flaml[ray]>=2.2.0,<3"]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
caml = { path = ".", editable = true }

[tool.pixi.tasks]
test = "bash tests/run_tests.sh"

[tool.pixi.feature.dev]
platforms = ["osx-64", "linux-64"]

[tool.pixi.feature.dev.dependencies]
quarto = ">=1.4"
hatchling = ">=1.25.0,<2"
pip = ">=24.2,<25"
ptyprocess = ">=0.7.0,<0.8"
pyzmq = ">=26.1.0,<27"
python = "==3.10"
openjdk = "11.*"

[tool.pixi.environments]
default = { features = ["polars"], solve-group = "default" }
default-pyspark = { features = ["polars", "pyspark"], solve-group = "default" }
default-ray = { features = ["polars", "ray"], solve-group = "default-ray" }
dev = { features = ["dev", "polars"], solve-group = "default" }
dev-ray = { features = ["dev", "polars", "ray"], solve-group = "default-ray" }
dev-pyspark = { features = ["dev", "polars", "pyspark"], solve-group = "default" }



[tool.ruff]
exclude = ["scripts/notebooks/",
            ".git",
            ".pytest_cache",
            ".ruff_cache",
            "jobs/"]

extend-include = ["*.ipynb"]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py39"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402","F401"] # Import violations
"**/{tests,docs,tools}/*" = ["E402"] # Import violations

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I"]

[tool.ruff.format]
quote-style = "double" # Use double quotes for non-triple-quoted strings.

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "single" # Use single quotes for docstrings

[tool.pytest.ini_options]
filterwarnings = "ignore::DeprecationWarning"
