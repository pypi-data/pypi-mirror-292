(function(u,s){typeof exports=="object"&&typeof module<"u"?s(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],s):(u=typeof globalThis<"u"?globalThis:u||self,s(u.trame_vtklocal={},u.Vue))})(this,function(u,s){"use strict";async function E(a,c){const d={canvas:a,locateFile(){return c},print(){console.info(Array.prototype.slice.call(arguments).join(" "))},printErr(){console.error(Array.prototype.slice.call(arguments).join(" "))}},p=await window.createVTKWasmSceneManager(d);return p.initialize(),p}const k={VtkLocal:{emits:["updated","memory-vtk","memory-arrays","camera"],props:{renderWindow:{type:Number},eagerSync:{type:Boolean,default:!1},cacheSize:{type:Number,default:1e8},wsClient:{type:Object}},setup(a,{emit:c}){const d=s.inject("trame"),p=d.state.get("__trame_vtklocal_wasm_url"),v=[],T=[],B=s.ref(null),O=s.ref(null),m=a.wsClient||(d==null?void 0:d.client),S={},g={},M={},y=s.ref(1);let t=null,b=0,w=null;function U([e]){if(e.type==="state"){const{mtime:r,content:o,id:n}=e;t.unRegisterState(n),t.registerState(o),S[n]=r}if(e.type==="blob"){const{hash:r,content:o}=e;M[r]=new Promise(n=>{o.arrayBuffer?o.arrayBuffer().then(i=>{t.registerBlob(r,new Uint8Array(i)),n()}):(t.registerBlob(r,o),n())})}}async function z(){const e=m.getConnection().getSession();w=e.subscribe("vtklocal.subscriptions",U),await e.call("vtklocal.subscribe.update",[a.renderWindow,1])}async function A(){const e=m.getConnection().getSession();w&&(e.unsubscribe(w),w=null),await e.call("vtklocal.subscribe.update",[a.renderWindow,-1])}function C(){const{width:e,height:r}=B.value.getBoundingClientRect(),o=Math.floor(e*window.devicePixelRatio+.5),n=Math.floor(r*window.devicePixelRatio+.5),i=s.unref(O);i&&t&&a.renderWindow&&(i.width=o,i.height=n,t.setSize(a.renderWindow,o,n),t.render(a.renderWindow))}let h=new ResizeObserver(C);async function V(e){const o=await m.getConnection().getSession().call("vtklocal.get.state",[e]);return o.length>0?(S[e]=JSON.parse(o).MTime,t.unRegisterState(e),t.registerState(o)):console.log(`Server returned empty state for ${e}`),o}async function _(e){if(M[e]){await M[e],g[e]=s.unref(y),delete M[e];return}const o=await m.getConnection().getSession().call("vtklocal.get.hash",[e]),n=o.arrayBuffer?new Uint8Array(await o.arrayBuffer()):o;return t.registerBlob(e,n),g[e]=s.unref(y),n}function x(){const e=t.getTotalVTKDataObjectMemoryUsage(),r=t.getTotalBlobMemoryUsage(),o=Number(a.cacheSize)+e;if(r>o){const n={};let i=s.unref(y);for(Object.entries(g).forEach(([f,l])=>{l<i&&(i=l);const W=l.toString();n[W]?n[W].push(f):n[W]=[f]});t.getTotalBlobMemoryUsage()>o;){const f=n[i];if(f)for(let l=0;l<f.length;l++)t.unRegisterBlob(f[l]),delete g[f[l]];i++}}c("memory-vtk",t.getTotalVTKDataObjectMemoryUsage()),c("memory-arrays",t.getTotalBlobMemoryUsage())}async function j(){if(b++,b===1)try{const r=await m.getConnection().getSession().call("vtklocal.get.status",[a.renderWindow]),o=[];r.ids.forEach(([n,i])=>{(!S[n]||S[n]<i)&&o.push(V(n))}),v.push(...r.cameras),r.ignore_ids.forEach(n=>{t.unRegisterState(n)}),r.hashes.forEach(n=>{g[n]||o.push(_(n)),g[n]=s.unref(y)}),await Promise.all(o),y.value++;try{t.updateObjectsFromStates(),t.render(a.renderWindow),C()}catch(n){console.error("WASM update failed"),console.log(n)}c("updated"),x()}catch(e){console.error("Error in update",e)}finally{b--,b&&(b=0,await j())}}function P(e){t.resetCamera(e),t.render(a.renderWindow)}return s.onMounted(async()=>{t=await E(s.unref(O),p),a.eagerSync&&z(),await j();for(let e=0;e<v.length;e++){const r=v[e];T.push([r,t.addObserver(r,"ModifiedEvent",()=>{t.updateStateFromObject(r);const o=t.getState(r);c("camera",o)})])}t.startEventLoop(a.renderWindow),h&&h.observe(s.unref(B))}),s.onBeforeUnmount(()=>{for(w&&A();T.length;){const[e,r]=T.pop();t.removeObserver(e,r)}t.stopEventLoop(a.renderWindow),h&&(h.disconnect(),h=null)}),{container:B,canvas:O,update:j,resetCamera:P}},template:`
        <div ref="container" style="position: relative; width: 100%; height: 100%;">
          <canvas 
            id="canvas"
            ref="canvas" 
            style="position: absolute; left: 0; top: 0; width: 100%; height: 100%;" 
            tabindex="0"
            
            @contextmenu.prevent
            @click="canvas.focus()"
            @mouseenter="canvas.focus()"
          />
        </div>`}};function R(a){Object.keys(k).forEach(c=>{a.component(c,k[c])})}u.install=R,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
