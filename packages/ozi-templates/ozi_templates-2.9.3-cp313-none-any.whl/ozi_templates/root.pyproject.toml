{#- OZI 0.8
# ozi/templates/root.pyproject.toml
# SPDX-License-Identifier: Unlicense
-#}
[project]
dynamic = ["dependencies", "version"]
license = {file = "{{ project.license_file }}"}

[build-system]
requires = [
{%- for requires in spec.python.build.requires.values() %}
{%- set r = requires -%}
{%- if project.enable_uv %}
{%- set r = r|replace('OZI.build[', 'OZI.build[uv,')%}
{%- endif %}
{%- if project.enable_cython %}
{%- set r = r|replace('OZI.build[', 'OZI.build[cython,')%}
{%- endif %}
    "{{ r }}",
{%- endfor %}
]
build-backend = "{{ spec.python.build.backend }}"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.in"] }

[tool.ozi-build.metadata]
pkg-info-file = 'PKG-INFO'

[project.optional_dependencies] # also meson test suite names
# OZI Packaging Dependencies
# continuous integration
ci   = [
{%- for pkg in spec.python.ci.backend.values() %}
    "{{ pkg }}",
{%- endfor %}
]
# tox -e fix
fix  = ["black>=24.3", "ruff>=0.1.6", "autoflake", "isort"]
# Default meson test setup
dev  = ["[{% for suite in spec.python.ci.checkpoint.suites %}{{ suite }},{% endfor %}]"]
{%- for suite in spec.python.ci.checkpoint.suites %}
{{ suite }} = [
{%- for utility in spec.python.get(suite).utility.values() %}
    "{{ utility }}",
{%- endfor %}
{%- for plugin in spec.python.get(suite).plugin.values() %}
    "{{ plugin }}",
{%- endfor %}
]
{%- endfor %}
