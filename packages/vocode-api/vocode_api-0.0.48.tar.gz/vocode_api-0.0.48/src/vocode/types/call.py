# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .call_status import CallStatus
from .call_human_detection_result import CallHumanDetectionResult
from .call_stage import CallStage
from .call_stage_outcome import CallStageOutcome
from .call_telephony_metadata import CallTelephonyMetadata
from .agent import Agent
from .call_telephony_provider import CallTelephonyProvider
from .call_on_no_human_answer import CallOnNoHumanAnswer
from .twilio_account_connection import TwilioAccountConnection
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Call(UniversalBaseModel):
    id: str
    user_id: str
    status: typing.Optional[CallStatus] = None
    error_message: typing.Optional[str] = None
    recording_available: typing.Optional[bool] = None
    transcript: typing.Optional[str] = None
    human_detection_result: typing.Optional[CallHumanDetectionResult] = None
    do_not_call_result: typing.Optional[bool] = None
    telephony_id: typing.Optional[str] = None
    stage: typing.Optional[CallStage] = None
    stage_outcome: typing.Optional[CallStageOutcome] = None
    telephony_metadata: typing.Optional[CallTelephonyMetadata] = None
    start_time: typing.Optional[str] = None
    end_time: typing.Optional[str] = None
    to_number: str
    from_number: str
    agent: Agent
    telephony_provider: CallTelephonyProvider
    agent_phone_number: str
    hipaa_compliant: typing.Optional[bool] = None
    on_no_human_answer: typing.Optional[CallOnNoHumanAnswer] = None
    context: typing.Optional[typing.Dict[str, typing.Optional[str]]] = None
    run_do_not_call_detection: typing.Optional[bool] = None
    telephony_account_connection: typing.Optional[TwilioAccountConnection] = None
    telephony_params: typing.Optional[typing.Dict[str, typing.Optional[str]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
