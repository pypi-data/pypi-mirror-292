# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .play_ht_voice_update_params_voice_id import PlayHtVoiceUpdateParamsVoiceId
from .play_ht_voice_update_params_api_user_id import PlayHtVoiceUpdateParamsApiUserId
from .play_ht_voice_update_params_api_key import PlayHtVoiceUpdateParamsApiKey
from .play_ht_voice_update_params_version import PlayHtVoiceUpdateParamsVersion
from .play_ht_voice_update_params_speed import PlayHtVoiceUpdateParamsSpeed
from .play_ht_voice_update_params_quality import PlayHtVoiceUpdateParamsQuality
from .play_ht_voice_update_params_temperature import PlayHtVoiceUpdateParamsTemperature
from .play_ht_voice_update_params_top_p import PlayHtVoiceUpdateParamsTopP
from .play_ht_voice_update_params_text_guidance import PlayHtVoiceUpdateParamsTextGuidance
from .play_ht_voice_update_params_voice_guidance import PlayHtVoiceUpdateParamsVoiceGuidance
from .play_ht_voice_update_params_experimental_remove_silence import PlayHtVoiceUpdateParamsExperimentalRemoveSilence
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class PlayHtVoiceUpdateParams(UniversalBaseModel):
    type: typing.Literal["voice_play_ht"] = "voice_play_ht"
    voice_id: typing.Optional[PlayHtVoiceUpdateParamsVoiceId] = None
    api_user_id: typing.Optional[PlayHtVoiceUpdateParamsApiUserId] = None
    api_key: typing.Optional[PlayHtVoiceUpdateParamsApiKey] = None
    version: typing.Optional[PlayHtVoiceUpdateParamsVersion] = None
    speed: typing.Optional[PlayHtVoiceUpdateParamsSpeed] = None
    quality: typing.Optional[PlayHtVoiceUpdateParamsQuality] = None
    temperature: typing.Optional[PlayHtVoiceUpdateParamsTemperature] = None
    top_p: typing.Optional[PlayHtVoiceUpdateParamsTopP] = None
    text_guidance: typing.Optional[PlayHtVoiceUpdateParamsTextGuidance] = None
    voice_guidance: typing.Optional[PlayHtVoiceUpdateParamsVoiceGuidance] = None
    experimental_remove_silence: typing.Optional[PlayHtVoiceUpdateParamsExperimentalRemoveSilence] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
