# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .transfer_call_action_update_params_config import TransferCallActionUpdateParamsConfig
from .transfer_call_action_update_params_action_trigger import TransferCallActionUpdateParamsActionTrigger
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TransferCallActionUpdateParams(UniversalBaseModel):
    type: typing.Literal["action_transfer_call"] = "action_transfer_call"
    config: typing.Optional[TransferCallActionUpdateParamsConfig] = None
    action_trigger: typing.Optional[TransferCallActionUpdateParamsActionTrigger] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
