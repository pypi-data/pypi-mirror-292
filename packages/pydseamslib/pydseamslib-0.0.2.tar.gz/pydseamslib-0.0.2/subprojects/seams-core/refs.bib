
@article{metyaNucleationAqueousSalt2018,
  langid = {english},
  title = {Nucleation of {{Aqueous Salt Solutions}} on {{Solid Surfaces}}},
  volume = {122},
  issn = {1932-7447, 1932-7455},
  url = {http://pubs.acs.org/doi/10.1021/acs.jpcc.7b12495},
  doi = {10/gdh4s2},
  abstract = {The freezing of water in the presence of salts is very common and widely investigated phenomena. However, the role of the substrate during crystallization, and in particular the molecular-level resolution of nucleation mechanism, is still not well-understood. In this work, we investigated the freezing behavior of supercooled water and aqueous lithium chloride solutions on smooth graphitic surfaces. We illustrate the role of solid surfaces in the freezing process of aqueous solutions as a function of mole fraction of a salt exhibiting lowering of freezing temperature, irrespective of a water-binding affinity to the surface. Our molecular dynamics simulations show that the hydrophobic surface is a better nucleating surface when the mole fraction of the salt is over 5\%. Our findings reveal that nucleation of ice occurs heterogeneously at the liquid−solid interface. Consequently, propagation of the ice front yields phasesegregated brine near the liquid−vapor interface. Furthermore, we have investigated the effect of salt−surface interaction on the freezing process. We observe lowering of the freezing point with an increase in the water−surface interaction. The simulations demonstrate that nucleation of ice occurs heterogeneously at the liquid−solid interface for low values of interaction, whereas homogeneous nucleation of ice takes place away from the substrate at higher interaction strengths.},
  number = {15},
  journaltitle = {The Journal of Physical Chemistry C},
  urldate = {2018-07-10},
  date = {2018-04-19},
  pages = {8277-8287},
  author = {Metya, Atanu K. and Singh, Jayant K.}
}

@article{larsenRobustStructuralIdentification2016,
  langid = {english},
  title = {Robust Structural Identification via Polyhedral Template Matching},
  volume = {24},
  issn = {0965-0393, 1361-651X},
  url = {http://stacks.iop.org/0965-0393/24/i=5/a=055007?key=crossref.1bf60b0a56c3370377566b97afbc9a58},
  doi = {10/gdxwvg},
  abstract = {Successful scientific applications of large-scale molecular dynamics often rely on automated methods for identifying the local crystalline structure of condensed phases. Many existing methods for structural identification, such as common neighbour analysis, rely on interatomic distances (or thresholds thereof) to classify atomic structure. As a consequence they are sensitive to strain and thermal displacements, and preprocessing such as quenching or temporal averaging of the atomic positions is necessary to provide reliable identifications. We propose a new method, polyhedral template matching (PTM), which classifies structures according to the topology of the local atomic environment, without any ambiguity in the classification, and with greater reliability than e.g. common neighbour analysis in the presence of thermal fluctuations. We demonstrate that the method can reliably be used to identify structures even in simulations near the melting point, and that it can identify the most common ordered alloy structures as well. In addition, the method makes it easy to identify the local lattice orientation in polycrystalline samples, and to calculate the local strain tensor. An implementation is made available under a Free and Open Source Software license.},
  number = {5},
  journaltitle = {Modelling and Simulation in Materials Science and Engineering},
  urldate = {2018-08-09},
  date = {2016-06-01},
  pages = {055007},
  author = {Larsen, Peter Mahler and Schmidt, Søren and Schiøtz, Jakob}
}

@article{lummenCommonNeighbourAnalysis2007,
  langid = {english},
  title = {Common Neighbour Analysis for Binary Atomic Systems},
  volume = {15},
  url = {http://stacks.iop.org/0965-0393/15/i=3/a=010?key=crossref.32b64ceefe9df66fb1153079635c6fd3},
  doi = {10/ctfg2w},
  abstract = {The structure analysis of atom configurations obtained from molecular simulation is usually conducted by the radial pair correlation function. It describes the probability of finding an atom in a certain distance to a reference atom. By comparison with the radial pair correlation functions of perfectly ordered crystal structures one can often determine the structure type of a system. Difficulties arise when several crystal structures are present and partly ordered/disordered binary systems are investigated. In these cases the common neighbour analysis is useful. This is a powerful method for the determination of the different crystal structures and their fraction in atom configurations obtained from molecular simulations. Up to now this method has been developed and applied to monatomic systems. Here we describe an extension of the method to binary atomic systems and present signatures for bulk and the [1 0 0]-, [1 1 0]and [1 1 1]-surfaces of four face centred binary structures. These are the L10 (AuCu), L11 (CuPt), L12 (Cu3Au) and L60 (CuTi3) structures.},
  journaltitle = {Modelling and Simulation in Materials Science and Engineering},
  urldate = {2018-07-25},
  date = {2007-04-01},
  pages = {319-334},
  author = {Lümmen, Norbert and Kraska, Thomas}
}

@article{stukowskiStructureIdentificationMethods2012,
  langid = {english},
  title = {Structure Identification Methods for Atomistic Simulations of Crystalline Materials},
  volume = {20},
  issn = {0965-0393, 1361-651X},
  url = {http://stacks.iop.org/0965-0393/20/i=4/a=045021?key=crossref.62fd0e163400ad01215afefbb3451bab},
  doi = {10/gdvm8p},
  abstract = {We discuss existing and new computational analysis techniques to classify local atomic arrangements in large-scale atomistic computer simulations of crystalline solids. This article includes a performance comparison of typical analysis algorithms such as common neighbor analysis (CNA), centrosymmetry analysis, bond angle analysis, bond order analysis and Voronoi analysis. In addition we propose a simple extension to the CNA method that makes it suitable for multi-phase systems. Finally, we introduce a new structure identification algorithm, the neighbor distance analysis, which is designed to identify atomic structure units in grain boundaries.},
  number = {4},
  journaltitle = {Modelling and Simulation in Materials Science and Engineering},
  urldate = {2018-07-25},
  date = {2012-06-01},
  pages = {045021},
  author = {Stukowski, Alexander}
}

@article{nguyenIdentificationClathrateHydrates2015,
  langid = {english},
  title = {Identification of {{Clathrate Hydrates}}, {{Hexagonal Ice}}, {{Cubic Ice}}, and {{Liquid Water}} in {{Simulations}}: The {{CHILL}}+ {{Algorithm}}},
  volume = {119},
  issn = {1520-6106, 1520-5207},
  url = {http://pubs.acs.org/doi/10.1021/jp510289t},
  doi = {10/f7k5zh},
  shorttitle = {Identification of {{Clathrate Hydrates}}, {{Hexagonal Ice}}, {{Cubic Ice}}, and {{Liquid Water}} in {{Simulations}}},
  abstract = {Clathrate hydrates and ice I are the most abundant crystals of water. The study of their nucleation, growth, and decomposition using molecular simulations requires an accurate and efficient algorithm that distinguishes water molecules that belong to each of these crystals and the liquid phase. Existing algorithms identify ice or clathrates, but not both. This poses a challenge for cases in which ice and hydrate coexist, such as in the synthesis of clathrates from ice and the formation of ice from clathrates during self-preservation of methane hydrates. Here we present an efficient algorithm for the identification of clathrate hydrates, hexagonal ice, cubic ice, and liquid water in molecular simulations. CHILL+ uses the number of staggered and eclipsed water−water bonds to identify water molecules in cubic ice, hexagonal ice, and clathrate hydrate. CHILL+ is an extension of CHILL (Moore et al. Phys. Chem. Chem. Phys. 2010, 12, 4124−4134), which identifies hexagonal and cubic ice but not clathrates. In addition to the identification of hydrates, CHILL+ significantly improves the detection of hexagonal ice up to its melting point. We validate the use of CHILL+ for the identification of stacking faults in ice and the nucleation and growth of clathrate hydrates. To our knowledge, this is the first algorithm that allows for the simultaneous identification of ice and clathrate hydrates, and it does so in a way that is competitive with respect to existing methods used to identify any of these crystals.},
  number = {29},
  journaltitle = {The Journal of Physical Chemistry B},
  urldate = {2018-07-24},
  date = {2015-07-23},
  pages = {9369-9376},
  author = {Nguyen, Andrew H. and Molinero, Valeria}
}

@article{mooreFreezingMeltingStructure2010,
  langid = {english},
  title = {Freezing, Melting and Structure of Ice in a Hydrophilic Nanopore},
  volume = {12},
  issn = {1463-9076, 1463-9084},
  url = {http://xlink.rsc.org/?DOI=b919724a},
  doi = {10/ddwghf},
  number = {16},
  journaltitle = {Physical Chemistry Chemical Physics},
  urldate = {2018-07-24},
  date = {2010},
  pages = {4124},
  author = {Moore, Emily B. and family=Llave, given=Ezequiel, prefix=de la, useprefix=true and Welke, Kai and Scherlis, Damian A. and Molinero, Valeria}
}

@article{kogaFormationOrderedIce2001,
  langid = {english},
  title = {Formation of Ordered Ice Nanotubes inside Carbon Nanotubes},
  volume = {412},
  date = {2001},
  pages = {4},
  author = {Koga, Kenichiro and Gao, G T and Tanaka, Hideki and Zeng, X C}
}

@article{reintenwoldeNumericalCalculationRate1996,
  langid = {english},
  title = {Numerical Calculation of the Rate of Crystal Nucleation in a {{Lennard}}‐{{Jones}} System at Moderate Undercooling},
  volume = {104},
  issn = {0021-9606, 1089-7690},
  url = {http://aip.scitation.org/doi/10.1063/1.471721},
  doi = {10/cmncbs},
  number = {24},
  journaltitle = {The Journal of Chemical Physics},
  urldate = {2018-12-22},
  date = {1996-06-22},
  pages = {9932-9947},
  author = {Rein ten Wolde, Pieter and Ruiz‐Montero, Maria J. and Frenkel, Daan}
}

@article{liHomogeneousIceNucleation2011,
  langid = {english},
  title = {Homogeneous Ice Nucleation from Supercooled Water},
  volume = {13},
  issn = {1463-9076, 1463-9084},
  url = {http://xlink.rsc.org/?DOI=c1cp22167a},
  doi = {10/fv5xvv},
  number = {44},
  journaltitle = {Physical Chemistry Chemical Physics},
  urldate = {2018-12-22},
  date = {2011},
  pages = {19807},
  author = {Li, Tianshu and Donadio, Davide and Russo, Giovanna and Galli, Giulia}
}

@article{haji-akbariDirectCalculationIce2015,
  langid = {english},
  title = {Direct Calculation of Ice Homogeneous Nucleation Rate for a Molecular Model of Water},
  volume = {112},
  issn = {0027-8424, 1091-6490},
  url = {http://www.pnas.org/lookup/doi/10.1073/pnas.1509267112},
  doi = {10/gfv3qn},
  number = {34},
  journaltitle = {Proceedings of the National Academy of Sciences},
  urldate = {2019-02-27},
  date = {2015-08-25},
  pages = {10582-10588},
  author = {Haji-Akbari, Amir and Debenedetti, Pablo G.}
}

@article{prernaStudyIceNucleation2019,
  langid = {english},
  title = {Study of Ice Nucleation on Silver Iodide Surface with Defects},
  issn = {0026-8976, 1362-3028},
  url = {https://www.tandfonline.com/doi/full/10.1080/00268976.2019.1657599},
  doi = {10/gf62dn},
  abstract = {In this work, we have considered the crystallisation behaviour of supercooled water in the presence of surface defects of varying size (surface fraction, α from 1 to 0.5). Ice nucleation on Ag exposed βAgI (0001 plane) surface is investigated by molecular dynamics simulation at a temperature of 240 K. For systems with α {$>$} 0.67, the surface layers crystallise within 150 ns. In the system with defects, we observe two distinct stacking patterns in the layers near the surface and find that systems with AA stacking cause a monotonic decrease in the early nucleation dynamics with an increase in defect size. Where AB stacking (α = 0.833) is observed, the effect of the defect is diminished and the dynamics are similar to the plain AgI surface. This is supported by the variation in the orientational dynamics, hydrogen bond network stability, and tetrahedrality with respect to the defects. We quantify results in terms of the network topology using double-diamond cages (DDCs) and hexagonal cages (HCs). The configurations of the initially formed layers of ice strongly affect the subsequent growth even at long timescales. We assert that the retarded ice growth due to defects can be explained by the relative increase in DDCs with respect to HCs.},
  journaltitle = {Molecular Physics},
  urldate = {2019-08-26},
  date = {2019-08-25},
  pages = {1-13},
  author = {{Prerna} and Goswami, Rohit and Metya, Atanu K. and Shevkunov, S. V. and Singh, Jayant K.}
}

@article{raymondCathedralBazaar,
  langid = {english},
  title = {The {{Cathedral}} and the {{Bazaar}}},
  abstract = {I anatomize a successful open-source project, fetchmail, that was run as a deliberate test of some surprising theories about so=ware engineering suggested by the history of Linux. I discuss these theories in terms of two fundamentally di:erent development styles, the “cathedral” model of most of the commercial world versus the “bazaar” model of the Linux world. I show that these models derive from opposing assumptions about the nature of the so=ware-debugging task. I then make a sustained argument from the Linux experience for the proposition that “Given enough eyeballs, all bugs are shallow”, suggest productive analogies with other self-correcting systems of selfish agents, and conclude with some exploration of the implications of this insight for the future of so=ware.},
  pages = {40},
  author = {Raymond, Eric Steven}
}

@article{inceCaseOpenComputer2012,
  langid = {english},
  title = {The Case for Open Computer Programs},
  volume = {482},
  issn = {1476-4687},
  url = {https://www.nature.com/articles/nature10836},
  doi = {10/hqg},
  abstract = {Scientific communication relies on evidence that cannot be entirely included in publications, but the rise of computational science has added a new layer of inaccessibility. Although it is now accepted that data should be made available on request, the current regulations regarding the availability of software are inconsistent. We argue that, with some exceptions, anything less than the release of source programs is intolerable for results that depend on computation. The vagaries of hardware, software and natural language will always ensure that exact reproducibility remains uncertain, but withholding code increases the chances that efforts to reproduce results will fail.},
  number = {7386},
  journaltitle = {Nature},
  urldate = {2019-09-04},
  date = {2012-02},
  pages = {485-488},
  author = {Ince, Darrel C. and Hatton, Leslie and Graham-Cumming, John}
}

@article{pengReproducibleResearchComputational2011,
  langid = {english},
  title = {Reproducible {{Research}} in {{Computational Science}}},
  volume = {334},
  issn = {0036-8075, 1095-9203},
  url = {https://science.sciencemag.org/content/334/6060/1226},
  doi = {10/fdv356},
  abstract = {{$<$}p{$>$}Computational science has led to exciting new developments, but the nature of the work has exposed limitations in our ability to evaluate published findings. Reproducibility has the potential to serve as a minimum standard for judging scientific claims when full independent replication of a study is not possible.{$<$}/p{$>$}},
  number = {6060},
  journaltitle = {Science},
  urldate = {2019-09-04},
  date = {2011-12-02},
  pages = {1226-1227},
  author = {Peng, Roger D.},
  eprinttype = {pmid},
  eprint = {22144613}
}

@article{sandveTenSimpleRules2013,
  langid = {english},
  title = {Ten {{Simple Rules}} for {{Reproducible Computational Research}}},
  volume = {9},
  issn = {1553-7358},
  url = {https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1003285},
  doi = {10/pjb},
  number = {10},
  journaltitle = {PLOS Computational Biology},
  urldate = {2019-09-04},
  date = {2013-10-24},
  pages = {e1003285},
  author = {Sandve, Geir Kjetil and Nekrutenko, Anton and Taylor, James and Hovig, Eivind}
}

@article{mesirovAccessibleReproducibleResearch2010,
  langid = {english},
  title = {Accessible {{Reproducible Research}}},
  volume = {327},
  issn = {0036-8075, 1095-9203},
  url = {https://science.sciencemag.org/content/327/5964/415},
  doi = {10/djq8wv},
  abstract = {As use of computation in research grows, new tools are needed to expand recording, reporting, and reproduction of methods and data.
As use of computation in research grows, new tools are needed to expand recording, reporting, and reproduction of methods and data.},
  number = {5964},
  journaltitle = {Science},
  urldate = {2019-09-04},
  date = {2010-01-22},
  pages = {415-416},
  author = {Mesirov, Jill P.},
  eprinttype = {pmid},
  eprint = {20093459}
}

@article{boettigerIntroductionDockerReproducible2015,
  title = {An Introduction to {{Docker}} for Reproducible Research},
  volume = {49},
  issn = {0163-5980},
  url = {http://dl.acm.org/citation.cfm?id=2723872.2723882},
  doi = {10/gdz6f9},
  number = {1},
  journaltitle = {ACM SIGOPS Operating Systems Review},
  urldate = {2019-09-04},
  date = {2015-01-20},
  pages = {71-79},
  author = {Boettiger, Carl}
}

@article{ierusalimschyLuaExtensibleExtension1996,
  langid = {english},
  title = {Lua—{{An Extensible Extension Language}}},
  volume = {26},
  issn = {1097-024X},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/%28SICI%291097-024X%28199606%2926%3A6%3C635%3A%3AAID-SPE26%3E3.0.CO%3B2-P},
  doi = {10/cb49qb},
  abstract = {This paper describes Lua, a language for extending applications. Lua combines procedural features with powerful data description facilities, by using a simple, yet powerful, mechanism of tables . This mechanism implements the concepts of records, arrays and recursive data types (pointers), and adds some object-oriented facilities, such as methods with dynamic dispatching. Lua presents a mechanism of fallbacks that allows programmers to extend the semantics of the language in some unconventional ways. As a noteworthy example, fallbacks allow the user to add different kinds of inheritance to the language. Currently, Lua is being extensively used in production for several tasks, including user configuration, general-purpose data-entry, description of user interfaces, storage of structured graphical metafiles, and generic attribute configuration for finite element meshes.},
  number = {6},
  journaltitle = {Software: Practice and Experience},
  urldate = {2019-09-04},
  date = {1996},
  pages = {635-652},
  author = {Ierusalimschy, Roberto and family=Figueiredo, given=Luiz Henrique, prefix=de, useprefix=false and Filho, Waldemar Celes}
}

@inproceedings{ierusalimschyEvolutionLua2007,
  langid = {english},
  location = {{San Diego, California}},
  title = {The Evolution of {{Lua}}},
  url = {http://portal.acm.org/citation.cfm?doid=1238844.1238846},
  doi = {10/fpnx4n},
  abstract = {We report on the birth and evolution of Lua and discuss how it moved from a simple configuration language to a versatile, widely used language that supports extensible semantics, anonymous functions, full lexical scoping, proper tail calls, and coroutines.},
  eventtitle = {The Third {{ACM SIGPLAN}} Conference},
  booktitle = {Proceedings of the Third {{ACM SIGPLAN}} Conference on {{History}} of Programming Languages  - {{HOPL III}}},
  publisher = {{ACM Press}},
  urldate = {2019-09-04},
  date = {2007},
  pages = {2-1-2-26},
  author = {Ierusalimschy, Roberto and family=Figueiredo, given=Luiz Henrique, prefix=de, useprefix=true and Celes, Waldemar}
}

@article{berendsenGROMACSMessagepassingParallel1995,
  title = {{{GROMACS}}: {{A}} Message-Passing Parallel Molecular Dynamics Implementation},
  volume = {91},
  issn = {0010-4655},
  url = {http://www.sciencedirect.com/science/article/pii/001046559500042E},
  doi = {10/ckwz3n},
  shorttitle = {{{GROMACS}}},
  abstract = {A parallel message-passing implementation of a molecular dynamics (MD) program that is useful for bio(macro)molecules in aqueous environment is described. The software has been developed for a custom-designed 32-processor ring GROMACS (GROningen MAchine for Chemical Simulation) with communication to and from left and right neighbours, but can run on any parallel system onto which a a ring of processors can be mapped and which supports PVM-like block send and receive calls. The GROMACS software consists of a preprocessor, a parallel MD and energy minimization program that can use an arbitrary number of processors (including one), an optional monitor, and several analysis tools. The programs are written in ANSI C and available by ftp (information: gromacs@chem.rug.nl). The functionality is based on the GROMOS (GROningen MOlecular Simulation) package (van Gunsteren and Berendsen, 1987; BIOMOS B.V., Nijenborgh 4, 9747 AG Groningen). Conversion programs between GROMOS and GROMACS formats are included. The MD program can handle rectangular periodic boundary conditions with temperature and pressure scaling. The interactions that can be handled without modification are variable non-bonded pair interactions with Coulomb and Lennard-Jones or Buckingham potentials, using a twin-range cut-off based on charge groups, and fixed bonded interactions of either harmonic or constraint type for bonds and bond angles and either periodic or cosine power series interactions for dihedral angles. Special forces can be added to groups of particles (for non-equilibrium dynamics or for position restraining) or between particles (for distance restraints). The parallelism is based on particle decomposition. Interprocessor communication is largely limited to position and force distribution over the ring once per time step.},
  number = {1},
  journaltitle = {Computer Physics Communications},
  urldate = {2019-09-05},
  date = {1995-09-02},
  pages = {43-56},
  author = {Berendsen, H. J. C. and family=Spoel, given=D., prefix=van der, useprefix=true and family=Drunen, given=R., prefix=van, useprefix=true}
}

@article{abrahamGROMACSHighPerformance2015,
  title = {{{GROMACS}}: {{High}} Performance Molecular Simulations through Multi-Level Parallelism from Laptops to Supercomputers},
  volume = {1-2},
  issn = {2352-7110},
  url = {http://www.sciencedirect.com/science/article/pii/S2352711015000059},
  doi = {10/f3pj2n},
  shorttitle = {{{GROMACS}}},
  abstract = {GROMACS is one of the most widely used open-source and free software codes in chemistry, used primarily for dynamical simulations of biomolecules. It provides a rich set of calculation types, preparation and analysis tools. Several advanced techniques for free-energy calculations are supported. In version 5, it reaches new performance heights, through several new and enhanced parallelization algorithms. These work on every level; SIMD registers inside cores, multithreading, heterogeneous CPU–GPU acceleration, state-of-the-art 3D domain decomposition, and ensemble-level parallelization through built-in replica exchange and the separate Copernicus framework. The latest best-in-class compressed trajectory storage format is supported.},
  journaltitle = {SoftwareX},
  urldate = {2019-09-05},
  date = {2015-09-01},
  pages = {19-25},
  author = {Abraham, Mark James and Murtola, Teemu and Schulz, Roland and Páll, Szilárd and Smith, Jeremy C. and Hess, Berk and Lindahl, Erik}
}

@article{plimptonFastParallelAlgorithms,
  langid = {english},
  title = {Fast {{Parallel Algorithms}} for {{Short}}–{{Range Molecular Dynamics}}},
  abstract = {Three parallel algorithms for classical molecular dynamics are presented. The first assigns each processor a fixed subset of atoms; the second assigns each a fixed subset of inter–atomic forces to compute; the third assigns each a fixed spatial region. The algorithms are suitable for molecular dynamics models which can be difficult to parallelize efficiently — those with short–range forces where the neighbors of each atom change rapidly. They can be implemented on any distributed–memory parallel machine which allows for message–passing of data between independently executing processors. The algorithms are tested on a standard Lennard–Jones benchmark problem for system sizes ranging from 500 to 100,000,000 atoms on several parallel supercomputers — the nCUBE 2, Intel iPSC/860 and Paragon, and Cray T3D. Comparing the results to the fastest reported vectorized Cray Y–MP and C90 algorithm shows that the current generation of parallel machines is competitive with conventional vector supercomputers even for small problems. For large problems, the spatial algorithm achieves parallel efficiencies of 90\% and a 1840–node Intel Paragon performs up to 165 faster than a single Cray C90 processor. Trade–offs between the three algorithms and guidelines for adapting them to more complex molecular dynamics simulations are also discussed.},
  pages = {42},
  author = {Plimpton, Steve}
}

@article{mcgibbonMDTrajModernOpen2015,
  langid = {english},
  title = {{{MDTraj}}: {{A Modern Open Library}} for the {{Analysis}} of {{Molecular Dynamics Trajectories}}},
  volume = {109},
  issn = {0006-3495},
  url = {https://www.cell.com/biophysj/abstract/S0006-3495(15)00826-7},
  doi = {10/f7v8fd},
  shorttitle = {{{MDTraj}}},
  number = {8},
  journaltitle = {Biophysical Journal},
  urldate = {2019-09-05},
  date = {2015-10-20},
  pages = {1528-1532},
  author = {McGibbon, Robert T. and Beauchamp, Kyle A. and Harrigan, Matthew P. and Klein, Christoph and Swails, Jason M. and Hernández, Carlos X. and Schwantes, Christian R. and Wang, Lee-Ping and Lane, Thomas J. and Pande, Vijay S.},
  eprinttype = {pmid},
  eprint = {26488642}
}

@article{stallmanDebuggingGDB,
  langid = {english},
  title = {Debugging with {{GDB}}},
  pages = {352},
  author = {Stallman, Richard and Pesch, Roland and Shebs, Stan}
}

@article{oliphantPythonScientificComputing2007,
  title = {Python for {{Scientific Computing}}},
  volume = {9},
  issn = {1521-9615},
  doi = {10/fjzzc8},
  abstract = {Python is an excellent "steering" language for scientific codes written in other languages. However, with additional basic tools, Python transforms into a high-level language suited for scientific and engineering code that's often fast enough to be immediately useful but also flexible enough to be sped up with additional extensions.},
  number = {3},
  journaltitle = {Computing in Science Engineering},
  date = {2007-05},
  pages = {10-20},
  author = {Oliphant, T. E.}
}

@article{waltNumPyArrayStructure2011,
  title = {The {{NumPy Array}}: {{A Structure}} for {{Efficient Numerical Computation}}},
  volume = {13},
  issn = {1521-9615},
  doi = {10/d8k4p9},
  shorttitle = {The {{NumPy Array}}},
  abstract = {In the Python world, NumPy arrays are the standard representation for numerical data and enable efficient implementation of numerical computations in a high-level language. As this effort shows, NumPy performance can be improved through three techniques: vectorizing calculations, avoiding copying data in memory, and minimizing operation counts.},
  number = {2},
  journaltitle = {Computing in Science Engineering},
  date = {2011-03},
  pages = {22-30},
  author = {family=Walt, given=S., prefix=van der, useprefix=false and Colbert, S. C. and Varoquaux, G.}
}

@article{weikESPResSoExtensibleSoftware2019,
  langid = {english},
  title = {{{ESPResSo}} 4.0 – an Extensible Software Package for Simulating Soft Matter Systems},
  volume = {227},
  issn = {1951-6401},
  url = {https://doi.org/10.1140/epjst/e2019-800186-9},
  doi = {10/gf7jns},
  abstract = {ESPResSo is an extensible simulation package for research on soft matter. This versatile molecular dynamics program was originally developed for coarse-grained simulations of charged systems [H.J. Limbach et al., Comput. Phys. Commun. 174, 704 (2006)]. The scope of the software has since broadened considerably: ESPResSo can now be used to simulate systems with length scales spanning from the molecular to the colloidal. Examples include, self-propelled particles in active matter, membranes in biological systems, and the aggregation of soot particles in process engineering. ESPResSo also includes solvers for hydrodynamic and electrokinetic problems, both on the continuum and on the explicit particle level. Since our last description of version 3.1 [A. Arnold et al., Meshfree methods for partial di\_erential equations VI, Lect. Notes Comput. Sci. Eng. 89, 1 (2013)], the software has undergone considerable restructuring. The biggest change is the replacement of the Tcl scripting interface with a much more powerful Python interface. In addition, many new simulation methods have been implemented. In this article, we highlight the changes and improvements made to the interface and code, as well as the new simulation techniques that enable a user of ESPResSo 4.0 to simulate physics that is at the forefront of soft matter research.},
  number = {14},
  journaltitle = {Eur. Phys. J. Spec. Top.},
  urldate = {2019-09-05},
  date = {2019-03-01},
  pages = {1789-1816},
  author = {Weik, Florian and Weeber, Rudolf and Szuttor, Kai and Breitsprecher, Konrad and family=Graaf, given=Joost, prefix=de, useprefix=true and Kuron, Michael and Landsgesell, Jonas and Menke, Henri and Sean, David and Holm, Christian}
}

@article{giannozziQUANTUMESPRESSOModular2009,
  langid = {english},
  title = {{{QUANTUM ESPRESSO}}: A Modular and Open-Source Software Project for Quantum Simulations of Materials},
  volume = {21},
  issn = {0953-8984},
  url = {https://doi.org/10.1088%2F0953-8984%2F21%2F39%2F395502},
  doi = {10/d7spb8},
  shorttitle = {{{QUANTUM ESPRESSO}}},
  abstract = {QUANTUM ESPRESSO is an integrated suite of computer codes for electronic-structure calculations and materials modeling, based on density-functional theory, plane waves, and pseudopotentials (norm-conserving, ultrasoft, and projector-augmented wave). The acronym ESPRESSO stands for opEn Source Package for Research in Electronic Structure, Simulation, and Optimization. It is freely available to researchers around the world under the terms of the GNU General Public License. QUANTUM ESPRESSO builds upon newly-restructured electronic-structure codes that have been developed and tested by some of the original authors of novel electronic-structure algorithms and applied in the last twenty years by some of the leading materials modeling groups worldwide. Innovation and efficiency are still its main focus, with special attention paid to massively parallel architectures, and a great effort being devoted to user friendliness. QUANTUM ESPRESSO is evolving towards a distribution of independent and interoperable codes in the spirit of an open-source project, where researchers active in the field of electronic-structure calculations are encouraged to participate in the project by contributing their own codes or by implementing their own ideas into existing codes.},
  number = {39},
  journaltitle = {J. Phys.: Condens. Matter},
  urldate = {2019-09-05},
  date = {2009-09},
  pages = {395502},
  author = {Giannozzi, Paolo and Baroni, Stefano and Bonini, Nicola and Calandra, Matteo and Car, Roberto and Cavazzoni, Carlo and Ceresoli, Davide and Chiarotti, Guido L. and Cococcioni, Matteo and Dabo, Ismaila and Corso, Andrea Dal and family=Gironcoli, given=Stefano, prefix=de, useprefix=false and Fabris, Stefano and Fratesi, Guido and Gebauer, Ralph and Gerstmann, Uwe and Gougoussis, Christos and Kokalj, Anton and Lazzeri, Michele and Martin-Samos, Layla and Marzari, Nicola and Mauri, Francesco and Mazzarello, Riccardo and Paolini, Stefano and Pasquarello, Alfredo and Paulatto, Lorenzo and Sbraccia, Carlo and Scandolo, Sandro and Sclauzero, Gabriele and Seitsonen, Ari P. and Smogunov, Alexander and Umari, Paolo and Wentzcovitch, Renata M.}
}

@article{dolstraNixOSPurelyFunctional2010,
  langid = {english},
  title = {{{NixOS}}: {{A}} Purely Functional {{Linux}} Distribution},
  volume = {20},
  issn = {1469-7653, 0956-7968},
  doi = {10/dfrgtj},
  shorttitle = {{{NixOS}}},
  abstract = {Existing package and system configuration management tools suffer from an imperative model, where system administration actions such as package upgrades or changes to system configuration files are stateful: they destructively update the state of the system. This leads to many problems, such as the inability to roll back changes easily, to deploy multiple versions of a package side-by-side, to reproduce a configuration deterministically on another machine, or to reliably upgrade a system. In this paper we show that we can overcome these problems by moving to a purely functional system configuration model. This means that all static parts of a system (such as software packages, configuration files and system startup scripts) are built by pure functions and are immutable, stored in a way analogous to a heap in a purely functional language. We have implemented this model in NixOS, a non-trivial Linux distribution that uses the Nix package manager to build the entire system configuration from a modular, purely functional specification.},
  number = {5-6},
  journaltitle = {Journal of Functional Programming},
  date = {2010-11},
  pages = {577-615},
  author = {Dolstra, Eelco and Löh, Andres and Pierron, Nicolas}
}

@thesis{dolstraPurelyFunctionalSoftware2006,
  langid = {english},
  location = {{S.l.}},
  title = {The Purely Functional Software Deployment Model},
  institution = {{[s.n.]}},
  date = {2006},
  author = {Dolstra, Eelco}
}

@article{feldmanMakeProgramMaintaining1979,
  langid = {english},
  title = {Make — a Program for Maintaining Computer Programs},
  volume = {9},
  issn = {1097-024X},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.4380090402},
  doi = {10/ddjt4p},
  abstract = {Good programmers break their projects into a number of pieces, each to be processed or compiled by a different chain of programs. After a set of changes is made, the series of actions that must be taken can be quite complex, and costly errors are frequently made. This paper describes a program that can keep track of the relationships between parts of a program, and issue the commands needed to make the parts consistent after changes are made. Make has been in use on UNIX UNIX is a trademark of Bell Laboratories. systems since 1975. The underlying idea is quite simple and can be adapted to many other environments.},
  number = {4},
  journaltitle = {Software: Practice and Experience},
  urldate = {2019-09-07},
  date = {1979},
  pages = {255-265},
  author = {Feldman, Stuart I.}
}

@article{dolstraNixSafePolicyFree2004,
  langid = {english},
  title = {Nix: {{A Safe}} and {{Policy}}-{{Free System}} for {{Software Deployment}}},
  abstract = {Existing systems for software deployment are neither safe nor sufficiently flexible. Primary safety issues are the inability to enforce reliable specification of component dependencies, and the lack of support for multiple versions or variants of a component. This renders deployment operations such as upgrading or deleting components dangerous and unpredictable. A deployment system must also be flexible (i.e., policy-free) enough to support both centralised and local package management, and to allow a variety of mechanisms for transferring components. In this paper we present Nix, a deployment system that addresses these issues through a simple technique of using cryptographic hashes to compute unique paths for component instances.},
  date = {2004},
  pages = {15},
  author = {Dolstra, Eelco and family=Jonge, given=Merijn, prefix=de, useprefix=true and Visser, Eelco}
}

@article{ierusalimschyLookDesignLua2018,
  title = {A {{Look}} at the {{Design}} of {{Lua}}},
  volume = {61},
  issn = {0001-0782},
  url = {http://doi.acm.org/10.1145/3186277},
  doi = {10/gf8dbg},
  abstract = {Simplicity, small size, portability, and embeddability set Lua apart from other scripting languages.},
  number = {11},
  journaltitle = {Commun. ACM},
  urldate = {2019-09-17},
  date = {2018-10},
  pages = {114--123},
  author = {Ierusalimschy, Roberto and De Figueiredo, Luiz Henrique and Celes, Waldemar}
}

@article{giovambattistaRelationHighDensity2005,
  title = {Relation between the {{High Density Phase}} and the {{Very}}-{{High Density Phase}} of {{Amorphous Solid Water}}},
  volume = {94},
  url = {https://link.aps.org/doi/10.1103/PhysRevLett.94.107803},
  doi = {10.1103/PhysRevLett.94.107803},
  abstract = {It has been suggested that high-density amorphous (HDA) ice is a structurally arrested form of high-density liquid (HDL) water, while low-density amorphous ice is a structurally arrested form of low-density liquid (LDL) water. Recent experiments and simulations have been interpreted to support the possibility of a second distinct high-density structural state, named very high-density amorphous (VHDA) ice, questioning the LDL-HDL hypothesis. We test this interpretation using extensive computer simulations and find that VHDA is a more stable form of HDA and that, in fact, VHDA should be considered as the amorphous ice of the quenched HDL.},
  number = {10},
  journaltitle = {Phys. Rev. Lett.},
  urldate = {2019-09-20},
  date = {2005-03-18},
  pages = {107803},
  author = {Giovambattista, Nicolas and Stanley, H. Eugene and Sciortino, Francesco}
}

@article{salzmannPreparationStructuresHydrogen2006,
  langid = {english},
  title = {The {{Preparation}} and {{Structures}} of {{Hydrogen Ordered Phases}} of {{Ice}}},
  volume = {311},
  issn = {0036-8075, 1095-9203},
  url = {https://science.sciencemag.org/content/311/5768/1758},
  doi = {10/c93c7k},
  abstract = {Two hydrogen ordered phases of ice were prepared by cooling the hydrogen disordered ices V and XII under pressure. Previous attempts to unlock the geometrical frustration in hydrogen-bonded structures have focused on doping with potassium hydroxide and have had success in partially increasing the hydrogen ordering in hexagonal ice I (ice Ih). By doping ices V and XII with hydrochloric acid, we have prepared ice XIII and ice XIV, and we analyzed their structures by powder neutron diffraction. The use of hydrogen chloride to release geometrical frustration opens up the possibility of completing the phase diagram of ice.
The addition of hydrochloric acid to disordered phases of ice unlocks some of the trapped molecules and reveals two new high-pressure phases.
The addition of hydrochloric acid to disordered phases of ice unlocks some of the trapped molecules and reveals two new high-pressure phases.},
  number = {5768},
  journaltitle = {Science},
  urldate = {2019-09-20},
  date = {2006-03-24},
  pages = {1758-1761},
  author = {Salzmann, Christoph G. and Radaelli, Paolo G. and Hallbrucker, Andreas and Mayer, Erwin and Finney, John L.},
  eprinttype = {pmid},
  eprint = {16556840}
}

@article{salzmannPolymorphismIceFive2011,
  langid = {english},
  title = {The Polymorphism of Ice: Five Unresolved Questions},
  volume = {13},
  issn = {1463-9084},
  url = {https://pubs.rsc.org/en/content/articlelanding/2011/cp/c1cp21712g},
  doi = {10/bf8m6f},
  shorttitle = {The Polymorphism of Ice},
  abstract = {Our recent discovery of three new phases of ice has increased the total number of known distinct polymorphs of ice to fifteen. In this Perspective article, we give a brief account of previous work in the field, and discuss some of the particularly interesting open questions that have emerged from recent studies. These include (i) the effectiveness of acid and base dopants to enable hydrogen-ordering processes in the ices, (ii) the comparison of the calorimetric data of some of the crystalline phases of ice and low-density amorphous ice, (iii) the disagreement between the experimental ice XV structure and computational predictions, (iv) the incompleteness of some of the hydrogen order/disorder pairs and (v) the new frontiers at the high and negative pressure ends of the phase diagram.},
  number = {41},
  journaltitle = {Phys. Chem. Chem. Phys.},
  urldate = {2019-09-20},
  date = {2011-10-11},
  pages = {18468-18480},
  author = {Salzmann, Christoph G. and Radaelli, Paolo G. and Slater, Ben and Finney, John L.}
}

@article{zhuCompressionLimitTwoDimensional2015,
  title = {Compression {{Limit}} of {{Two}}-{{Dimensional Water Constrained}} in {{Graphene Nanocapillaries}}},
  volume = {9},
  issn = {1936-0851},
  url = {https://doi.org/10.1021/acsnano.5b06572},
  doi = {10/f75hd3},
  abstract = {Evaluation of the tensile/compression limit of a solid under conditions of tension or compression is often performed to provide mechanical properties that are critical for structure design and assessment. Algara-Siller et al. recently demonstrated that when water is constrained between two sheets of graphene, it becomes a two-dimensional (2D) liquid and then is turned into an intriguing monolayer solid with a square pattern under high lateral pressure [Nature, 2015, 519, 443−445]. From a mechanics point of view, this liquid-to-solid transformation characterizes the compression limit (or metastability limit) of the 2D monolayer water. Here, we perform a simulation study of the compression limit of 2D monolayer, bilayer, and trilayer water constrained in graphene nanocapillaries. At 300 K, a myriad of 2D ice polymorphs (both crystalline-like and amorphous) are formed from the liquid water at different widths of the nanocapillaries, ranging from 6.0 to11.6 Å. For monolayer water, the compression limit is typically a few hundred MPa, while for the bilayer and trilayer water, the compression limit is 1.5 GPa or higher, reflecting the ultrahigh van der Waals pressure within the graphene nanocapillaries. The compression-limit (phase) diagram is obtained at the nanocapillary width versus pressure (h–P) plane, based on the comprehensive molecular dynamics simulations at numerous thermodynamic states as well as on the Clapeyron equation. Interestingly, the compression-limit curves exhibit multiple local minima.},
  number = {12},
  journaltitle = {ACS Nano},
  urldate = {2019-09-20},
  date = {2015-12-22},
  pages = {12197-12204},
  author = {Zhu, YinBo and Wang, FengChao and Bai, Jaeil and Zeng, Xiao Cheng and Wu, HengAn}
}

@article{gaoPhaseDiagramWater2018,
  langid = {english},
  title = {Phase {{Diagram}} of {{Water Confined}} by {{Graphene}}},
  volume = {8},
  issn = {2045-2322},
  url = {https://www.nature.com/articles/s41598-018-24358-3},
  doi = {10/gdfmwr},
  abstract = {The behavior of water confined at the nanoscale plays a fundamental role in biological processes and technological applications, including protein folding, translocation of water across membranes, and filtration and desalination. Remarkably, nanoscale confinement drastically alters the properties of water. Using molecular dynamics simulations, we determine the phase diagram of water confined by graphene sheets in slab geometry, at T = 300\,K and for a wide range of pressures. We find that, depending on the confining dimension D and density σ, water can exist in liquid and vapor phases, or crystallize into monolayer and bilayer square ices, as observed in experiments. Interestingly, depending on D and σ, the crystal-liquid transformation can be a first-order phase transition, or smooth, reminiscent of a supercritical liquid-gas transformation. We also focus on the limit of stability of the liquid relative to the vapor and obtain the cavitation pressure perpendicular to the graphene sheets. Perpendicular cavitation pressure varies non-monotonically with increasing D and exhibits a maximum at D\,≈\,0.90\,nm (equivalent to three water layers). The effect of nanoconfinement on the cavitation pressure can have an impact on water transport in technological and biological systems. Our study emphasizes the rich and apparently unpredictable behavior of nanoconfined water, which is complex even for graphene.},
  number = {1},
  journaltitle = {Sci Rep},
  urldate = {2019-09-20},
  date = {2018-04-18},
  pages = {1-11},
  author = {Gao, Zhenghan and Giovambattista, Nicolas and Sahin, Ozgur}
}


