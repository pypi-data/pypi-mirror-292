"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import kerfed.protos.common.v1.money_pb2
import kerfed.protos.common.v1.timestamp_pb2
import kerfed.protos.common.v1.units_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _StockKind:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _StockKindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_StockKind.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    STOCK_KIND_UNSPECIFIED: _StockKind.ValueType  # 0
    STOCK_KIND_SHEET: _StockKind.ValueType  # 1
    """A plate or sheet"""
    STOCK_KIND_ROD: _StockKind.ValueType  # 2
    """A rectangular solid"""
    STOCK_KIND_BAR: _StockKind.ValueType  # 3
    """A cylinder."""

class StockKind(_StockKind, metaclass=_StockKindEnumTypeWrapper): ...

STOCK_KIND_UNSPECIFIED: StockKind.ValueType  # 0
STOCK_KIND_SHEET: StockKind.ValueType  # 1
"""A plate or sheet"""
STOCK_KIND_ROD: StockKind.ValueType  # 2
"""A rectangular solid"""
STOCK_KIND_BAR: StockKind.ValueType  # 3
"""A cylinder."""
global___StockKind = StockKind

@typing_extensions.final
class Stock(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STOCK_ID_FIELD_NUMBER: builtins.int
    MATERIAL_ID_FIELD_NUMBER: builtins.int
    SUPPLIER_ID_FIELD_NUMBER: builtins.int
    SUPPLIER_PIN_FIELD_NUMBER: builtins.int
    SUPPLIER_LINK_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    EXPIRY_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    stock_id: builtins.str
    """a unique identifier for this particular sheet or bar"""
    material_id: builtins.str
    """Which material does this apply to:
    i.e. `abs`, `aluminum_6061_t6`
    """
    supplier_id: builtins.str
    """Which supplier is providing this material:
    `metalsdepot`, `mcmaster`
    """
    supplier_pin: builtins.str
    """The supplier's part number for this piece
    of material i.e. `95462A515`
    """
    supplier_link: builtins.str
    """A URL pointing to the part."""
    @property
    def price(self) -> kerfed.protos.common.v1.money_pb2.Money:
        """The unit cost of this material."""
    @property
    def expiry(self) -> kerfed.protos.common.v1.timestamp_pb2.Timestamp:
        """When does this quoted price for material expire?"""
    quantity: builtins.int
    """how many of this stock are required for a job"""
    kind: global___StockKind.ValueType
    """What is the simple form factor of this stock."""
    length: builtins.float
    """If this is a rod `length = width` and is the diameter of the rod.
    If it is a bar or a sheet this is the length and width.
    """
    width: builtins.float
    height: builtins.float
    """if this is a sheet this is the thickness."""
    units: kerfed.protos.common.v1.units_pb2.UnitSystem.ValueType
    """Are all dimensions in this message meters, inches, etc."""
    def __init__(
        self,
        *,
        stock_id: builtins.str = ...,
        material_id: builtins.str = ...,
        supplier_id: builtins.str = ...,
        supplier_pin: builtins.str = ...,
        supplier_link: builtins.str = ...,
        price: kerfed.protos.common.v1.money_pb2.Money | None = ...,
        expiry: kerfed.protos.common.v1.timestamp_pb2.Timestamp | None = ...,
        quantity: builtins.int = ...,
        kind: global___StockKind.ValueType = ...,
        length: builtins.float = ...,
        width: builtins.float = ...,
        height: builtins.float = ...,
        units: kerfed.protos.common.v1.units_pb2.UnitSystem.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expiry", b"expiry", "price", b"price"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expiry", b"expiry", "height", b"height", "kind", b"kind", "length", b"length", "material_id", b"material_id", "price", b"price", "quantity", b"quantity", "stock_id", b"stock_id", "supplier_id", b"supplier_id", "supplier_link", b"supplier_link", "supplier_pin", b"supplier_pin", "units", b"units", "width", b"width"]) -> None: ...

global___Stock = Stock
