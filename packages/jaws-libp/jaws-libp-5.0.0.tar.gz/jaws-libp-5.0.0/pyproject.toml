[build-system]
requires = ["setuptools==69.2.0","wheel==0.43.0"]
build-backend = "setuptools.build_meta"

[project]
name = "jaws-libp"
dynamic = ["version"]
authors = [
    {name = "Ryan Slominski", email = "ryans@jlab.org"},
]
description = "Jefferson Lab Alarm Warning System API"
readme = "README.md"
requires-python = "==3.9.*"
keywords = ["kafka", "alarm"]
license = {text = "MIT License"}
classifiers = [
    "Programming Language :: Python :: 3"
]
dependencies = [
    "confluent-kafka[schema-registry,avro]==2.3.0",
    "psutil==5.9.8",
    "tabulate==0.9.0",
    "requests==2.31.0",
    "click==7.1.2"
]

[project.optional-dependencies]
dev = [
    "build==1.1.1",
    "pytest==7.4.4",
    "pytest-env==1.1.3",
    "pylint==2.17.7",
    "Sphinx==6.2.1",
    "sphinx_click==4.4.0",
    "sphinx-rtd-theme==1.3.0",
    "sphinx-autodoc-typehints==1.23.0"
]

[tool.setuptools.dynamic]
version = {file = ["VERSION"]}

[project.urls]
Repository = "https://github.com/jeffersonlab/jaws-libp.git"

[project.scripts]
create_topics = "jaws_libp.scripts.broker.create_topics:create_topics"
delete_topics = "jaws_libp.scripts.broker.delete_topics:delete_topics"
describe_topics = "jaws_libp.scripts.broker.describe_topics:describe_topics"
list_topics = "jaws_libp.scripts.broker.list_topics:list_topics"
show_consumer_groups = "jaws_libp.scripts.broker.show_consumer_groups:show_consumer_groups"
list_activations = "jaws_libp.scripts.client.list_activations:list_activations"
list_systems = "jaws_libp.scripts.client.list_systems:list_systems"
list_actions = "jaws_libp.scripts.client.list_actions:click_main"
list_effective_notifications = "jaws_libp.scripts.client.list_effective_notifications:list_effective_notifications"
list_effective_alarms = "jaws_libp.scripts.client.list_effective_alarms:list_effective_alarms"
list_effective_registrations = "jaws_libp.scripts.client.list_effective_registrations:list_effective_registrations"
list_alarms = "jaws_libp.scripts.client.list_alarms:list_alarms"
list_locations = "jaws_libp.scripts.client.list_locations:list_locations"
list_overrides = "jaws_libp.scripts.client.list_overrides:list_overrides"
set_activation = "jaws_libp.scripts.client.set_activation:set_activation"
set_system = "jaws_libp.scripts.client.set_system:set_system"
set_action = "jaws_libp.scripts.client.set_action:click_main"
set_effective_notification = "jaws_libp.scripts.client.set_effective_notification:set_effective_notification"
set_effective_alarm = "jaws_libp.scripts.client.set_effective_alarm:set_effective_alarm"
set_effective_registration = "jaws_libp.scripts.client.set_effective_registration:set_effective_registration"
set_alarm = "jaws_libp.scripts.client.set_alarm:click_main"
set_location = "jaws_libp.scripts.client.set_location:set_location"
set_override = "jaws_libp.scripts.client.set_override:set_override"
create_schemas = "jaws_libp.scripts.registry.create_schemas:create_schemas"
delete_schemas = "jaws_libp.scripts.registry.delete_schemas:delete_schemas"
describe_schemas = "jaws_libp.scripts.registry.describe_schemas:describe_schemas"
describe_version = "jaws_libp.scripts.registry.describe_version:describe_version"
list_schemas = "jaws_libp.scripts.registry.list_schemas:list_schemas"

[tool.pytest.ini_options]
pythonpath = [
    "./src"
]
env = [
    "BOOTSTRAP_SERVERS=localhost:9094",
    "SCHEMA_REGISTRY=http://localhost:8081",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.avsc","*.json"]