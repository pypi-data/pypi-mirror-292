[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "problem_bank_scripts"
version = "1.0.1"
description = "A package with useful functions to convert between different problem bank formats."
authors = ["Open Problem Bank Team"]
license = "MIT"
readme = "README.md"
documentation = "https://problem_bank_scripts.readthedocs.io/en/latest/"
homepage = "https://github.com/open-resources/problem_bank_scripts"
repository = "https://github.com/open-resources/problem_bank_scripts"

[tool.poetry.dependencies]
python = ">=3.10"
pandas = "^2.2.2"
PyYAML = "^6.0.2"
numpy = "^1.26.4"
markdown-it-py = "^3.0.0"
mdformat = "^0.7.14"
sympy = "^1.13.2"
problem-bank-helpers = "^0.3.2"
typing-extensions = "^4.12.2"
black = "^24.8.0"
gitpython = "^3.1.43"
exceptiongroup = {version = "^1.2.2", python = "<3.11"}
questionary = {version = "^2.0.1", optional = true}
nltk = {version = "^3.8.1", optional = true}
openai = {version = "^1.40.1", optional = true}
pdf2image = {version = "^1.17.0", optional = true}
scikit-learn = {version = "^1.5.1", optional = true}
python-dotenv = {version = "^1.0.1", optional = true}
Sphinx = {version = "^7.4.7", optional = true}
nbsphinx = {version = "^0.8.5", optional = true}
ipykernel = {version = "^6.29.5", optional = true}
sphinx-rtd-theme = {version = "^2.0.0", optional = true}
myst-nb = {version = "^1.1.1", optional = true}
myst-parser = {version = "^3.0.1", optional = true}
pytest = {version = "^8.3.2", optional = true}
fastjsonschema  = {version = "^2.20.0", optional = true}
pytest-subtests = {version = "^0.13.1", optional = true}

[tool.poetry.extras]
tui = ["questionary", "nltk", "openai", "pdf2image", "scikit-learn", "python-dotenv"]
docs = ["Sphinx", "nbsphinx", "ipykernel", "sphinx-rtd-theme", "myst-nb", "myst-parser"]
tests = ["pytest", "pytest-subtests", "fastjsonschema"]

[tool.poetry.scripts]
pbs-cli = "problem_bank_scripts.scripts.cli:main"
lint_server = "problem_bank_scripts.scripts.lint_server:main"
check_server_ast = "problem_bank_scripts.scripts.check_server_ast:main"
process = "problem_bank_scripts.scripts.process:main"
process_q = "problem_bank_scripts.scripts.process_q:main"
checkq = "problem_bank_scripts.scripts.check_question:main"

[tool.pytest.ini_options]
filterwarnings = ["error", "ignore::DeprecationWarning:problem_bank_helpers"]
