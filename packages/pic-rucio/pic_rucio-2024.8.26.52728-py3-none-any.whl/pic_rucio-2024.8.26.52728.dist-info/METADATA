Metadata-Version: 2.1
Name: pic_rucio
Version: 2024.8.26.52728
Summary: PIC rucio client transfer package
Home-page: https://gitlab.pic.es/rucio/rucio-client
Author: Agustin Bruzzese
Author-email: bruzzese@pic.es
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: Operating System :: POSIX :: Linux
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6, <4
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: coloredlogs ==15.0.1
Requires-Dist: elasticsearch ==8.6.0
Requires-Dist: psycopg2-binary
Requires-Dist: PyYAML ==6.0
Requires-Dist: rucio ==1.30.5
Requires-Dist: rucio-clients ==1.30.2
Requires-Dist: tqdm
Requires-Dist: wheel
Requires-Dist: pandas
Requires-Dist: setuptools
Provides-Extra: dev
Requires-Dist: pre-commit ; extra == 'dev'

# Pic rucio client

## installation

From the root folder, in an environment with python and pip installed.

`pip install .`

## Development

## installation

The same but will be installed in editable mode and some additional
packages needed for development will be included.

`pip install -e .[dev]`

## pre-commit hooks

Some pre-commit hooks are included to enforce best practices. See
the [pre-commit documentation](https://pre-commit.com/)

Install hooks: `pre-commit install`
Run hooks manually: `pre-commit run --all-files`



## OLD

Below is a couple of scripts that facilitate other tests to interact with Rucio's server.
In each one of them, the amount and scope corresponding to the person are owed 
(and in the case that the RSEs are desired, although it is not necessary). 
First of all, here is a script to do simple uploads of randoms files. Then, 
Replication of those files in the deterministic RSE.
See [pre-commit](https://docs.google.com/document/d/1jm3LKKI0sTP6Gx0p5PQXRti2NzK_JqG1ITFs761W0KU/edit#heading=h.mkngky6253k8) for instructions.

# gitlab-ci
`gitlab-ci` validates you `.gitlab-ci.yml` file from command-line, before you have commited wrong CI configuration to your repository!

Just as https://docs.gitlab.com/ee/ci/lint.html does, but you don't have to open browser every time.

The better way to use it - use as pre-commit hooks.

# How to package this scripts
See this [guide](https://packaging.python.org/en/latest/tutorials/packaging-projects/) for more instructions
