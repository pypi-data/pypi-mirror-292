.Dd 2023-08-17
.Dt YATTE 1
.Os
.Sh NAME
.Nm yatte
.Nd a simple task runner
.Sh SYNOPSIS
.Nm
.Op Fl h
.Op Fl V
.Nm
.Ar task
.Op Ar task_args ...
.Sh DESCRIPTION
The
.Nm
utility runs tasks defined in a Python script
(named
.Pa tasks.py
by default).
.Pp
Pass the task name as the first argument,
followed by any additional arguments expected by the task:
.Pp
.Dl $ yatte Ar task Op Ar task_args ...
.Pp
Run without arguments to print the list of available tasks
and the arguments expected by each:
.Pp
.Dl $ yatte
.Sh OPTIONS
Use the following flags to display information about the program:
.Bl -tag -width Ds
.It Fl h , \-help
Show usage information and exit.
.It Fl V , \-version
Show the version number and exit.
.El
.Sh ENVIRONMENT
The default behaviour can be modified by setting the following
environment variables:
.Bl -tag -width Ds
.It Ev YATTE_TASKFILE
the path to the task file (default:
.Pa tasks.py )
.It Ev YATTE_SUCCESS_MSG
the message printed to the console upon successful completion of the task
(default:
.Dq = Yatta! = )
.El
.Sh FILES
.Nm
expects the task file to be a Python module
containing one or more function definitions decorated with
.Fn yatte.task .
See
.Sx EXAMPLES
below for an example.
.Pp
The first line of the function docstring is used as the task description
when printing the task list.
.Pp
The function can take one or more positional arguments of type
.Vt str ,
which must then be supplied on the command line when running the task.
.Sh EXIT STATUS
.Ex -std
The exact value in case of failure depends on the return code
of any subprocesses invoked.
.Sh EXAMPLES
Running
.Nm
against this task file:
.Bd -literal -offset indent
from yatte import task

@task("echo")
def print_echo(word):
    "Echoes a word."
    print(word.upper(), word.title(), word.lower())
.Ed
.Pp
will produce output like the following:
.Bd -literal -offset indent
$ yatte
echo word		Echoes a word.

$ yatte echo hello
HELLO Hello hello
= Yatta! =
.Ed
.Sh SEE ALSO
.Xr invoke 1 ,
.Xr make 1
.Sh AUTHORS
.An JA Viljoen Aq Mt yatte@javiljoen.net
