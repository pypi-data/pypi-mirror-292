# pre-commit configurations
default_install_hook_types:
  - prepare-commit-msg
  - pre-commit
  - pre-push
default_stages:
  - prepare-commit-msg
  - pre-commit
  - pre-push
minimum_pre_commit_version: 3.8.0

# pre-commit exclusions
exclude: >
  (?x)(
    \.patch$|
    \.svg$|
    eicar\..*$|
    CHANGELOG.md$|
    COPYING.*$|
    LICENSE.*$|
    README.md$
  )

# pre-commit repositories
repos:

  # Repository: pre-commit
  - repo: meta
    hooks:
      - id: check-hooks-apply
      - id: check-useless-excludes

  # Repository: pre-commit-hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-merge-conflict
      # - id: check-toml
      # - id: check-xml
      - id: check-yaml
        args: ['--unsafe']
      - id: destroyed-symlinks
        stages: [commit, push, manual] # Issue: https://github.com/pre-commit/pre-commit-hooks/pull/1085
      # - id: detect-private-key
      - id: double-quote-string-fixer
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: trailing-whitespace
        args: ['--markdown-linebreak-ext=md']

  # Repository: commitizen
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.29.0
    hooks:
      - id: commitizen
      - id: commitizen-branch
        entry: cz
        args: [--no-raise, '3', check, --rev-range, origin/HEAD..HEAD]
        stages:
          - push

  # Repository: pre-commit-crocodile
  - repo: local
    hooks:
      - id: prepare-commit-message
        name: Prepare commit message automatically
        description: Automatically prepare the commit message for manual edition
        stages:
          - prepare-commit-msg
        entry: python ./src/hooks/prepare_commit_message.py
        args: []
        language: python

  # Repository: local-gcil
  - repo: local
    hooks:
      - id: local-gcil-codestyle
        name: check codestyle job with gcil
        description: Automatically run GitLab CI job with gcil (codestyle)
        stages:
          - pre-push
        entry: gcil -e 'PRE_COMMIT'
        args: ['codestyle']
        language: system
      - id: local-gcil-lint
        name: check lint job with gcil
        description: Automatically run GitLab CI job with gcil (lint)
        stages:
          - pre-push
        entry: gcil -e 'PRE_COMMIT'
        args: ['lint']
        language: system
      - id: local-gcil-typings
        name: check typings job with gcil
        description: Automatically run GitLab CI job with gcil (typings)
        stages:
          - pre-push
        entry: gcil -e 'PRE_COMMIT'
        args: ['typings']
        language: system
