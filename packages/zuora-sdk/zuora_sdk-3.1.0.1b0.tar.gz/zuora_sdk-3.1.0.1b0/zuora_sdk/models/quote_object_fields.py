# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class QuoteObjectFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'opportunity_close_date__qt': 'str',
        'opportunity_name__qt': 'str',
        'quote_business_type__qt': 'str',
        'quote_number__qt': 'str',
        'quote_type__qt': 'str'
    }

    attribute_map = {
        'opportunity_close_date__qt': 'OpportunityCloseDate__QT',
        'opportunity_name__qt': 'OpportunityName__QT',
        'quote_business_type__qt': 'QuoteBusinessType__QT',
        'quote_number__qt': 'QuoteNumber__QT',
        'quote_type__qt': 'QuoteType__QT'
    }

    def __init__(self, opportunity_close_date__qt=None, opportunity_name__qt=None, quote_business_type__qt=None, quote_number__qt=None, quote_type__qt=None):  # noqa: E501
        """QuoteObjectFields - a model defined in Swagger"""  # noqa: E501
        self._opportunity_close_date__qt = None
        self._opportunity_name__qt = None
        self._quote_business_type__qt = None
        self._quote_number__qt = None
        self._quote_type__qt = None
        self.discriminator = None
        if opportunity_close_date__qt is not None:
            self.opportunity_close_date__qt = opportunity_close_date__qt
        if opportunity_name__qt is not None:
            self.opportunity_name__qt = opportunity_name__qt
        if quote_business_type__qt is not None:
            self.quote_business_type__qt = quote_business_type__qt
        if quote_number__qt is not None:
            self.quote_number__qt = quote_number__qt
        if quote_type__qt is not None:
            self.quote_type__qt = quote_type__qt

    @property
    def opportunity_close_date__qt(self):
        """Gets the opportunity_close_date__qt of this QuoteObjectFields.  # noqa: E501

        The closing date of the Opportunity.  This field is used in Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :return: The opportunity_close_date__qt of this QuoteObjectFields.  # noqa: E501
        :rtype: str
        """
        return self._opportunity_close_date__qt

    @opportunity_close_date__qt.setter
    def opportunity_close_date__qt(self, opportunity_close_date__qt):
        """Sets the opportunity_close_date__qt of this QuoteObjectFields.

        The closing date of the Opportunity.  This field is used in Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :param opportunity_close_date__qt: The opportunity_close_date__qt of this QuoteObjectFields.  # noqa: E501
        :type: str
        """

        self._opportunity_close_date__qt = opportunity_close_date__qt

    @property
    def opportunity_name__qt(self):
        """Gets the opportunity_name__qt of this QuoteObjectFields.  # noqa: E501

        The unique identifier of the Opportunity.   This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 100   # noqa: E501

        :return: The opportunity_name__qt of this QuoteObjectFields.  # noqa: E501
        :rtype: str
        """
        return self._opportunity_name__qt

    @opportunity_name__qt.setter
    def opportunity_name__qt(self, opportunity_name__qt):
        """Sets the opportunity_name__qt of this QuoteObjectFields.

        The unique identifier of the Opportunity.   This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 100   # noqa: E501

        :param opportunity_name__qt: The opportunity_name__qt of this QuoteObjectFields.  # noqa: E501
        :type: str
        """

        self._opportunity_name__qt = opportunity_name__qt

    @property
    def quote_business_type__qt(self):
        """Gets the quote_business_type__qt of this QuoteObjectFields.  # noqa: E501

        The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal or Churn.  This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 32   # noqa: E501

        :return: The quote_business_type__qt of this QuoteObjectFields.  # noqa: E501
        :rtype: str
        """
        return self._quote_business_type__qt

    @quote_business_type__qt.setter
    def quote_business_type__qt(self, quote_business_type__qt):
        """Sets the quote_business_type__qt of this QuoteObjectFields.

        The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal or Churn.  This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 32   # noqa: E501

        :param quote_business_type__qt: The quote_business_type__qt of this QuoteObjectFields.  # noqa: E501
        :type: str
        """

        self._quote_business_type__qt = quote_business_type__qt

    @property
    def quote_number__qt(self):
        """Gets the quote_number__qt of this QuoteObjectFields.  # noqa: E501

        The unique identifier of the Quote.  This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 32   # noqa: E501

        :return: The quote_number__qt of this QuoteObjectFields.  # noqa: E501
        :rtype: str
        """
        return self._quote_number__qt

    @quote_number__qt.setter
    def quote_number__qt(self, quote_number__qt):
        """Sets the quote_number__qt of this QuoteObjectFields.

        The unique identifier of the Quote.  This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 32   # noqa: E501

        :param quote_number__qt: The quote_number__qt of this QuoteObjectFields.  # noqa: E501
        :type: str
        """

        self._quote_number__qt = quote_number__qt

    @property
    def quote_type__qt(self):
        """Gets the quote_type__qt of this QuoteObjectFields.  # noqa: E501

        The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel.  This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 32   # noqa: E501

        :return: The quote_type__qt of this QuoteObjectFields.  # noqa: E501
        :rtype: str
        """
        return self._quote_type__qt

    @quote_type__qt.setter
    def quote_type__qt(self, quote_type__qt):
        """Sets the quote_type__qt of this QuoteObjectFields.

        The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel.  This field is used in the Zuora Reporting Data Sources to report on Subscription metrics.  If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.  **Character limit**: 32   # noqa: E501

        :param quote_type__qt: The quote_type__qt of this QuoteObjectFields.  # noqa: E501
        :type: str
        """

        self._quote_type__qt = quote_type__qt

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QuoteObjectFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QuoteObjectFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
