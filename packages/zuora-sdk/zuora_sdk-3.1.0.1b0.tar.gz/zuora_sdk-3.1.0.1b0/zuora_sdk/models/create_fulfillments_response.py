# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from zuora_sdk.models.common_response import CommonResponse  # noqa: F401,E501

class CreateFulfillmentsResponse(CommonResponse):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'credit_memo_numbers': 'list[str]',
        'fulfillments': 'list[CreateFulfillmentResponse]',
        'invoice_numbers': 'list[str]',
        'paid_amount': 'float',
        'payment_number': 'str'
    }
    if hasattr(CommonResponse, "swagger_types"):
        swagger_types.update(CommonResponse.swagger_types)

    attribute_map = {
        'credit_memo_numbers': 'creditMemoNumbers',
        'fulfillments': 'fulfillments',
        'invoice_numbers': 'invoiceNumbers',
        'paid_amount': 'paidAmount',
        'payment_number': 'paymentNumber'
    }
    if hasattr(CommonResponse, "attribute_map"):
        attribute_map.update(CommonResponse.attribute_map)

    def __init__(self, credit_memo_numbers=None, fulfillments=None, invoice_numbers=None, paid_amount=None, payment_number=None, *args, **kwargs):  # noqa: E501
        """CreateFulfillmentsResponse - a model defined in Swagger"""  # noqa: E501
        self._credit_memo_numbers = None
        self._fulfillments = None
        self._invoice_numbers = None
        self._paid_amount = None
        self._payment_number = None
        self.discriminator = None
        if credit_memo_numbers is not None:
            self.credit_memo_numbers = credit_memo_numbers
        if fulfillments is not None:
            self.fulfillments = fulfillments
        if invoice_numbers is not None:
            self.invoice_numbers = invoice_numbers
        if paid_amount is not None:
            self.paid_amount = paid_amount
        if payment_number is not None:
            self.payment_number = payment_number
        CommonResponse.__init__(self, *args, **kwargs)

    @property
    def credit_memo_numbers(self):
        """Gets the credit_memo_numbers of this CreateFulfillmentsResponse.  # noqa: E501

        An array of the credit memo numbers generated in this request. The credit memo is only available if you have the Invoice Settlement feature enabled.   # noqa: E501

        :return: The credit_memo_numbers of this CreateFulfillmentsResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._credit_memo_numbers

    @credit_memo_numbers.setter
    def credit_memo_numbers(self, credit_memo_numbers):
        """Sets the credit_memo_numbers of this CreateFulfillmentsResponse.

        An array of the credit memo numbers generated in this request. The credit memo is only available if you have the Invoice Settlement feature enabled.   # noqa: E501

        :param credit_memo_numbers: The credit_memo_numbers of this CreateFulfillmentsResponse.  # noqa: E501
        :type: list[str]
        """

        self._credit_memo_numbers = credit_memo_numbers

    @property
    def fulfillments(self):
        """Gets the fulfillments of this CreateFulfillmentsResponse.  # noqa: E501


        :return: The fulfillments of this CreateFulfillmentsResponse.  # noqa: E501
        :rtype: list[CreateFulfillmentResponse]
        """
        return self._fulfillments

    @fulfillments.setter
    def fulfillments(self, fulfillments):
        """Sets the fulfillments of this CreateFulfillmentsResponse.


        :param fulfillments: The fulfillments of this CreateFulfillmentsResponse.  # noqa: E501
        :type: list[CreateFulfillmentResponse]
        """

        self._fulfillments = fulfillments

    @property
    def invoice_numbers(self):
        """Gets the invoice_numbers of this CreateFulfillmentsResponse.  # noqa: E501

        An array of the invoice numbers generated in this request. Normally it includes one invoice number only.   # noqa: E501

        :return: The invoice_numbers of this CreateFulfillmentsResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._invoice_numbers

    @invoice_numbers.setter
    def invoice_numbers(self, invoice_numbers):
        """Sets the invoice_numbers of this CreateFulfillmentsResponse.

        An array of the invoice numbers generated in this request. Normally it includes one invoice number only.   # noqa: E501

        :param invoice_numbers: The invoice_numbers of this CreateFulfillmentsResponse.  # noqa: E501
        :type: list[str]
        """

        self._invoice_numbers = invoice_numbers

    @property
    def paid_amount(self):
        """Gets the paid_amount of this CreateFulfillmentsResponse.  # noqa: E501

        The total amount collected in this request.   # noqa: E501

        :return: The paid_amount of this CreateFulfillmentsResponse.  # noqa: E501
        :rtype: float
        """
        return self._paid_amount

    @paid_amount.setter
    def paid_amount(self, paid_amount):
        """Sets the paid_amount of this CreateFulfillmentsResponse.

        The total amount collected in this request.   # noqa: E501

        :param paid_amount: The paid_amount of this CreateFulfillmentsResponse.  # noqa: E501
        :type: float
        """

        self._paid_amount = paid_amount

    @property
    def payment_number(self):
        """Gets the payment_number of this CreateFulfillmentsResponse.  # noqa: E501

        The payment number collected in this request.   # noqa: E501

        :return: The payment_number of this CreateFulfillmentsResponse.  # noqa: E501
        :rtype: str
        """
        return self._payment_number

    @payment_number.setter
    def payment_number(self, payment_number):
        """Sets the payment_number of this CreateFulfillmentsResponse.

        The payment number collected in this request.   # noqa: E501

        :param payment_number: The payment_number of this CreateFulfillmentsResponse.  # noqa: E501
        :type: str
        """

        self._payment_number = payment_number

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateFulfillmentsResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateFulfillmentsResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
