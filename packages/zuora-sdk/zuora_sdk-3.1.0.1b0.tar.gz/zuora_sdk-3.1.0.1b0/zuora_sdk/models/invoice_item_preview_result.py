# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InvoiceItemPreviewResult(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'additional_info': 'InvoiceItemPreviewResultAdditionalInfo',
        'amount_without_tax': 'float',
        'applied_to_charge_number': 'str',
        'charge_description': 'str',
        'charge_name': 'str',
        'charge_number': 'str',
        'order_line_item_number': 'str',
        'processing_type': 'InvoiceItemPreviewResultProcessingType',
        'product_name': 'str',
        'product_rate_plan_charge_id': 'str',
        'service_end_date': 'date',
        'service_start_date': 'date',
        'subscription_number': 'str',
        'tax_amount': 'float',
        'taxation_items': 'list[InvoiceItemPreviewResultTaxationItems]',
        'unit_price': 'float'
    }

    attribute_map = {
        'additional_info': 'additionalInfo',
        'amount_without_tax': 'amountWithoutTax',
        'applied_to_charge_number': 'appliedToChargeNumber',
        'charge_description': 'chargeDescription',
        'charge_name': 'chargeName',
        'charge_number': 'chargeNumber',
        'order_line_item_number': 'orderLineItemNumber',
        'processing_type': 'processingType',
        'product_name': 'productName',
        'product_rate_plan_charge_id': 'productRatePlanChargeId',
        'service_end_date': 'serviceEndDate',
        'service_start_date': 'serviceStartDate',
        'subscription_number': 'subscriptionNumber',
        'tax_amount': 'taxAmount',
        'taxation_items': 'taxationItems',
        'unit_price': 'unitPrice'
    }

    def __init__(self, additional_info=None, amount_without_tax=None, applied_to_charge_number=None, charge_description=None, charge_name=None, charge_number=None, order_line_item_number=None, processing_type=None, product_name=None, product_rate_plan_charge_id=None, service_end_date=None, service_start_date=None, subscription_number=None, tax_amount=None, taxation_items=None, unit_price=None):  # noqa: E501
        """InvoiceItemPreviewResult - a model defined in Swagger"""  # noqa: E501
        self._additional_info = None
        self._amount_without_tax = None
        self._applied_to_charge_number = None
        self._charge_description = None
        self._charge_name = None
        self._charge_number = None
        self._order_line_item_number = None
        self._processing_type = None
        self._product_name = None
        self._product_rate_plan_charge_id = None
        self._service_end_date = None
        self._service_start_date = None
        self._subscription_number = None
        self._tax_amount = None
        self._taxation_items = None
        self._unit_price = None
        self.discriminator = None
        if additional_info is not None:
            self.additional_info = additional_info
        if amount_without_tax is not None:
            self.amount_without_tax = amount_without_tax
        if applied_to_charge_number is not None:
            self.applied_to_charge_number = applied_to_charge_number
        if charge_description is not None:
            self.charge_description = charge_description
        if charge_name is not None:
            self.charge_name = charge_name
        if charge_number is not None:
            self.charge_number = charge_number
        if order_line_item_number is not None:
            self.order_line_item_number = order_line_item_number
        if processing_type is not None:
            self.processing_type = processing_type
        if product_name is not None:
            self.product_name = product_name
        if product_rate_plan_charge_id is not None:
            self.product_rate_plan_charge_id = product_rate_plan_charge_id
        if service_end_date is not None:
            self.service_end_date = service_end_date
        if service_start_date is not None:
            self.service_start_date = service_start_date
        if subscription_number is not None:
            self.subscription_number = subscription_number
        if tax_amount is not None:
            self.tax_amount = tax_amount
        if taxation_items is not None:
            self.taxation_items = taxation_items
        if unit_price is not None:
            self.unit_price = unit_price

    @property
    def additional_info(self):
        """Gets the additional_info of this InvoiceItemPreviewResult.  # noqa: E501


        :return: The additional_info of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: InvoiceItemPreviewResultAdditionalInfo
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info):
        """Sets the additional_info of this InvoiceItemPreviewResult.


        :param additional_info: The additional_info of this InvoiceItemPreviewResult.  # noqa: E501
        :type: InvoiceItemPreviewResultAdditionalInfo
        """

        self._additional_info = additional_info

    @property
    def amount_without_tax(self):
        """Gets the amount_without_tax of this InvoiceItemPreviewResult.  # noqa: E501


        :return: The amount_without_tax of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: float
        """
        return self._amount_without_tax

    @amount_without_tax.setter
    def amount_without_tax(self, amount_without_tax):
        """Sets the amount_without_tax of this InvoiceItemPreviewResult.


        :param amount_without_tax: The amount_without_tax of this InvoiceItemPreviewResult.  # noqa: E501
        :type: float
        """

        self._amount_without_tax = amount_without_tax

    @property
    def applied_to_charge_number(self):
        """Gets the applied_to_charge_number of this InvoiceItemPreviewResult.  # noqa: E501

        Available when the chargeNumber of the charge that discount applies to was specified in the request or when the order is amending an existing subscription.  # noqa: E501

        :return: The applied_to_charge_number of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: str
        """
        return self._applied_to_charge_number

    @applied_to_charge_number.setter
    def applied_to_charge_number(self, applied_to_charge_number):
        """Sets the applied_to_charge_number of this InvoiceItemPreviewResult.

        Available when the chargeNumber of the charge that discount applies to was specified in the request or when the order is amending an existing subscription.  # noqa: E501

        :param applied_to_charge_number: The applied_to_charge_number of this InvoiceItemPreviewResult.  # noqa: E501
        :type: str
        """

        self._applied_to_charge_number = applied_to_charge_number

    @property
    def charge_description(self):
        """Gets the charge_description of this InvoiceItemPreviewResult.  # noqa: E501


        :return: The charge_description of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: str
        """
        return self._charge_description

    @charge_description.setter
    def charge_description(self, charge_description):
        """Sets the charge_description of this InvoiceItemPreviewResult.


        :param charge_description: The charge_description of this InvoiceItemPreviewResult.  # noqa: E501
        :type: str
        """

        self._charge_description = charge_description

    @property
    def charge_name(self):
        """Gets the charge_name of this InvoiceItemPreviewResult.  # noqa: E501


        :return: The charge_name of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: str
        """
        return self._charge_name

    @charge_name.setter
    def charge_name(self, charge_name):
        """Sets the charge_name of this InvoiceItemPreviewResult.


        :param charge_name: The charge_name of this InvoiceItemPreviewResult.  # noqa: E501
        :type: str
        """

        self._charge_name = charge_name

    @property
    def charge_number(self):
        """Gets the charge_number of this InvoiceItemPreviewResult.  # noqa: E501

        Available when the chargeNumber was specified in the request or when the order is amending an existing subscription.  # noqa: E501

        :return: The charge_number of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: str
        """
        return self._charge_number

    @charge_number.setter
    def charge_number(self, charge_number):
        """Sets the charge_number of this InvoiceItemPreviewResult.

        Available when the chargeNumber was specified in the request or when the order is amending an existing subscription.  # noqa: E501

        :param charge_number: The charge_number of this InvoiceItemPreviewResult.  # noqa: E501
        :type: str
        """

        self._charge_number = charge_number

    @property
    def order_line_item_number(self):
        """Gets the order_line_item_number of this InvoiceItemPreviewResult.  # noqa: E501

        A sequential number auto-assigned for each of order line items in a order, used as an index, for example, \"1\".  # noqa: E501

        :return: The order_line_item_number of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: str
        """
        return self._order_line_item_number

    @order_line_item_number.setter
    def order_line_item_number(self, order_line_item_number):
        """Sets the order_line_item_number of this InvoiceItemPreviewResult.

        A sequential number auto-assigned for each of order line items in a order, used as an index, for example, \"1\".  # noqa: E501

        :param order_line_item_number: The order_line_item_number of this InvoiceItemPreviewResult.  # noqa: E501
        :type: str
        """

        self._order_line_item_number = order_line_item_number

    @property
    def processing_type(self):
        """Gets the processing_type of this InvoiceItemPreviewResult.  # noqa: E501


        :return: The processing_type of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: InvoiceItemPreviewResultProcessingType
        """
        return self._processing_type

    @processing_type.setter
    def processing_type(self, processing_type):
        """Sets the processing_type of this InvoiceItemPreviewResult.


        :param processing_type: The processing_type of this InvoiceItemPreviewResult.  # noqa: E501
        :type: InvoiceItemPreviewResultProcessingType
        """

        self._processing_type = processing_type

    @property
    def product_name(self):
        """Gets the product_name of this InvoiceItemPreviewResult.  # noqa: E501


        :return: The product_name of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this InvoiceItemPreviewResult.


        :param product_name: The product_name of this InvoiceItemPreviewResult.  # noqa: E501
        :type: str
        """

        self._product_name = product_name

    @property
    def product_rate_plan_charge_id(self):
        """Gets the product_rate_plan_charge_id of this InvoiceItemPreviewResult.  # noqa: E501


        :return: The product_rate_plan_charge_id of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: str
        """
        return self._product_rate_plan_charge_id

    @product_rate_plan_charge_id.setter
    def product_rate_plan_charge_id(self, product_rate_plan_charge_id):
        """Sets the product_rate_plan_charge_id of this InvoiceItemPreviewResult.


        :param product_rate_plan_charge_id: The product_rate_plan_charge_id of this InvoiceItemPreviewResult.  # noqa: E501
        :type: str
        """

        self._product_rate_plan_charge_id = product_rate_plan_charge_id

    @property
    def service_end_date(self):
        """Gets the service_end_date of this InvoiceItemPreviewResult.  # noqa: E501


        :return: The service_end_date of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: date
        """
        return self._service_end_date

    @service_end_date.setter
    def service_end_date(self, service_end_date):
        """Sets the service_end_date of this InvoiceItemPreviewResult.


        :param service_end_date: The service_end_date of this InvoiceItemPreviewResult.  # noqa: E501
        :type: date
        """

        self._service_end_date = service_end_date

    @property
    def service_start_date(self):
        """Gets the service_start_date of this InvoiceItemPreviewResult.  # noqa: E501


        :return: The service_start_date of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: date
        """
        return self._service_start_date

    @service_start_date.setter
    def service_start_date(self, service_start_date):
        """Sets the service_start_date of this InvoiceItemPreviewResult.


        :param service_start_date: The service_start_date of this InvoiceItemPreviewResult.  # noqa: E501
        :type: date
        """

        self._service_start_date = service_start_date

    @property
    def subscription_number(self):
        """Gets the subscription_number of this InvoiceItemPreviewResult.  # noqa: E501


        :return: The subscription_number of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: str
        """
        return self._subscription_number

    @subscription_number.setter
    def subscription_number(self, subscription_number):
        """Sets the subscription_number of this InvoiceItemPreviewResult.


        :param subscription_number: The subscription_number of this InvoiceItemPreviewResult.  # noqa: E501
        :type: str
        """

        self._subscription_number = subscription_number

    @property
    def tax_amount(self):
        """Gets the tax_amount of this InvoiceItemPreviewResult.  # noqa: E501


        :return: The tax_amount of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this InvoiceItemPreviewResult.


        :param tax_amount: The tax_amount of this InvoiceItemPreviewResult.  # noqa: E501
        :type: float
        """

        self._tax_amount = tax_amount

    @property
    def taxation_items(self):
        """Gets the taxation_items of this InvoiceItemPreviewResult.  # noqa: E501

        List of taxation items.  **Note**: This field is only available if you set the `zuora-version` request header to `309.0` or later.   # noqa: E501

        :return: The taxation_items of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: list[InvoiceItemPreviewResultTaxationItems]
        """
        return self._taxation_items

    @taxation_items.setter
    def taxation_items(self, taxation_items):
        """Sets the taxation_items of this InvoiceItemPreviewResult.

        List of taxation items.  **Note**: This field is only available if you set the `zuora-version` request header to `309.0` or later.   # noqa: E501

        :param taxation_items: The taxation_items of this InvoiceItemPreviewResult.  # noqa: E501
        :type: list[InvoiceItemPreviewResultTaxationItems]
        """

        self._taxation_items = taxation_items

    @property
    def unit_price(self):
        """Gets the unit_price of this InvoiceItemPreviewResult.  # noqa: E501

        The per-unit price of the invoice item.   # noqa: E501

        :return: The unit_price of this InvoiceItemPreviewResult.  # noqa: E501
        :rtype: float
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """Sets the unit_price of this InvoiceItemPreviewResult.

        The per-unit price of the invoice item.   # noqa: E501

        :param unit_price: The unit_price of this InvoiceItemPreviewResult.  # noqa: E501
        :type: float
        """

        self._unit_price = unit_price

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InvoiceItemPreviewResult, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InvoiceItemPreviewResult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
