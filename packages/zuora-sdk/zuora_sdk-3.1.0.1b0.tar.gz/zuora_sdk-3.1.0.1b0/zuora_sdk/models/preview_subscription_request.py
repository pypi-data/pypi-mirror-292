# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PreviewSubscriptionRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_key': 'str',
        'contract_effective_date': 'date',
        'customer_acceptance_date': 'date',
        'document_date': 'date',
        'include_existing_draft_doc_items': 'bool',
        'include_existing_draft_invoice_items': 'bool',
        'initial_term': 'int',
        'initial_term_period_type': 'str',
        'invoice_owner_account_key': 'str',
        'invoice_target_date': 'date',
        'notes': 'str',
        'preview_account_info': 'PreviewSubscriptionAccountInfo',
        'preview_type': 'str',
        'service_activation_date': 'date',
        'subscribe_to_rate_plans': 'list[CreateSubscriptionRatePlan]',
        'target_date': 'date',
        'term_start_date': 'date',
        'term_type': 'str'
    }

    attribute_map = {
        'account_key': 'accountKey',
        'contract_effective_date': 'contractEffectiveDate',
        'customer_acceptance_date': 'customerAcceptanceDate',
        'document_date': 'documentDate',
        'include_existing_draft_doc_items': 'includeExistingDraftDocItems',
        'include_existing_draft_invoice_items': 'includeExistingDraftInvoiceItems',
        'initial_term': 'initialTerm',
        'initial_term_period_type': 'initialTermPeriodType',
        'invoice_owner_account_key': 'invoiceOwnerAccountKey',
        'invoice_target_date': 'invoiceTargetDate',
        'notes': 'notes',
        'preview_account_info': 'previewAccountInfo',
        'preview_type': 'previewType',
        'service_activation_date': 'serviceActivationDate',
        'subscribe_to_rate_plans': 'subscribeToRatePlans',
        'target_date': 'targetDate',
        'term_start_date': 'termStartDate',
        'term_type': 'termType'
    }

    def __init__(self, account_key=None, contract_effective_date=None, customer_acceptance_date=None, document_date=None, include_existing_draft_doc_items=None, include_existing_draft_invoice_items=None, initial_term=None, initial_term_period_type=None, invoice_owner_account_key=None, invoice_target_date=None, notes=None, preview_account_info=None, preview_type=None, service_activation_date=None, subscribe_to_rate_plans=None, target_date=None, term_start_date=None, term_type=None):  # noqa: E501
        """PreviewSubscriptionRequest - a model defined in Swagger"""  # noqa: E501
        self._account_key = None
        self._contract_effective_date = None
        self._customer_acceptance_date = None
        self._document_date = None
        self._include_existing_draft_doc_items = None
        self._include_existing_draft_invoice_items = None
        self._initial_term = None
        self._initial_term_period_type = None
        self._invoice_owner_account_key = None
        self._invoice_target_date = None
        self._notes = None
        self._preview_account_info = None
        self._preview_type = None
        self._service_activation_date = None
        self._subscribe_to_rate_plans = None
        self._target_date = None
        self._term_start_date = None
        self._term_type = None
        self.discriminator = None
        if account_key is not None:
            self.account_key = account_key
        self.contract_effective_date = contract_effective_date
        if customer_acceptance_date is not None:
            self.customer_acceptance_date = customer_acceptance_date
        if document_date is not None:
            self.document_date = document_date
        if include_existing_draft_doc_items is not None:
            self.include_existing_draft_doc_items = include_existing_draft_doc_items
        if include_existing_draft_invoice_items is not None:
            self.include_existing_draft_invoice_items = include_existing_draft_invoice_items
        if initial_term is not None:
            self.initial_term = initial_term
        if initial_term_period_type is not None:
            self.initial_term_period_type = initial_term_period_type
        if invoice_owner_account_key is not None:
            self.invoice_owner_account_key = invoice_owner_account_key
        if invoice_target_date is not None:
            self.invoice_target_date = invoice_target_date
        if notes is not None:
            self.notes = notes
        if preview_account_info is not None:
            self.preview_account_info = preview_account_info
        if preview_type is not None:
            self.preview_type = preview_type
        if service_activation_date is not None:
            self.service_activation_date = service_activation_date
        self.subscribe_to_rate_plans = subscribe_to_rate_plans
        if target_date is not None:
            self.target_date = target_date
        if term_start_date is not None:
            self.term_start_date = term_start_date
        self.term_type = term_type

    @property
    def account_key(self):
        """Gets the account_key of this PreviewSubscriptionRequest.  # noqa: E501

         Customer account number or ID.  You must specify the account information either in this field or in the `previewAccountInfo` field with the following conditions:           * If you already have a customer account, specify the account number or ID in this field. * If you do not have a customer account, provide account information in the `previewAccountInfo` field.   # noqa: E501

        :return: The account_key of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: str
        """
        return self._account_key

    @account_key.setter
    def account_key(self, account_key):
        """Sets the account_key of this PreviewSubscriptionRequest.

         Customer account number or ID.  You must specify the account information either in this field or in the `previewAccountInfo` field with the following conditions:           * If you already have a customer account, specify the account number or ID in this field. * If you do not have a customer account, provide account information in the `previewAccountInfo` field.   # noqa: E501

        :param account_key: The account_key of this PreviewSubscriptionRequest.  # noqa: E501
        :type: str
        """

        self._account_key = account_key

    @property
    def contract_effective_date(self):
        """Gets the contract_effective_date of this PreviewSubscriptionRequest.  # noqa: E501

        Effective contract date for this subscription, as yyyy-mm-dd.   # noqa: E501

        :return: The contract_effective_date of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: date
        """
        return self._contract_effective_date

    @contract_effective_date.setter
    def contract_effective_date(self, contract_effective_date):
        """Sets the contract_effective_date of this PreviewSubscriptionRequest.

        Effective contract date for this subscription, as yyyy-mm-dd.   # noqa: E501

        :param contract_effective_date: The contract_effective_date of this PreviewSubscriptionRequest.  # noqa: E501
        :type: date
        """
        if contract_effective_date is None:
            raise ValueError("Invalid value for `contract_effective_date`, must not be `None`")  # noqa: E501

        self._contract_effective_date = contract_effective_date

    @property
    def customer_acceptance_date(self):
        """Gets the customer_acceptance_date of this PreviewSubscriptionRequest.  # noqa: E501

        The date on which the services or products within a subscription have been accepted by the customer, as yyyy-mm-dd.  Default value is dependent on the value of other fields. See **Notes** section for more details.   # noqa: E501

        :return: The customer_acceptance_date of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: date
        """
        return self._customer_acceptance_date

    @customer_acceptance_date.setter
    def customer_acceptance_date(self, customer_acceptance_date):
        """Sets the customer_acceptance_date of this PreviewSubscriptionRequest.

        The date on which the services or products within a subscription have been accepted by the customer, as yyyy-mm-dd.  Default value is dependent on the value of other fields. See **Notes** section for more details.   # noqa: E501

        :param customer_acceptance_date: The customer_acceptance_date of this PreviewSubscriptionRequest.  # noqa: E501
        :type: date
        """

        self._customer_acceptance_date = customer_acceptance_date

    @property
    def document_date(self):
        """Gets the document_date of this PreviewSubscriptionRequest.  # noqa: E501

        The date of the billing document, in `yyyy-mm-dd` format. It represents the invoice date for invoices, credit memo date for credit memos, and debit memo date for debit memos.  - If this field is specified, the specified date is used as the billing document date.  - If this field is not specified, the date specified in the `targetDate` is used as the billing document date.   # noqa: E501

        :return: The document_date of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: date
        """
        return self._document_date

    @document_date.setter
    def document_date(self, document_date):
        """Sets the document_date of this PreviewSubscriptionRequest.

        The date of the billing document, in `yyyy-mm-dd` format. It represents the invoice date for invoices, credit memo date for credit memos, and debit memo date for debit memos.  - If this field is specified, the specified date is used as the billing document date.  - If this field is not specified, the date specified in the `targetDate` is used as the billing document date.   # noqa: E501

        :param document_date: The document_date of this PreviewSubscriptionRequest.  # noqa: E501
        :type: date
        """

        self._document_date = document_date

    @property
    def include_existing_draft_doc_items(self):
        """Gets the include_existing_draft_doc_items of this PreviewSubscriptionRequest.  # noqa: E501

        Specifies whether to include draft invoice items in subscription previews. Values are:  * `true` (default). Includes draft invoice items in the preview result. * `false`. Excludes draft invoice items in the preview result.  **Note:** This field is in Zuora REST API version control. Supported minor versions are 207.0 or later. To use this field in the method, you must set the **zuora-version** parameter to the minor version number in the request header. See [Zuora REST API Versions](https://www.zuora.com/developer/api-references/api/overview/#section/API-Versions) for more information.   # noqa: E501

        :return: The include_existing_draft_doc_items of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_existing_draft_doc_items

    @include_existing_draft_doc_items.setter
    def include_existing_draft_doc_items(self, include_existing_draft_doc_items):
        """Sets the include_existing_draft_doc_items of this PreviewSubscriptionRequest.

        Specifies whether to include draft invoice items in subscription previews. Values are:  * `true` (default). Includes draft invoice items in the preview result. * `false`. Excludes draft invoice items in the preview result.  **Note:** This field is in Zuora REST API version control. Supported minor versions are 207.0 or later. To use this field in the method, you must set the **zuora-version** parameter to the minor version number in the request header. See [Zuora REST API Versions](https://www.zuora.com/developer/api-references/api/overview/#section/API-Versions) for more information.   # noqa: E501

        :param include_existing_draft_doc_items: The include_existing_draft_doc_items of this PreviewSubscriptionRequest.  # noqa: E501
        :type: bool
        """

        self._include_existing_draft_doc_items = include_existing_draft_doc_items

    @property
    def include_existing_draft_invoice_items(self):
        """Gets the include_existing_draft_invoice_items of this PreviewSubscriptionRequest.  # noqa: E501

        Specifies whether to include draft invoice items in previews. Values are:  * `true` (default). Includes draft invoice items in the preview result. * `false`. Excludes draft invoice items in the preview result.  **Note:** This field is in Zuora REST API version control. Supported minor versions are 186.0, 187.0, 188.0, 189.0, 196.0, and 206.0. See [Zuora REST API Versions](https://www.zuora.com/developer/api-references/api/overview/#section/API-Versions) for more information.   # noqa: E501

        :return: The include_existing_draft_invoice_items of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_existing_draft_invoice_items

    @include_existing_draft_invoice_items.setter
    def include_existing_draft_invoice_items(self, include_existing_draft_invoice_items):
        """Sets the include_existing_draft_invoice_items of this PreviewSubscriptionRequest.

        Specifies whether to include draft invoice items in previews. Values are:  * `true` (default). Includes draft invoice items in the preview result. * `false`. Excludes draft invoice items in the preview result.  **Note:** This field is in Zuora REST API version control. Supported minor versions are 186.0, 187.0, 188.0, 189.0, 196.0, and 206.0. See [Zuora REST API Versions](https://www.zuora.com/developer/api-references/api/overview/#section/API-Versions) for more information.   # noqa: E501

        :param include_existing_draft_invoice_items: The include_existing_draft_invoice_items of this PreviewSubscriptionRequest.  # noqa: E501
        :type: bool
        """

        self._include_existing_draft_invoice_items = include_existing_draft_invoice_items

    @property
    def initial_term(self):
        """Gets the initial_term of this PreviewSubscriptionRequest.  # noqa: E501

        Duration of the first term of the subscription, in whole months. If `termType` is `TERMED`, then this field is required, and the value must be greater than `0`. If `termType` is `EVERGREEN`, this field is ignored.       # noqa: E501

        :return: The initial_term of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: int
        """
        return self._initial_term

    @initial_term.setter
    def initial_term(self, initial_term):
        """Sets the initial_term of this PreviewSubscriptionRequest.

        Duration of the first term of the subscription, in whole months. If `termType` is `TERMED`, then this field is required, and the value must be greater than `0`. If `termType` is `EVERGREEN`, this field is ignored.       # noqa: E501

        :param initial_term: The initial_term of this PreviewSubscriptionRequest.  # noqa: E501
        :type: int
        """

        self._initial_term = initial_term

    @property
    def initial_term_period_type(self):
        """Gets the initial_term_period_type of this PreviewSubscriptionRequest.  # noqa: E501

        The period type of the initial term.   Supported values are:  * `Month` * `Year` * `Day` * `Week`   The default period type is `Month`.    # noqa: E501

        :return: The initial_term_period_type of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: str
        """
        return self._initial_term_period_type

    @initial_term_period_type.setter
    def initial_term_period_type(self, initial_term_period_type):
        """Sets the initial_term_period_type of this PreviewSubscriptionRequest.

        The period type of the initial term.   Supported values are:  * `Month` * `Year` * `Day` * `Week`   The default period type is `Month`.    # noqa: E501

        :param initial_term_period_type: The initial_term_period_type of this PreviewSubscriptionRequest.  # noqa: E501
        :type: str
        """

        self._initial_term_period_type = initial_term_period_type

    @property
    def invoice_owner_account_key(self):
        """Gets the invoice_owner_account_key of this PreviewSubscriptionRequest.  # noqa: E501

        Invoice owner account number or ID.  **Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).   # noqa: E501

        :return: The invoice_owner_account_key of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: str
        """
        return self._invoice_owner_account_key

    @invoice_owner_account_key.setter
    def invoice_owner_account_key(self, invoice_owner_account_key):
        """Sets the invoice_owner_account_key of this PreviewSubscriptionRequest.

        Invoice owner account number or ID.  **Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).   # noqa: E501

        :param invoice_owner_account_key: The invoice_owner_account_key of this PreviewSubscriptionRequest.  # noqa: E501
        :type: str
        """

        self._invoice_owner_account_key = invoice_owner_account_key

    @property
    def invoice_target_date(self):
        """Gets the invoice_target_date of this PreviewSubscriptionRequest.  # noqa: E501

        Date through which to calculate charges if an invoice is generated, as yyyy-mm-dd. Default is current date.  **Note:** This field is in Zuora REST API version control. Supported minor versions are 186.0, 187.0, 188.0, 189.0, 196.0, and 206.0. See [Zuora REST API Versions](https://www.zuora.com/developer/api-references/api/overview/#section/API-Versions) for more information.   # noqa: E501

        :return: The invoice_target_date of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: date
        """
        return self._invoice_target_date

    @invoice_target_date.setter
    def invoice_target_date(self, invoice_target_date):
        """Sets the invoice_target_date of this PreviewSubscriptionRequest.

        Date through which to calculate charges if an invoice is generated, as yyyy-mm-dd. Default is current date.  **Note:** This field is in Zuora REST API version control. Supported minor versions are 186.0, 187.0, 188.0, 189.0, 196.0, and 206.0. See [Zuora REST API Versions](https://www.zuora.com/developer/api-references/api/overview/#section/API-Versions) for more information.   # noqa: E501

        :param invoice_target_date: The invoice_target_date of this PreviewSubscriptionRequest.  # noqa: E501
        :type: date
        """

        self._invoice_target_date = invoice_target_date

    @property
    def notes(self):
        """Gets the notes of this PreviewSubscriptionRequest.  # noqa: E501

        String of up to 500 characters.  # noqa: E501

        :return: The notes of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this PreviewSubscriptionRequest.

        String of up to 500 characters.  # noqa: E501

        :param notes: The notes of this PreviewSubscriptionRequest.  # noqa: E501
        :type: str
        """

        self._notes = notes

    @property
    def preview_account_info(self):
        """Gets the preview_account_info of this PreviewSubscriptionRequest.  # noqa: E501


        :return: The preview_account_info of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: PreviewSubscriptionAccountInfo
        """
        return self._preview_account_info

    @preview_account_info.setter
    def preview_account_info(self, preview_account_info):
        """Sets the preview_account_info of this PreviewSubscriptionRequest.


        :param preview_account_info: The preview_account_info of this PreviewSubscriptionRequest.  # noqa: E501
        :type: PreviewSubscriptionAccountInfo
        """

        self._preview_account_info = preview_account_info

    @property
    def preview_type(self):
        """Gets the preview_type of this PreviewSubscriptionRequest.  # noqa: E501

        The type of preview you will receive.   This field is in Zuora REST API version control. The supported values of this field depend on the REST API minor version you specified in the request header.   * If you do not specify the REST API minor version or specify the minor version number to one of following values in the request header:     * 186.0   * 187.0   * 188.0   * 189.0   * 196.0   * 206.0      The following values are supported in the **previewType** field:    * InvoiceItem   * ChargeMetrics   * InvoiceItemChargeMetrics      The default value is InvoiceItem.  * If you specify the REST API minor version to 207.0 or later in the request header, the following values are supported in the **previewType** field:    - LegalDoc   - ChargeMetrics   - LegalDocChargeMetrics    The default value is LegalDoc.  See [Zuora REST API Versions](https://www.zuora.com/developer/api-references/api/overview/#section/API-Versions) for more information.   # noqa: E501

        :return: The preview_type of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: str
        """
        return self._preview_type

    @preview_type.setter
    def preview_type(self, preview_type):
        """Sets the preview_type of this PreviewSubscriptionRequest.

        The type of preview you will receive.   This field is in Zuora REST API version control. The supported values of this field depend on the REST API minor version you specified in the request header.   * If you do not specify the REST API minor version or specify the minor version number to one of following values in the request header:     * 186.0   * 187.0   * 188.0   * 189.0   * 196.0   * 206.0      The following values are supported in the **previewType** field:    * InvoiceItem   * ChargeMetrics   * InvoiceItemChargeMetrics      The default value is InvoiceItem.  * If you specify the REST API minor version to 207.0 or later in the request header, the following values are supported in the **previewType** field:    - LegalDoc   - ChargeMetrics   - LegalDocChargeMetrics    The default value is LegalDoc.  See [Zuora REST API Versions](https://www.zuora.com/developer/api-references/api/overview/#section/API-Versions) for more information.   # noqa: E501

        :param preview_type: The preview_type of this PreviewSubscriptionRequest.  # noqa: E501
        :type: str
        """

        self._preview_type = preview_type

    @property
    def service_activation_date(self):
        """Gets the service_activation_date of this PreviewSubscriptionRequest.  # noqa: E501

        The date on which the services or products within a subscription have been activated and access has been provided to the customer, as yyyy-mm-dd.  Default value is dependent on the value of other fields. See **Notes** section for more details.   # noqa: E501

        :return: The service_activation_date of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: date
        """
        return self._service_activation_date

    @service_activation_date.setter
    def service_activation_date(self, service_activation_date):
        """Sets the service_activation_date of this PreviewSubscriptionRequest.

        The date on which the services or products within a subscription have been activated and access has been provided to the customer, as yyyy-mm-dd.  Default value is dependent on the value of other fields. See **Notes** section for more details.   # noqa: E501

        :param service_activation_date: The service_activation_date of this PreviewSubscriptionRequest.  # noqa: E501
        :type: date
        """

        self._service_activation_date = service_activation_date

    @property
    def subscribe_to_rate_plans(self):
        """Gets the subscribe_to_rate_plans of this PreviewSubscriptionRequest.  # noqa: E501

        Container for one or more rate plans for this subscription.   # noqa: E501

        :return: The subscribe_to_rate_plans of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: list[CreateSubscriptionRatePlan]
        """
        return self._subscribe_to_rate_plans

    @subscribe_to_rate_plans.setter
    def subscribe_to_rate_plans(self, subscribe_to_rate_plans):
        """Sets the subscribe_to_rate_plans of this PreviewSubscriptionRequest.

        Container for one or more rate plans for this subscription.   # noqa: E501

        :param subscribe_to_rate_plans: The subscribe_to_rate_plans of this PreviewSubscriptionRequest.  # noqa: E501
        :type: list[CreateSubscriptionRatePlan]
        """
        if subscribe_to_rate_plans is None:
            raise ValueError("Invalid value for `subscribe_to_rate_plans`, must not be `None`")  # noqa: E501

        self._subscribe_to_rate_plans = subscribe_to_rate_plans

    @property
    def target_date(self):
        """Gets the target_date of this PreviewSubscriptionRequest.  # noqa: E501

        Date through which to calculate charges if an invoice is generated, as yyyy-mm-dd. Default is current date.  **Note:** This field is in Zuora REST API version control. Supported minor versions are 207.0 or later. To use this field in the method, you must set the **zuora-version** parameter to the minor version number in the request header. See [Zuora REST API Versions](https://www.zuora.com/developer/api-references/api/overview/#section/API-Versions) for more information.   # noqa: E501

        :return: The target_date of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: date
        """
        return self._target_date

    @target_date.setter
    def target_date(self, target_date):
        """Sets the target_date of this PreviewSubscriptionRequest.

        Date through which to calculate charges if an invoice is generated, as yyyy-mm-dd. Default is current date.  **Note:** This field is in Zuora REST API version control. Supported minor versions are 207.0 or later. To use this field in the method, you must set the **zuora-version** parameter to the minor version number in the request header. See [Zuora REST API Versions](https://www.zuora.com/developer/api-references/api/overview/#section/API-Versions) for more information.   # noqa: E501

        :param target_date: The target_date of this PreviewSubscriptionRequest.  # noqa: E501
        :type: date
        """

        self._target_date = target_date

    @property
    def term_start_date(self):
        """Gets the term_start_date of this PreviewSubscriptionRequest.  # noqa: E501

        The date on which the subscription term begins, as yyyy-mm-dd. If this is a renewal subscription, this date is different from the subscription start date.   # noqa: E501

        :return: The term_start_date of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: date
        """
        return self._term_start_date

    @term_start_date.setter
    def term_start_date(self, term_start_date):
        """Sets the term_start_date of this PreviewSubscriptionRequest.

        The date on which the subscription term begins, as yyyy-mm-dd. If this is a renewal subscription, this date is different from the subscription start date.   # noqa: E501

        :param term_start_date: The term_start_date of this PreviewSubscriptionRequest.  # noqa: E501
        :type: date
        """

        self._term_start_date = term_start_date

    @property
    def term_type(self):
        """Gets the term_type of this PreviewSubscriptionRequest.  # noqa: E501

        Possible values are: `TERMED`, `EVERGREEN`.   # noqa: E501

        :return: The term_type of this PreviewSubscriptionRequest.  # noqa: E501
        :rtype: str
        """
        return self._term_type

    @term_type.setter
    def term_type(self, term_type):
        """Sets the term_type of this PreviewSubscriptionRequest.

        Possible values are: `TERMED`, `EVERGREEN`.   # noqa: E501

        :param term_type: The term_type of this PreviewSubscriptionRequest.  # noqa: E501
        :type: str
        """
        if term_type is None:
            raise ValueError("Invalid value for `term_type`, must not be `None`")  # noqa: E501

        self._term_type = term_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PreviewSubscriptionRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PreviewSubscriptionRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
