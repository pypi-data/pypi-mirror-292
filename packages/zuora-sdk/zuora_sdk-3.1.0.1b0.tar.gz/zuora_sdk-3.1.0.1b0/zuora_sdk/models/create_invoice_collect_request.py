# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CreateInvoiceCollectRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_key': 'str',
        'document_date': 'date',
        'invoice_date': 'date',
        'invoice_id': 'str',
        'invoice_number': 'str',
        'invoice_target_date': 'date',
        'payment_gateway': 'str',
        'target_date': 'date',
        'payment_method_id': 'str'
    }

    attribute_map = {
        'account_key': 'accountKey',
        'document_date': 'documentDate',
        'invoice_date': 'invoiceDate',
        'invoice_id': 'invoiceId',
        'invoice_number': 'invoiceNumber',
        'invoice_target_date': 'invoiceTargetDate',
        'payment_gateway': 'paymentGateway',
        'target_date': 'targetDate',
        'payment_method_id': 'paymentMethodId'
    }

    def __init__(self, account_key=None, document_date=None, invoice_date=None, invoice_id=None, invoice_number=None, invoice_target_date=None, payment_gateway=None, target_date=None, payment_method_id=None):  # noqa: E501
        """CreateInvoiceCollectRequest - a model defined in Swagger"""  # noqa: E501
        self._account_key = None
        self._document_date = None
        self._invoice_date = None
        self._invoice_id = None
        self._invoice_number = None
        self._invoice_target_date = None
        self._payment_gateway = None
        self._target_date = None
        self._payment_method_id = None
        self.discriminator = None
        self.account_key = account_key
        if document_date is not None:
            self.document_date = document_date
        if invoice_date is not None:
            self.invoice_date = invoice_date
        if invoice_id is not None:
            self.invoice_id = invoice_id
        if invoice_number is not None:
            self.invoice_number = invoice_number
        if invoice_target_date is not None:
            self.invoice_target_date = invoice_target_date
        if payment_gateway is not None:
            self.payment_gateway = payment_gateway
        if target_date is not None:
            self.target_date = target_date
        if payment_method_id is not None:
            self.payment_method_id = payment_method_id

    @property
    def account_key(self):
        """Gets the account_key of this CreateInvoiceCollectRequest.  # noqa: E501

        Customer account ID or account number.   # noqa: E501

        :return: The account_key of this CreateInvoiceCollectRequest.  # noqa: E501
        :rtype: str
        """
        return self._account_key

    @account_key.setter
    def account_key(self, account_key):
        """Sets the account_key of this CreateInvoiceCollectRequest.

        Customer account ID or account number.   # noqa: E501

        :param account_key: The account_key of this CreateInvoiceCollectRequest.  # noqa: E501
        :type: str
        """
        if account_key is None:
            raise ValueError("Invalid value for `account_key`, must not be `None`")  # noqa: E501

        self._account_key = account_key

    @property
    def document_date(self):
        """Gets the document_date of this CreateInvoiceCollectRequest.  # noqa: E501

        The date that should appear on the invoice and credit memo being generated, in `yyyy-mm-dd` format. If this field is omitted and `invoiceId` is not specified, the current date is used by default.    **Note:** The credit memo is only available if you have the Invoice Settlement feature enabled.   This field is in Zuora REST API version control. Supported minor versions are `215.0` and later. To use this field in the method, you must set the  `zuora-version` parameter to the minor version number in the request header.   # noqa: E501

        :return: The document_date of this CreateInvoiceCollectRequest.  # noqa: E501
        :rtype: date
        """
        return self._document_date

    @document_date.setter
    def document_date(self, document_date):
        """Sets the document_date of this CreateInvoiceCollectRequest.

        The date that should appear on the invoice and credit memo being generated, in `yyyy-mm-dd` format. If this field is omitted and `invoiceId` is not specified, the current date is used by default.    **Note:** The credit memo is only available if you have the Invoice Settlement feature enabled.   This field is in Zuora REST API version control. Supported minor versions are `215.0` and later. To use this field in the method, you must set the  `zuora-version` parameter to the minor version number in the request header.   # noqa: E501

        :param document_date: The document_date of this CreateInvoiceCollectRequest.  # noqa: E501
        :type: date
        """

        self._document_date = document_date

    @property
    def invoice_date(self):
        """Gets the invoice_date of this CreateInvoiceCollectRequest.  # noqa: E501

        **Note:** This field has been replaced by the `documentDate` field in Zuora REST API version `215.0` and later. The `invoiceDate` field is only available for backward compatibility.  The date that should appear on the invoice being generated, in `yyyy-mm-dd` format. If this field is omitted and `invoiceId` is not specified, the current date is used by default.   This field is in Zuora REST API version control. Supported minor versions are `214.0` and earlier.   # noqa: E501

        :return: The invoice_date of this CreateInvoiceCollectRequest.  # noqa: E501
        :rtype: date
        """
        return self._invoice_date

    @invoice_date.setter
    def invoice_date(self, invoice_date):
        """Sets the invoice_date of this CreateInvoiceCollectRequest.

        **Note:** This field has been replaced by the `documentDate` field in Zuora REST API version `215.0` and later. The `invoiceDate` field is only available for backward compatibility.  The date that should appear on the invoice being generated, in `yyyy-mm-dd` format. If this field is omitted and `invoiceId` is not specified, the current date is used by default.   This field is in Zuora REST API version control. Supported minor versions are `214.0` and earlier.   # noqa: E501

        :param invoice_date: The invoice_date of this CreateInvoiceCollectRequest.  # noqa: E501
        :type: date
        """

        self._invoice_date = invoice_date

    @property
    def invoice_id(self):
        """Gets the invoice_id of this CreateInvoiceCollectRequest.  # noqa: E501

        The ID of an existing invoice for which to collect payment using the account's default payment method. If this value is specified, no new invoice is generated, and the following fields are ignored:   - `invoiceDate` and `invoiceTargetDate` (if the Zuora REST API version is 214.0 or earlier)   - `documentDate` and `targetDate` (if the Zuora REST API version is 215.0 or later)   # noqa: E501

        :return: The invoice_id of this CreateInvoiceCollectRequest.  # noqa: E501
        :rtype: str
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this CreateInvoiceCollectRequest.

        The ID of an existing invoice for which to collect payment using the account's default payment method. If this value is specified, no new invoice is generated, and the following fields are ignored:   - `invoiceDate` and `invoiceTargetDate` (if the Zuora REST API version is 214.0 or earlier)   - `documentDate` and `targetDate` (if the Zuora REST API version is 215.0 or later)   # noqa: E501

        :param invoice_id: The invoice_id of this CreateInvoiceCollectRequest.  # noqa: E501
        :type: str
        """

        self._invoice_id = invoice_id

    @property
    def invoice_number(self):
        """Gets the invoice_number of this CreateInvoiceCollectRequest.  # noqa: E501

        The number of an existing invoice for which to collect payment using the account's default payment method. If this value is specified, no new invoice is generated, and the following fields are ignored:   - `invoiceDate` and `invoiceTargetDate` (if the Zuora REST API version is 214.0 or earlier)   - `documentDate` and `targetDate` (if the Zuora REST API version is 215.0 or later)   # noqa: E501

        :return: The invoice_number of this CreateInvoiceCollectRequest.  # noqa: E501
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this CreateInvoiceCollectRequest.

        The number of an existing invoice for which to collect payment using the account's default payment method. If this value is specified, no new invoice is generated, and the following fields are ignored:   - `invoiceDate` and `invoiceTargetDate` (if the Zuora REST API version is 214.0 or earlier)   - `documentDate` and `targetDate` (if the Zuora REST API version is 215.0 or later)   # noqa: E501

        :param invoice_number: The invoice_number of this CreateInvoiceCollectRequest.  # noqa: E501
        :type: str
        """

        self._invoice_number = invoice_number

    @property
    def invoice_target_date(self):
        """Gets the invoice_target_date of this CreateInvoiceCollectRequest.  # noqa: E501

        **Note:** This field has been replaced by the `targetDate` field in Zuora REST API version `215.0` and later. The `invoiceTargetDate` field is only available for backward compatibility.   The date through which to calculate charges on this account if an invoice is generated, in `yyyy-mm-dd` format. If this field is omitted and `invoiceId` is not specified, the current date is used by default.    This field is in Zuora REST API version control. Supported minor versions are `214.0` and earlier.     # noqa: E501

        :return: The invoice_target_date of this CreateInvoiceCollectRequest.  # noqa: E501
        :rtype: date
        """
        return self._invoice_target_date

    @invoice_target_date.setter
    def invoice_target_date(self, invoice_target_date):
        """Sets the invoice_target_date of this CreateInvoiceCollectRequest.

        **Note:** This field has been replaced by the `targetDate` field in Zuora REST API version `215.0` and later. The `invoiceTargetDate` field is only available for backward compatibility.   The date through which to calculate charges on this account if an invoice is generated, in `yyyy-mm-dd` format. If this field is omitted and `invoiceId` is not specified, the current date is used by default.    This field is in Zuora REST API version control. Supported minor versions are `214.0` and earlier.     # noqa: E501

        :param invoice_target_date: The invoice_target_date of this CreateInvoiceCollectRequest.  # noqa: E501
        :type: date
        """

        self._invoice_target_date = invoice_target_date

    @property
    def payment_gateway(self):
        """Gets the payment_gateway of this CreateInvoiceCollectRequest.  # noqa: E501

        The name of the gateway that will be used for the payment. Must be a valid gateway name and the gateway must support the specific payment method. If a value is not specified, the default gateway on the Account will be used.   # noqa: E501

        :return: The payment_gateway of this CreateInvoiceCollectRequest.  # noqa: E501
        :rtype: str
        """
        return self._payment_gateway

    @payment_gateway.setter
    def payment_gateway(self, payment_gateway):
        """Sets the payment_gateway of this CreateInvoiceCollectRequest.

        The name of the gateway that will be used for the payment. Must be a valid gateway name and the gateway must support the specific payment method. If a value is not specified, the default gateway on the Account will be used.   # noqa: E501

        :param payment_gateway: The payment_gateway of this CreateInvoiceCollectRequest.  # noqa: E501
        :type: str
        """

        self._payment_gateway = payment_gateway

    @property
    def target_date(self):
        """Gets the target_date of this CreateInvoiceCollectRequest.  # noqa: E501

        The date through which to calculate charges on this account if an invoice or a credit memo is generated,  in `yyyy-mm-dd` format. If this field is omitted and `invoiceId` is not specified, the current date is used by default.    **Note:** The credit memo is only available if you have the Invoice Settlement feature enabled.   This field is in Zuora REST API version control. Supported minor versions are `215.0` and later. To use this field in the method, you must set the  `zuora-version` parameter to the minor version number in the request header.   # noqa: E501

        :return: The target_date of this CreateInvoiceCollectRequest.  # noqa: E501
        :rtype: date
        """
        return self._target_date

    @target_date.setter
    def target_date(self, target_date):
        """Sets the target_date of this CreateInvoiceCollectRequest.

        The date through which to calculate charges on this account if an invoice or a credit memo is generated,  in `yyyy-mm-dd` format. If this field is omitted and `invoiceId` is not specified, the current date is used by default.    **Note:** The credit memo is only available if you have the Invoice Settlement feature enabled.   This field is in Zuora REST API version control. Supported minor versions are `215.0` and later. To use this field in the method, you must set the  `zuora-version` parameter to the minor version number in the request header.   # noqa: E501

        :param target_date: The target_date of this CreateInvoiceCollectRequest.  # noqa: E501
        :type: date
        """

        self._target_date = target_date

    @property
    def payment_method_id(self):
        """Gets the payment_method_id of this CreateInvoiceCollectRequest.  # noqa: E501

        paymentMethodId.   # noqa: E501

        :return: The payment_method_id of this CreateInvoiceCollectRequest.  # noqa: E501
        :rtype: str
        """
        return self._payment_method_id

    @payment_method_id.setter
    def payment_method_id(self, payment_method_id):
        """Sets the payment_method_id of this CreateInvoiceCollectRequest.

        paymentMethodId.   # noqa: E501

        :param payment_method_id: The payment_method_id of this CreateInvoiceCollectRequest.  # noqa: E501
        :type: str
        """

        self._payment_method_id = payment_method_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateInvoiceCollectRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateInvoiceCollectRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
