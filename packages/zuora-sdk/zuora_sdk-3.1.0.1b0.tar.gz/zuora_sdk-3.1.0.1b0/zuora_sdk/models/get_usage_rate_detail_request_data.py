# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetUsageRateDetailRequestData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'amount_without_tax': 'float',
        'charge_number': 'str',
        'invoice_id': 'str',
        'invoice_item_id': 'str',
        'invoice_number': 'str',
        'list_price': 'str',
        'quantity': 'str',
        'rate_detail': 'str',
        'service_period': 'str',
        'uom': 'str'
    }

    attribute_map = {
        'amount_without_tax': 'amountWithoutTax',
        'charge_number': 'chargeNumber',
        'invoice_id': 'invoiceId',
        'invoice_item_id': 'invoiceItemId',
        'invoice_number': 'invoiceNumber',
        'list_price': 'listPrice',
        'quantity': 'quantity',
        'rate_detail': 'rateDetail',
        'service_period': 'servicePeriod',
        'uom': 'uom'
    }

    def __init__(self, amount_without_tax=None, charge_number=None, invoice_id=None, invoice_item_id=None, invoice_number=None, list_price=None, quantity=None, rate_detail=None, service_period=None, uom=None):  # noqa: E501
        """GetUsageRateDetailRequestData - a model defined in Swagger"""  # noqa: E501
        self._amount_without_tax = None
        self._charge_number = None
        self._invoice_id = None
        self._invoice_item_id = None
        self._invoice_number = None
        self._list_price = None
        self._quantity = None
        self._rate_detail = None
        self._service_period = None
        self._uom = None
        self.discriminator = None
        if amount_without_tax is not None:
            self.amount_without_tax = amount_without_tax
        if charge_number is not None:
            self.charge_number = charge_number
        if invoice_id is not None:
            self.invoice_id = invoice_id
        if invoice_item_id is not None:
            self.invoice_item_id = invoice_item_id
        if invoice_number is not None:
            self.invoice_number = invoice_number
        if list_price is not None:
            self.list_price = list_price
        if quantity is not None:
            self.quantity = quantity
        if rate_detail is not None:
            self.rate_detail = rate_detail
        if service_period is not None:
            self.service_period = service_period
        if uom is not None:
            self.uom = uom

    @property
    def amount_without_tax(self):
        """Gets the amount_without_tax of this GetUsageRateDetailRequestData.  # noqa: E501

        The amount of the invoice item without tax.   # noqa: E501

        :return: The amount_without_tax of this GetUsageRateDetailRequestData.  # noqa: E501
        :rtype: float
        """
        return self._amount_without_tax

    @amount_without_tax.setter
    def amount_without_tax(self, amount_without_tax):
        """Sets the amount_without_tax of this GetUsageRateDetailRequestData.

        The amount of the invoice item without tax.   # noqa: E501

        :param amount_without_tax: The amount_without_tax of this GetUsageRateDetailRequestData.  # noqa: E501
        :type: float
        """

        self._amount_without_tax = amount_without_tax

    @property
    def charge_number(self):
        """Gets the charge_number of this GetUsageRateDetailRequestData.  # noqa: E501

        The unique number of the product rate plan charge associated with the invoice item.   # noqa: E501

        :return: The charge_number of this GetUsageRateDetailRequestData.  # noqa: E501
        :rtype: str
        """
        return self._charge_number

    @charge_number.setter
    def charge_number(self, charge_number):
        """Sets the charge_number of this GetUsageRateDetailRequestData.

        The unique number of the product rate plan charge associated with the invoice item.   # noqa: E501

        :param charge_number: The charge_number of this GetUsageRateDetailRequestData.  # noqa: E501
        :type: str
        """

        self._charge_number = charge_number

    @property
    def invoice_id(self):
        """Gets the invoice_id of this GetUsageRateDetailRequestData.  # noqa: E501

        The unique ID of the invoice.   # noqa: E501

        :return: The invoice_id of this GetUsageRateDetailRequestData.  # noqa: E501
        :rtype: str
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this GetUsageRateDetailRequestData.

        The unique ID of the invoice.   # noqa: E501

        :param invoice_id: The invoice_id of this GetUsageRateDetailRequestData.  # noqa: E501
        :type: str
        """

        self._invoice_id = invoice_id

    @property
    def invoice_item_id(self):
        """Gets the invoice_item_id of this GetUsageRateDetailRequestData.  # noqa: E501

        The unique ID of the invoice item.   # noqa: E501

        :return: The invoice_item_id of this GetUsageRateDetailRequestData.  # noqa: E501
        :rtype: str
        """
        return self._invoice_item_id

    @invoice_item_id.setter
    def invoice_item_id(self, invoice_item_id):
        """Sets the invoice_item_id of this GetUsageRateDetailRequestData.

        The unique ID of the invoice item.   # noqa: E501

        :param invoice_item_id: The invoice_item_id of this GetUsageRateDetailRequestData.  # noqa: E501
        :type: str
        """

        self._invoice_item_id = invoice_item_id

    @property
    def invoice_number(self):
        """Gets the invoice_number of this GetUsageRateDetailRequestData.  # noqa: E501

        The unique number of the invoice.   # noqa: E501

        :return: The invoice_number of this GetUsageRateDetailRequestData.  # noqa: E501
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this GetUsageRateDetailRequestData.

        The unique number of the invoice.   # noqa: E501

        :param invoice_number: The invoice_number of this GetUsageRateDetailRequestData.  # noqa: E501
        :type: str
        """

        self._invoice_number = invoice_number

    @property
    def list_price(self):
        """Gets the list_price of this GetUsageRateDetailRequestData.  # noqa: E501

        The list price of the product rate plan charge associated with the invoice item. For example, if the product rate plan charge uses the tiered charge model, its list price could be:   Tier / From / To / List Price / Price Format\\n1 / 0 / 9 / 0.00 / Per Unit\\n2 / 10 / 20 / 1.00 / Per Unit\\n3 / 21 / 30 / 2.00 / Flat Fee\\n4 / 31 /   / 3.00 / Per Unit\\n   # noqa: E501

        :return: The list_price of this GetUsageRateDetailRequestData.  # noqa: E501
        :rtype: str
        """
        return self._list_price

    @list_price.setter
    def list_price(self, list_price):
        """Sets the list_price of this GetUsageRateDetailRequestData.

        The list price of the product rate plan charge associated with the invoice item. For example, if the product rate plan charge uses the tiered charge model, its list price could be:   Tier / From / To / List Price / Price Format\\n1 / 0 / 9 / 0.00 / Per Unit\\n2 / 10 / 20 / 1.00 / Per Unit\\n3 / 21 / 30 / 2.00 / Flat Fee\\n4 / 31 /   / 3.00 / Per Unit\\n   # noqa: E501

        :param list_price: The list_price of this GetUsageRateDetailRequestData.  # noqa: E501
        :type: str
        """

        self._list_price = list_price

    @property
    def quantity(self):
        """Gets the quantity of this GetUsageRateDetailRequestData.  # noqa: E501

        The quantity of the invoice item.   # noqa: E501

        :return: The quantity of this GetUsageRateDetailRequestData.  # noqa: E501
        :rtype: str
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this GetUsageRateDetailRequestData.

        The quantity of the invoice item.   # noqa: E501

        :param quantity: The quantity of this GetUsageRateDetailRequestData.  # noqa: E501
        :type: str
        """

        self._quantity = quantity

    @property
    def rate_detail(self):
        """Gets the rate_detail of this GetUsageRateDetailRequestData.  # noqa: E501

        The rate detail of the invoice item. It shows how the total amount is calculated. For example, if the product rate plan charge uses the tiered charge model, the rate detail for the associated invoice item could be:   Tier 1: 0-9, 9 Each(s) x $0.00/Each = $0.00\\nTier 2: 10-20, 11 Each(s) x $1.00/Each = $11.00\\nTier 3: 21-30, $2.00 Flat Fee\\nTier 4: >=31, 15 Each(s) x $3.00/Each = $45.00\\nTotal = $58.00.   The rate detail retrieved from this REST API operation is the same as the [Rate Detail presented on PDF invoices](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/IA_Invoices/Create_a_custom_invoice_template/DD_Display_Usage_Charge_Breakdown#How_UsageSummary.RateDetail_is_displayed_on_invoices).    # noqa: E501

        :return: The rate_detail of this GetUsageRateDetailRequestData.  # noqa: E501
        :rtype: str
        """
        return self._rate_detail

    @rate_detail.setter
    def rate_detail(self, rate_detail):
        """Sets the rate_detail of this GetUsageRateDetailRequestData.

        The rate detail of the invoice item. It shows how the total amount is calculated. For example, if the product rate plan charge uses the tiered charge model, the rate detail for the associated invoice item could be:   Tier 1: 0-9, 9 Each(s) x $0.00/Each = $0.00\\nTier 2: 10-20, 11 Each(s) x $1.00/Each = $11.00\\nTier 3: 21-30, $2.00 Flat Fee\\nTier 4: >=31, 15 Each(s) x $3.00/Each = $45.00\\nTotal = $58.00.   The rate detail retrieved from this REST API operation is the same as the [Rate Detail presented on PDF invoices](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/IA_Invoices/Create_a_custom_invoice_template/DD_Display_Usage_Charge_Breakdown#How_UsageSummary.RateDetail_is_displayed_on_invoices).    # noqa: E501

        :param rate_detail: The rate_detail of this GetUsageRateDetailRequestData.  # noqa: E501
        :type: str
        """

        self._rate_detail = rate_detail

    @property
    def service_period(self):
        """Gets the service_period of this GetUsageRateDetailRequestData.  # noqa: E501

        The service period of the invoice item.   # noqa: E501

        :return: The service_period of this GetUsageRateDetailRequestData.  # noqa: E501
        :rtype: str
        """
        return self._service_period

    @service_period.setter
    def service_period(self, service_period):
        """Sets the service_period of this GetUsageRateDetailRequestData.

        The service period of the invoice item.   # noqa: E501

        :param service_period: The service_period of this GetUsageRateDetailRequestData.  # noqa: E501
        :type: str
        """

        self._service_period = service_period

    @property
    def uom(self):
        """Gets the uom of this GetUsageRateDetailRequestData.  # noqa: E501

        The unit of measurement of the invoice item.   # noqa: E501

        :return: The uom of this GetUsageRateDetailRequestData.  # noqa: E501
        :rtype: str
        """
        return self._uom

    @uom.setter
    def uom(self, uom):
        """Sets the uom of this GetUsageRateDetailRequestData.

        The unit of measurement of the invoice item.   # noqa: E501

        :param uom: The uom of this GetUsageRateDetailRequestData.  # noqa: E501
        :type: str
        """

        self._uom = uom

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetUsageRateDetailRequestData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetUsageRateDetailRequestData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
