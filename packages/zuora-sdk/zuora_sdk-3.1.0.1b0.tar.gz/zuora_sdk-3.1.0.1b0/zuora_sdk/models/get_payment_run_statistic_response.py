# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetPaymentRunStatisticResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'completed_on': 'datetime',
        'executed_on': 'datetime',
        'number': 'str',
        'number_of_errors': 'int',
        'number_of_payments': 'int',
        'status': 'str'
    }

    attribute_map = {
        'completed_on': 'completedOn',
        'executed_on': 'executedOn',
        'number': 'number',
        'number_of_errors': 'numberOfErrors',
        'number_of_payments': 'numberOfPayments',
        'status': 'status'
    }

    def __init__(self, completed_on=None, executed_on=None, number=None, number_of_errors=None, number_of_payments=None, status=None):  # noqa: E501
        """GetPaymentRunStatisticResponse - a model defined in Swagger"""  # noqa: E501
        self._completed_on = None
        self._executed_on = None
        self._number = None
        self._number_of_errors = None
        self._number_of_payments = None
        self._status = None
        self.discriminator = None
        if completed_on is not None:
            self.completed_on = completed_on
        if executed_on is not None:
            self.executed_on = executed_on
        if number is not None:
            self.number = number
        if number_of_errors is not None:
            self.number_of_errors = number_of_errors
        if number_of_payments is not None:
            self.number_of_payments = number_of_payments
        if status is not None:
            self.status = status

    @property
    def completed_on(self):
        """Gets the completed_on of this GetPaymentRunStatisticResponse.  # noqa: E501

        The date and time the payment run is completed.   # noqa: E501

        :return: The completed_on of this GetPaymentRunStatisticResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._completed_on

    @completed_on.setter
    def completed_on(self, completed_on):
        """Sets the completed_on of this GetPaymentRunStatisticResponse.

        The date and time the payment run is completed.   # noqa: E501

        :param completed_on: The completed_on of this GetPaymentRunStatisticResponse.  # noqa: E501
        :type: datetime
        """

        self._completed_on = completed_on

    @property
    def executed_on(self):
        """Gets the executed_on of this GetPaymentRunStatisticResponse.  # noqa: E501

        The date and time the payment run is executed.   # noqa: E501

        :return: The executed_on of this GetPaymentRunStatisticResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._executed_on

    @executed_on.setter
    def executed_on(self, executed_on):
        """Sets the executed_on of this GetPaymentRunStatisticResponse.

        The date and time the payment run is executed.   # noqa: E501

        :param executed_on: The executed_on of this GetPaymentRunStatisticResponse.  # noqa: E501
        :type: datetime
        """

        self._executed_on = executed_on

    @property
    def number(self):
        """Gets the number of this GetPaymentRunStatisticResponse.  # noqa: E501

        Payment run number.   # noqa: E501

        :return: The number of this GetPaymentRunStatisticResponse.  # noqa: E501
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this GetPaymentRunStatisticResponse.

        Payment run number.   # noqa: E501

        :param number: The number of this GetPaymentRunStatisticResponse.  # noqa: E501
        :type: str
        """

        self._number = number

    @property
    def number_of_errors(self):
        """Gets the number_of_errors of this GetPaymentRunStatisticResponse.  # noqa: E501

        Number of errored payments   # noqa: E501

        :return: The number_of_errors of this GetPaymentRunStatisticResponse.  # noqa: E501
        :rtype: int
        """
        return self._number_of_errors

    @number_of_errors.setter
    def number_of_errors(self, number_of_errors):
        """Sets the number_of_errors of this GetPaymentRunStatisticResponse.

        Number of errored payments   # noqa: E501

        :param number_of_errors: The number_of_errors of this GetPaymentRunStatisticResponse.  # noqa: E501
        :type: int
        """

        self._number_of_errors = number_of_errors

    @property
    def number_of_payments(self):
        """Gets the number_of_payments of this GetPaymentRunStatisticResponse.  # noqa: E501

        Number of processed payments.   # noqa: E501

        :return: The number_of_payments of this GetPaymentRunStatisticResponse.  # noqa: E501
        :rtype: int
        """
        return self._number_of_payments

    @number_of_payments.setter
    def number_of_payments(self, number_of_payments):
        """Sets the number_of_payments of this GetPaymentRunStatisticResponse.

        Number of processed payments.   # noqa: E501

        :param number_of_payments: The number_of_payments of this GetPaymentRunStatisticResponse.  # noqa: E501
        :type: int
        """

        self._number_of_payments = number_of_payments

    @property
    def status(self):
        """Gets the status of this GetPaymentRunStatisticResponse.  # noqa: E501

        Payment run status.   # noqa: E501

        :return: The status of this GetPaymentRunStatisticResponse.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetPaymentRunStatisticResponse.

        Payment run status.   # noqa: E501

        :param status: The status of this GetPaymentRunStatisticResponse.  # noqa: E501
        :type: str
        """

        self._status = status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetPaymentRunStatisticResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetPaymentRunStatisticResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
