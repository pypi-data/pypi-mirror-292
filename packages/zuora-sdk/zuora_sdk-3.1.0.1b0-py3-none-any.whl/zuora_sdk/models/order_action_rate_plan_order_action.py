# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class OrderActionRatePlanOrderAction(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'add_product': 'OrderActionRatePlanOverride',
        'custom_fields': 'dict(str, object)',
        'id': 'str',
        'remove_product': 'OrderActionRatePlanRemoveProduct',
        'type': 'OrderActionRatePlanOrderActionType',
        'update_product': 'OrderActionRatePlanUpdate'
    }

    attribute_map = {
        'add_product': 'addProduct',
        'custom_fields': 'customFields',
        'id': 'id',
        'remove_product': 'removeProduct',
        'type': 'type',
        'update_product': 'updateProduct'
    }

    def __init__(self, add_product=None, custom_fields=None, id=None, remove_product=None, type=None, update_product=None):  # noqa: E501
        """OrderActionRatePlanOrderAction - a model defined in Swagger"""  # noqa: E501
        self._add_product = None
        self._custom_fields = None
        self._id = None
        self._remove_product = None
        self._type = None
        self._update_product = None
        self.discriminator = None
        if add_product is not None:
            self.add_product = add_product
        if custom_fields is not None:
            self.custom_fields = custom_fields
        if id is not None:
            self.id = id
        if remove_product is not None:
            self.remove_product = remove_product
        if type is not None:
            self.type = type
        if update_product is not None:
            self.update_product = update_product

    @property
    def add_product(self):
        """Gets the add_product of this OrderActionRatePlanOrderAction.  # noqa: E501


        :return: The add_product of this OrderActionRatePlanOrderAction.  # noqa: E501
        :rtype: OrderActionRatePlanOverride
        """
        return self._add_product

    @add_product.setter
    def add_product(self, add_product):
        """Sets the add_product of this OrderActionRatePlanOrderAction.


        :param add_product: The add_product of this OrderActionRatePlanOrderAction.  # noqa: E501
        :type: OrderActionRatePlanOverride
        """

        self._add_product = add_product

    @property
    def custom_fields(self):
        """Gets the custom_fields of this OrderActionRatePlanOrderAction.  # noqa: E501

        Container for custom fields of an Order Action object.   # noqa: E501

        :return: The custom_fields of this OrderActionRatePlanOrderAction.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this OrderActionRatePlanOrderAction.

        Container for custom fields of an Order Action object.   # noqa: E501

        :param custom_fields: The custom_fields of this OrderActionRatePlanOrderAction.  # noqa: E501
        :type: dict(str, object)
        """

        self._custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this OrderActionRatePlanOrderAction.  # noqa: E501

        The Id of the order action processed in the order.  # noqa: E501

        :return: The id of this OrderActionRatePlanOrderAction.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderActionRatePlanOrderAction.

        The Id of the order action processed in the order.  # noqa: E501

        :param id: The id of this OrderActionRatePlanOrderAction.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def remove_product(self):
        """Gets the remove_product of this OrderActionRatePlanOrderAction.  # noqa: E501


        :return: The remove_product of this OrderActionRatePlanOrderAction.  # noqa: E501
        :rtype: OrderActionRatePlanRemoveProduct
        """
        return self._remove_product

    @remove_product.setter
    def remove_product(self, remove_product):
        """Sets the remove_product of this OrderActionRatePlanOrderAction.


        :param remove_product: The remove_product of this OrderActionRatePlanOrderAction.  # noqa: E501
        :type: OrderActionRatePlanRemoveProduct
        """

        self._remove_product = remove_product

    @property
    def type(self):
        """Gets the type of this OrderActionRatePlanOrderAction.  # noqa: E501


        :return: The type of this OrderActionRatePlanOrderAction.  # noqa: E501
        :rtype: OrderActionRatePlanOrderActionType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OrderActionRatePlanOrderAction.


        :param type: The type of this OrderActionRatePlanOrderAction.  # noqa: E501
        :type: OrderActionRatePlanOrderActionType
        """

        self._type = type

    @property
    def update_product(self):
        """Gets the update_product of this OrderActionRatePlanOrderAction.  # noqa: E501


        :return: The update_product of this OrderActionRatePlanOrderAction.  # noqa: E501
        :rtype: OrderActionRatePlanUpdate
        """
        return self._update_product

    @update_product.setter
    def update_product(self, update_product):
        """Sets the update_product of this OrderActionRatePlanOrderAction.


        :param update_product: The update_product of this OrderActionRatePlanOrderAction.  # noqa: E501
        :type: OrderActionRatePlanUpdate
        """

        self._update_product = update_product

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OrderActionRatePlanOrderAction, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrderActionRatePlanOrderAction):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
