# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CustomRates(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'currency': 'str',
        'custom_fx_rate': 'float',
        'rate_date': 'date'
    }

    attribute_map = {
        'currency': 'currency',
        'custom_fx_rate': 'customFxRate',
        'rate_date': 'rateDate'
    }

    def __init__(self, currency=None, custom_fx_rate=None, rate_date=None):  # noqa: E501
        """CustomRates - a model defined in Swagger"""  # noqa: E501
        self._currency = None
        self._custom_fx_rate = None
        self._rate_date = None
        self.discriminator = None
        self.currency = currency
        self.custom_fx_rate = custom_fx_rate
        if rate_date is not None:
            self.rate_date = rate_date

    @property
    def currency(self):
        """Gets the currency of this CustomRates.  # noqa: E501

        The currency code for either Reporting or Home currency.  **Note**: This field is only available if you set the `zuora-version` request header to `224.0` or later.   # noqa: E501

        :return: The currency of this CustomRates.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this CustomRates.

        The currency code for either Reporting or Home currency.  **Note**: This field is only available if you set the `zuora-version` request header to `224.0` or later.   # noqa: E501

        :param currency: The currency of this CustomRates.  # noqa: E501
        :type: str
        """
        if currency is None:
            raise ValueError("Invalid value for `currency`, must not be `None`")  # noqa: E501

        self._currency = currency

    @property
    def custom_fx_rate(self):
        """Gets the custom_fx_rate of this CustomRates.  # noqa: E501

        The Custom FX conversion rate between Home/Reporting and Transactional currency items.  **Note**: This field is only available if you set the `zuora-version` request header to `224.0` or later.   # noqa: E501

        :return: The custom_fx_rate of this CustomRates.  # noqa: E501
        :rtype: float
        """
        return self._custom_fx_rate

    @custom_fx_rate.setter
    def custom_fx_rate(self, custom_fx_rate):
        """Sets the custom_fx_rate of this CustomRates.

        The Custom FX conversion rate between Home/Reporting and Transactional currency items.  **Note**: This field is only available if you set the `zuora-version` request header to `224.0` or later.   # noqa: E501

        :param custom_fx_rate: The custom_fx_rate of this CustomRates.  # noqa: E501
        :type: float
        """
        if custom_fx_rate is None:
            raise ValueError("Invalid value for `custom_fx_rate`, must not be `None`")  # noqa: E501

        self._custom_fx_rate = custom_fx_rate

    @property
    def rate_date(self):
        """Gets the rate_date of this CustomRates.  # noqa: E501

        The date on which a particular currency rate is fixed or obtained on.  **Note**: This field is only available if you set the `zuora-version` request header to `224.0` or later.   # noqa: E501

        :return: The rate_date of this CustomRates.  # noqa: E501
        :rtype: date
        """
        return self._rate_date

    @rate_date.setter
    def rate_date(self, rate_date):
        """Sets the rate_date of this CustomRates.

        The date on which a particular currency rate is fixed or obtained on.  **Note**: This field is only available if you set the `zuora-version` request header to `224.0` or later.   # noqa: E501

        :param rate_date: The rate_date of this CustomRates.  # noqa: E501
        :type: date
        """

        self._rate_date = rate_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CustomRates, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CustomRates):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
