# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CreatePaymentMethodApplePayAdyen(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'apple_payment_data': 'str'
    }

    attribute_map = {
        'apple_payment_data': 'applePaymentData'
    }

    def __init__(self, apple_payment_data=None):  # noqa: E501
        """CreatePaymentMethodApplePayAdyen - a model defined in Swagger"""  # noqa: E501
        self._apple_payment_data = None
        self.discriminator = None
        if apple_payment_data is not None:
            self.apple_payment_data = apple_payment_data

    @property
    def apple_payment_data(self):
        """Gets the apple_payment_data of this CreatePaymentMethodApplePayAdyen.  # noqa: E501

        This field is specific for setting up Apple Pay for Adyen to include payload with Apple Pay token or Apple payment data. This information should be stringified. For more information, see [Set up Adyen Apple Pay](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/L_Payment_Methods/Payment_Method_Types/Apple_Pay_on_Web/Set_up_Adyen_Apple_Pay).   # noqa: E501

        :return: The apple_payment_data of this CreatePaymentMethodApplePayAdyen.  # noqa: E501
        :rtype: str
        """
        return self._apple_payment_data

    @apple_payment_data.setter
    def apple_payment_data(self, apple_payment_data):
        """Sets the apple_payment_data of this CreatePaymentMethodApplePayAdyen.

        This field is specific for setting up Apple Pay for Adyen to include payload with Apple Pay token or Apple payment data. This information should be stringified. For more information, see [Set up Adyen Apple Pay](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/L_Payment_Methods/Payment_Method_Types/Apple_Pay_on_Web/Set_up_Adyen_Apple_Pay).   # noqa: E501

        :param apple_payment_data: The apple_payment_data of this CreatePaymentMethodApplePayAdyen.  # noqa: E501
        :type: str
        """

        self._apple_payment_data = apple_payment_data

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreatePaymentMethodApplePayAdyen, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreatePaymentMethodApplePayAdyen):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
