# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetAccountPaymentMethodResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'default_payment_method_id': 'str',
        'payment_gateway': 'str',
        'returned_payment_method_type': 'list[GetPaymentMethodForAccountResponse]',
        'success': 'bool'
    }

    attribute_map = {
        'default_payment_method_id': 'defaultPaymentMethodId',
        'payment_gateway': 'paymentGateway',
        'returned_payment_method_type': 'returnedPaymentMethodType',
        'success': 'success'
    }

    def __init__(self, default_payment_method_id=None, payment_gateway=None, returned_payment_method_type=None, success=None):  # noqa: E501
        """GetAccountPaymentMethodResponse - a model defined in Swagger"""  # noqa: E501
        self._default_payment_method_id = None
        self._payment_gateway = None
        self._returned_payment_method_type = None
        self._success = None
        self.discriminator = None
        if default_payment_method_id is not None:
            self.default_payment_method_id = default_payment_method_id
        if payment_gateway is not None:
            self.payment_gateway = payment_gateway
        if returned_payment_method_type is not None:
            self.returned_payment_method_type = returned_payment_method_type
        if success is not None:
            self.success = success

    @property
    def default_payment_method_id(self):
        """Gets the default_payment_method_id of this GetAccountPaymentMethodResponse.  # noqa: E501

        ID of the default payment method for the account.   # noqa: E501

        :return: The default_payment_method_id of this GetAccountPaymentMethodResponse.  # noqa: E501
        :rtype: str
        """
        return self._default_payment_method_id

    @default_payment_method_id.setter
    def default_payment_method_id(self, default_payment_method_id):
        """Sets the default_payment_method_id of this GetAccountPaymentMethodResponse.

        ID of the default payment method for the account.   # noqa: E501

        :param default_payment_method_id: The default_payment_method_id of this GetAccountPaymentMethodResponse.  # noqa: E501
        :type: str
        """

        self._default_payment_method_id = default_payment_method_id

    @property
    def payment_gateway(self):
        """Gets the payment_gateway of this GetAccountPaymentMethodResponse.  # noqa: E501

        The name of the payment gateway instance. If null or left unassigned, the Account will use the Default Gateway.   # noqa: E501

        :return: The payment_gateway of this GetAccountPaymentMethodResponse.  # noqa: E501
        :rtype: str
        """
        return self._payment_gateway

    @payment_gateway.setter
    def payment_gateway(self, payment_gateway):
        """Sets the payment_gateway of this GetAccountPaymentMethodResponse.

        The name of the payment gateway instance. If null or left unassigned, the Account will use the Default Gateway.   # noqa: E501

        :param payment_gateway: The payment_gateway of this GetAccountPaymentMethodResponse.  # noqa: E501
        :type: str
        """

        self._payment_gateway = payment_gateway

    @property
    def returned_payment_method_type(self):
        """Gets the returned_payment_method_type of this GetAccountPaymentMethodResponse.  # noqa: E501

        Container for a specific type of payment method on the customer account. For example, `creditcard`, `debitcard`, `creditcardreferencetransaction`, `ach`, etc. Each `returnedPaymentMethodType` array contains one or more payment methods of that payment method type.  **Note:** The response could return more than one payment method type arrays. See **Response samples** as an example.   # noqa: E501

        :return: The returned_payment_method_type of this GetAccountPaymentMethodResponse.  # noqa: E501
        :rtype: list[GetPaymentMethodForAccountResponse]
        """
        return self._returned_payment_method_type

    @returned_payment_method_type.setter
    def returned_payment_method_type(self, returned_payment_method_type):
        """Sets the returned_payment_method_type of this GetAccountPaymentMethodResponse.

        Container for a specific type of payment method on the customer account. For example, `creditcard`, `debitcard`, `creditcardreferencetransaction`, `ach`, etc. Each `returnedPaymentMethodType` array contains one or more payment methods of that payment method type.  **Note:** The response could return more than one payment method type arrays. See **Response samples** as an example.   # noqa: E501

        :param returned_payment_method_type: The returned_payment_method_type of this GetAccountPaymentMethodResponse.  # noqa: E501
        :type: list[GetPaymentMethodForAccountResponse]
        """

        self._returned_payment_method_type = returned_payment_method_type

    @property
    def success(self):
        """Gets the success of this GetAccountPaymentMethodResponse.  # noqa: E501

        Returns `true` if the request was processed successfully.   # noqa: E501

        :return: The success of this GetAccountPaymentMethodResponse.  # noqa: E501
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this GetAccountPaymentMethodResponse.

        Returns `true` if the request was processed successfully.   # noqa: E501

        :param success: The success of this GetAccountPaymentMethodResponse.  # noqa: E501
        :type: bool
        """

        self._success = success

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetAccountPaymentMethodResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetAccountPaymentMethodResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
