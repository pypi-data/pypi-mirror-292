# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetBulkPdfGenerationJobResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'job_id': 'str',
        'job_name': 'str',
        'status': 'BulkPDFGenerationJobStatus',
        'step_status': 'BulkPDFGenerationStepStatus',
        'file_urls': 'list[str]',
        'failed_documents': 'list[DocumentIdList]',
        'created_on': 'str',
        'created_by': 'str',
        'success': 'bool'
    }

    attribute_map = {
        'job_id': 'jobId',
        'job_name': 'jobName',
        'status': 'status',
        'step_status': 'stepStatus',
        'file_urls': 'fileUrls',
        'failed_documents': 'failedDocuments',
        'created_on': 'createdOn',
        'created_by': 'createdBy',
        'success': 'success'
    }

    def __init__(self, job_id=None, job_name=None, status=None, step_status=None, file_urls=None, failed_documents=None, created_on=None, created_by=None, success=None):  # noqa: E501
        """GetBulkPdfGenerationJobResponse - a model defined in Swagger"""  # noqa: E501
        self._job_id = None
        self._job_name = None
        self._status = None
        self._step_status = None
        self._file_urls = None
        self._failed_documents = None
        self._created_on = None
        self._created_by = None
        self._success = None
        self.discriminator = None
        if job_id is not None:
            self.job_id = job_id
        if job_name is not None:
            self.job_name = job_name
        if status is not None:
            self.status = status
        if step_status is not None:
            self.step_status = step_status
        if file_urls is not None:
            self.file_urls = file_urls
        if failed_documents is not None:
            self.failed_documents = failed_documents
        if created_on is not None:
            self.created_on = created_on
        if created_by is not None:
            self.created_by = created_by
        if success is not None:
            self.success = success

    @property
    def job_id(self):
        """Gets the job_id of this GetBulkPdfGenerationJobResponse.  # noqa: E501

        Unique Id for the Triggered Job  # noqa: E501

        :return: The job_id of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this GetBulkPdfGenerationJobResponse.

        Unique Id for the Triggered Job  # noqa: E501

        :param job_id: The job_id of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :type: str
        """

        self._job_id = job_id

    @property
    def job_name(self):
        """Gets the job_name of this GetBulkPdfGenerationJobResponse.  # noqa: E501

        Name of the Job provided during the POST request of the Job  # noqa: E501

        :return: The job_name of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this GetBulkPdfGenerationJobResponse.

        Name of the Job provided during the POST request of the Job  # noqa: E501

        :param job_name: The job_name of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :type: str
        """

        self._job_name = job_name

    @property
    def status(self):
        """Gets the status of this GetBulkPdfGenerationJobResponse.  # noqa: E501


        :return: The status of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :rtype: BulkPDFGenerationJobStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetBulkPdfGenerationJobResponse.


        :param status: The status of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :type: BulkPDFGenerationJobStatus
        """

        self._status = status

    @property
    def step_status(self):
        """Gets the step_status of this GetBulkPdfGenerationJobResponse.  # noqa: E501


        :return: The step_status of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :rtype: BulkPDFGenerationStepStatus
        """
        return self._step_status

    @step_status.setter
    def step_status(self, step_status):
        """Sets the step_status of this GetBulkPdfGenerationJobResponse.


        :param step_status: The step_status of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :type: BulkPDFGenerationStepStatus
        """

        self._step_status = step_status

    @property
    def file_urls(self):
        """Gets the file_urls of this GetBulkPdfGenerationJobResponse.  # noqa: E501

        Collection of S3 Pre-Signed URL(s) that can be downloaded  # noqa: E501

        :return: The file_urls of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._file_urls

    @file_urls.setter
    def file_urls(self, file_urls):
        """Sets the file_urls of this GetBulkPdfGenerationJobResponse.

        Collection of S3 Pre-Signed URL(s) that can be downloaded  # noqa: E501

        :param file_urls: The file_urls of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :type: list[str]
        """

        self._file_urls = file_urls

    @property
    def failed_documents(self):
        """Gets the failed_documents of this GetBulkPdfGenerationJobResponse.  # noqa: E501

        Array of Objects where each object contains billing document type and their ids which failed to execute  # noqa: E501

        :return: The failed_documents of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :rtype: list[DocumentIdList]
        """
        return self._failed_documents

    @failed_documents.setter
    def failed_documents(self, failed_documents):
        """Sets the failed_documents of this GetBulkPdfGenerationJobResponse.

        Array of Objects where each object contains billing document type and their ids which failed to execute  # noqa: E501

        :param failed_documents: The failed_documents of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :type: list[DocumentIdList]
        """

        self._failed_documents = failed_documents

    @property
    def created_on(self):
        """Gets the created_on of this GetBulkPdfGenerationJobResponse.  # noqa: E501

        Job Created Time  # noqa: E501

        :return: The created_on of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :rtype: str
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this GetBulkPdfGenerationJobResponse.

        Job Created Time  # noqa: E501

        :param created_on: The created_on of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :type: str
        """

        self._created_on = created_on

    @property
    def created_by(self):
        """Gets the created_by of this GetBulkPdfGenerationJobResponse.  # noqa: E501

        Id of the user who created the job  # noqa: E501

        :return: The created_by of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this GetBulkPdfGenerationJobResponse.

        Id of the user who created the job  # noqa: E501

        :param created_by: The created_by of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def success(self):
        """Gets the success of this GetBulkPdfGenerationJobResponse.  # noqa: E501

        Returns `true` if the request was processed successfully.  # noqa: E501

        :return: The success of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this GetBulkPdfGenerationJobResponse.

        Returns `true` if the request was processed successfully.  # noqa: E501

        :param success: The success of this GetBulkPdfGenerationJobResponse.  # noqa: E501
        :type: bool
        """

        self._success = success

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetBulkPdfGenerationJobResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetBulkPdfGenerationJobResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
