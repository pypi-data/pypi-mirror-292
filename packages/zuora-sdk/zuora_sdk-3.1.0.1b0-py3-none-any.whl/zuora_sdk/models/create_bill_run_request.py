# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CreateBillRunRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'batches': 'list[str]',
        'bill_cycle_day': 'str',
        'bill_run_filters': 'list[BillRunFilter]',
        'bill_run_type': 'BillRunType',
        'charge_type_to_exclude': 'list[ChargeType]',
        'auto_email': 'bool',
        'auto_post': 'bool',
        'auto_renewal': 'bool',
        'no_email_for_zero_amount_invoice': 'bool',
        'schedule': 'BillRunSchedule',
        'invoice_date': 'date',
        'invoice_date_month_offset': 'int',
        'invoice_date_day_of_month': 'int',
        'target_date': 'date',
        'target_date_month_offset': 'int',
        'target_date_day_of_month': 'int',
        'organization_labels': 'list[OrganizationLabel]'
    }

    attribute_map = {
        'name': 'name',
        'batches': 'batches',
        'bill_cycle_day': 'billCycleDay',
        'bill_run_filters': 'billRunFilters',
        'bill_run_type': 'billRunType',
        'charge_type_to_exclude': 'chargeTypeToExclude',
        'auto_email': 'autoEmail',
        'auto_post': 'autoPost',
        'auto_renewal': 'autoRenewal',
        'no_email_for_zero_amount_invoice': 'noEmailForZeroAmountInvoice',
        'schedule': 'schedule',
        'invoice_date': 'invoiceDate',
        'invoice_date_month_offset': 'invoiceDateMonthOffset',
        'invoice_date_day_of_month': 'invoiceDateDayOfMonth',
        'target_date': 'targetDate',
        'target_date_month_offset': 'targetDateMonthOffset',
        'target_date_day_of_month': 'targetDateDayOfMonth',
        'organization_labels': 'organizationLabels'
    }

    def __init__(self, name=None, batches=None, bill_cycle_day=None, bill_run_filters=None, bill_run_type=None, charge_type_to_exclude=None, auto_email=False, auto_post=False, auto_renewal=False, no_email_for_zero_amount_invoice=False, schedule=None, invoice_date=None, invoice_date_month_offset=None, invoice_date_day_of_month=None, target_date=None, target_date_month_offset=None, target_date_day_of_month=None, organization_labels=None):  # noqa: E501
        """CreateBillRunRequest - a model defined in Swagger"""  # noqa: E501
        self._name = None
        self._batches = None
        self._bill_cycle_day = None
        self._bill_run_filters = None
        self._bill_run_type = None
        self._charge_type_to_exclude = None
        self._auto_email = None
        self._auto_post = None
        self._auto_renewal = None
        self._no_email_for_zero_amount_invoice = None
        self._schedule = None
        self._invoice_date = None
        self._invoice_date_month_offset = None
        self._invoice_date_day_of_month = None
        self._target_date = None
        self._target_date_month_offset = None
        self._target_date_day_of_month = None
        self._organization_labels = None
        self.discriminator = None
        if name is not None:
            self.name = name
        if batches is not None:
            self.batches = batches
        if bill_cycle_day is not None:
            self.bill_cycle_day = bill_cycle_day
        if bill_run_filters is not None:
            self.bill_run_filters = bill_run_filters
        if bill_run_type is not None:
            self.bill_run_type = bill_run_type
        if charge_type_to_exclude is not None:
            self.charge_type_to_exclude = charge_type_to_exclude
        if auto_email is not None:
            self.auto_email = auto_email
        if auto_post is not None:
            self.auto_post = auto_post
        if auto_renewal is not None:
            self.auto_renewal = auto_renewal
        if no_email_for_zero_amount_invoice is not None:
            self.no_email_for_zero_amount_invoice = no_email_for_zero_amount_invoice
        if schedule is not None:
            self.schedule = schedule
        if invoice_date is not None:
            self.invoice_date = invoice_date
        if invoice_date_month_offset is not None:
            self.invoice_date_month_offset = invoice_date_month_offset
        if invoice_date_day_of_month is not None:
            self.invoice_date_day_of_month = invoice_date_day_of_month
        if target_date is not None:
            self.target_date = target_date
        if target_date_month_offset is not None:
            self.target_date_month_offset = target_date_month_offset
        if target_date_day_of_month is not None:
            self.target_date_day_of_month = target_date_day_of_month
        if organization_labels is not None:
            self.organization_labels = organization_labels

    @property
    def name(self):
        """Gets the name of this CreateBillRunRequest.  # noqa: E501

        The name of the bill run.   # noqa: E501

        :return: The name of this CreateBillRunRequest.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateBillRunRequest.

        The name of the bill run.   # noqa: E501

        :param name: The name of this CreateBillRunRequest.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def batches(self):
        """Gets the batches of this CreateBillRunRequest.  # noqa: E501

        The batch of accounts for this bill run.   You can only specify either this field or the `billRunFilters` field.  **Values:** `AllBatches` or an array of `Batch*n*` where *n* is one of numbers 1 - 50, for example, `Batch7`.   # noqa: E501

        :return: The batches of this CreateBillRunRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._batches

    @batches.setter
    def batches(self, batches):
        """Sets the batches of this CreateBillRunRequest.

        The batch of accounts for this bill run.   You can only specify either this field or the `billRunFilters` field.  **Values:** `AllBatches` or an array of `Batch*n*` where *n* is one of numbers 1 - 50, for example, `Batch7`.   # noqa: E501

        :param batches: The batches of this CreateBillRunRequest.  # noqa: E501
        :type: list[str]
        """

        self._batches = batches

    @property
    def bill_cycle_day(self):
        """Gets the bill_cycle_day of this CreateBillRunRequest.  # noqa: E501

        The day of the bill cycle. This field is only valid if the `batches` field is specified.  **Values:**  - `AllBillCycleDays` or one of numbers 1 - 31 for an ad-hoc bill run - `AllBillCycleDays`, one of numbers 1 - 31, or `AsRunDay` for a scheduled bill run   # noqa: E501

        :return: The bill_cycle_day of this CreateBillRunRequest.  # noqa: E501
        :rtype: str
        """
        return self._bill_cycle_day

    @bill_cycle_day.setter
    def bill_cycle_day(self, bill_cycle_day):
        """Sets the bill_cycle_day of this CreateBillRunRequest.

        The day of the bill cycle. This field is only valid if the `batches` field is specified.  **Values:**  - `AllBillCycleDays` or one of numbers 1 - 31 for an ad-hoc bill run - `AllBillCycleDays`, one of numbers 1 - 31, or `AsRunDay` for a scheduled bill run   # noqa: E501

        :param bill_cycle_day: The bill_cycle_day of this CreateBillRunRequest.  # noqa: E501
        :type: str
        """

        self._bill_cycle_day = bill_cycle_day

    @property
    def bill_run_filters(self):
        """Gets the bill_run_filters of this CreateBillRunRequest.  # noqa: E501

        The target account or subscriptions for this bill run. You can only specify either this field or the `batches` field.   # noqa: E501

        :return: The bill_run_filters of this CreateBillRunRequest.  # noqa: E501
        :rtype: list[BillRunFilter]
        """
        return self._bill_run_filters

    @bill_run_filters.setter
    def bill_run_filters(self, bill_run_filters):
        """Sets the bill_run_filters of this CreateBillRunRequest.

        The target account or subscriptions for this bill run. You can only specify either this field or the `batches` field.   # noqa: E501

        :param bill_run_filters: The bill_run_filters of this CreateBillRunRequest.  # noqa: E501
        :type: list[BillRunFilter]
        """

        self._bill_run_filters = bill_run_filters

    @property
    def bill_run_type(self):
        """Gets the bill_run_type of this CreateBillRunRequest.  # noqa: E501


        :return: The bill_run_type of this CreateBillRunRequest.  # noqa: E501
        :rtype: BillRunType
        """
        return self._bill_run_type

    @bill_run_type.setter
    def bill_run_type(self, bill_run_type):
        """Sets the bill_run_type of this CreateBillRunRequest.


        :param bill_run_type: The bill_run_type of this CreateBillRunRequest.  # noqa: E501
        :type: BillRunType
        """

        self._bill_run_type = bill_run_type

    @property
    def charge_type_to_exclude(self):
        """Gets the charge_type_to_exclude of this CreateBillRunRequest.  # noqa: E501

        The types of the charges to be excluded from the generation of billing documents. You can specify at most two charge types in the array.   # noqa: E501

        :return: The charge_type_to_exclude of this CreateBillRunRequest.  # noqa: E501
        :rtype: list[ChargeType]
        """
        return self._charge_type_to_exclude

    @charge_type_to_exclude.setter
    def charge_type_to_exclude(self, charge_type_to_exclude):
        """Sets the charge_type_to_exclude of this CreateBillRunRequest.

        The types of the charges to be excluded from the generation of billing documents. You can specify at most two charge types in the array.   # noqa: E501

        :param charge_type_to_exclude: The charge_type_to_exclude of this CreateBillRunRequest.  # noqa: E501
        :type: list[ChargeType]
        """

        self._charge_type_to_exclude = charge_type_to_exclude

    @property
    def auto_email(self):
        """Gets the auto_email of this CreateBillRunRequest.  # noqa: E501

        Whether to automatically send emails after Auto-Post is complete.  **Note:** To use this field, you must first set the <a href=\"https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Billing_Rules\" target=\"_blank\">Support Bill Run Auto-Post?</a> billing rule to **Yes** through the Zuora UI.   # noqa: E501

        :return: The auto_email of this CreateBillRunRequest.  # noqa: E501
        :rtype: bool
        """
        return self._auto_email

    @auto_email.setter
    def auto_email(self, auto_email):
        """Sets the auto_email of this CreateBillRunRequest.

        Whether to automatically send emails after Auto-Post is complete.  **Note:** To use this field, you must first set the <a href=\"https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Billing_Rules\" target=\"_blank\">Support Bill Run Auto-Post?</a> billing rule to **Yes** through the Zuora UI.   # noqa: E501

        :param auto_email: The auto_email of this CreateBillRunRequest.  # noqa: E501
        :type: bool
        """

        self._auto_email = auto_email

    @property
    def auto_post(self):
        """Gets the auto_post of this CreateBillRunRequest.  # noqa: E501

        Whether to automatically post the bill run after the bill run is created.  **Note:** To use this field, you must first set the <a href=\"https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Billing_Rules\" target=\"_blank\">Support Bill Run Auto-Post?</a> billing rule to **Yes** through the Zuora UI.   # noqa: E501

        :return: The auto_post of this CreateBillRunRequest.  # noqa: E501
        :rtype: bool
        """
        return self._auto_post

    @auto_post.setter
    def auto_post(self, auto_post):
        """Sets the auto_post of this CreateBillRunRequest.

        Whether to automatically post the bill run after the bill run is created.  **Note:** To use this field, you must first set the <a href=\"https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Billing_Rules\" target=\"_blank\">Support Bill Run Auto-Post?</a> billing rule to **Yes** through the Zuora UI.   # noqa: E501

        :param auto_post: The auto_post of this CreateBillRunRequest.  # noqa: E501
        :type: bool
        """

        self._auto_post = auto_post

    @property
    def auto_renewal(self):
        """Gets the auto_renewal of this CreateBillRunRequest.  # noqa: E501

        Whether to automatically renew auto-renew subscriptions that are up for renewal.   # noqa: E501

        :return: The auto_renewal of this CreateBillRunRequest.  # noqa: E501
        :rtype: bool
        """
        return self._auto_renewal

    @auto_renewal.setter
    def auto_renewal(self, auto_renewal):
        """Sets the auto_renewal of this CreateBillRunRequest.

        Whether to automatically renew auto-renew subscriptions that are up for renewal.   # noqa: E501

        :param auto_renewal: The auto_renewal of this CreateBillRunRequest.  # noqa: E501
        :type: bool
        """

        self._auto_renewal = auto_renewal

    @property
    def no_email_for_zero_amount_invoice(self):
        """Gets the no_email_for_zero_amount_invoice of this CreateBillRunRequest.  # noqa: E501

        Whether to suppress emails for invoices with zero total amount generated in this bill run after the bill run is complete.   It is best practice to not send emails for invoices with zero amount.   # noqa: E501

        :return: The no_email_for_zero_amount_invoice of this CreateBillRunRequest.  # noqa: E501
        :rtype: bool
        """
        return self._no_email_for_zero_amount_invoice

    @no_email_for_zero_amount_invoice.setter
    def no_email_for_zero_amount_invoice(self, no_email_for_zero_amount_invoice):
        """Sets the no_email_for_zero_amount_invoice of this CreateBillRunRequest.

        Whether to suppress emails for invoices with zero total amount generated in this bill run after the bill run is complete.   It is best practice to not send emails for invoices with zero amount.   # noqa: E501

        :param no_email_for_zero_amount_invoice: The no_email_for_zero_amount_invoice of this CreateBillRunRequest.  # noqa: E501
        :type: bool
        """

        self._no_email_for_zero_amount_invoice = no_email_for_zero_amount_invoice

    @property
    def schedule(self):
        """Gets the schedule of this CreateBillRunRequest.  # noqa: E501


        :return: The schedule of this CreateBillRunRequest.  # noqa: E501
        :rtype: BillRunSchedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this CreateBillRunRequest.


        :param schedule: The schedule of this CreateBillRunRequest.  # noqa: E501
        :type: BillRunSchedule
        """

        self._schedule = schedule

    @property
    def invoice_date(self):
        """Gets the invoice_date of this CreateBillRunRequest.  # noqa: E501

        The invoice date for the bill run.   - When creating an ad-hoc bill run, if you do not specify any value for this field, the default value is the current date. - When creating a scheduled bill run, if you do not specify any value for this field, the invoice date is the value of the `repeatFrom` field.   # noqa: E501

        :return: The invoice_date of this CreateBillRunRequest.  # noqa: E501
        :rtype: date
        """
        return self._invoice_date

    @invoice_date.setter
    def invoice_date(self, invoice_date):
        """Sets the invoice_date of this CreateBillRunRequest.

        The invoice date for the bill run.   - When creating an ad-hoc bill run, if you do not specify any value for this field, the default value is the current date. - When creating a scheduled bill run, if you do not specify any value for this field, the invoice date is the value of the `repeatFrom` field.   # noqa: E501

        :param invoice_date: The invoice_date of this CreateBillRunRequest.  # noqa: E501
        :type: date
        """

        self._invoice_date = invoice_date

    @property
    def invoice_date_month_offset(self):
        """Gets the invoice_date_month_offset of this CreateBillRunRequest.  # noqa: E501

        The month offset of invoice date for this bill run based on run date, only valid for monthly scheduled bill runs. invoiceDateOffset and invoiceDateMonthOffset/invoiceDateDayOfMonth are mutually exclusive. invoiceDateMonthOffset and invoiceDateDayOfMonth coexist.   # noqa: E501

        :return: The invoice_date_month_offset of this CreateBillRunRequest.  # noqa: E501
        :rtype: int
        """
        return self._invoice_date_month_offset

    @invoice_date_month_offset.setter
    def invoice_date_month_offset(self, invoice_date_month_offset):
        """Sets the invoice_date_month_offset of this CreateBillRunRequest.

        The month offset of invoice date for this bill run based on run date, only valid for monthly scheduled bill runs. invoiceDateOffset and invoiceDateMonthOffset/invoiceDateDayOfMonth are mutually exclusive. invoiceDateMonthOffset and invoiceDateDayOfMonth coexist.   # noqa: E501

        :param invoice_date_month_offset: The invoice_date_month_offset of this CreateBillRunRequest.  # noqa: E501
        :type: int
        """

        self._invoice_date_month_offset = invoice_date_month_offset

    @property
    def invoice_date_day_of_month(self):
        """Gets the invoice_date_day_of_month of this CreateBillRunRequest.  # noqa: E501

        The day of month of invoice date for this bill run, only valid for monthly scheduled bill runs. Specify any day of the month (1-31, where 31 = end-of-month). invoiceDateOffset and invoiceDateMonthOffset/invoiceDateDayOfMonth are mutually exclusive. invoiceDateMonthOffset and invoiceDateDayOfMonth coexist.   # noqa: E501

        :return: The invoice_date_day_of_month of this CreateBillRunRequest.  # noqa: E501
        :rtype: int
        """
        return self._invoice_date_day_of_month

    @invoice_date_day_of_month.setter
    def invoice_date_day_of_month(self, invoice_date_day_of_month):
        """Sets the invoice_date_day_of_month of this CreateBillRunRequest.

        The day of month of invoice date for this bill run, only valid for monthly scheduled bill runs. Specify any day of the month (1-31, where 31 = end-of-month). invoiceDateOffset and invoiceDateMonthOffset/invoiceDateDayOfMonth are mutually exclusive. invoiceDateMonthOffset and invoiceDateDayOfMonth coexist.   # noqa: E501

        :param invoice_date_day_of_month: The invoice_date_day_of_month of this CreateBillRunRequest.  # noqa: E501
        :type: int
        """

        self._invoice_date_day_of_month = invoice_date_day_of_month

    @property
    def target_date(self):
        """Gets the target_date of this CreateBillRunRequest.  # noqa: E501

        The target date for this bill run.   - You must specify this field when creating an ad-hoc bill run. - For scheduled bill runs, if you do not specify any value for this field, the target date is the value of the `repeatFrom` field.   # noqa: E501

        :return: The target_date of this CreateBillRunRequest.  # noqa: E501
        :rtype: date
        """
        return self._target_date

    @target_date.setter
    def target_date(self, target_date):
        """Sets the target_date of this CreateBillRunRequest.

        The target date for this bill run.   - You must specify this field when creating an ad-hoc bill run. - For scheduled bill runs, if you do not specify any value for this field, the target date is the value of the `repeatFrom` field.   # noqa: E501

        :param target_date: The target_date of this CreateBillRunRequest.  # noqa: E501
        :type: date
        """

        self._target_date = target_date

    @property
    def target_date_month_offset(self):
        """Gets the target_date_month_offset of this CreateBillRunRequest.  # noqa: E501

        The month offset of target date for this bill run based on run date, only valid for monthly scheduled bill runs. targetDateOffset and targetDateMonthOffset/targetDateDayOfMonth are mutually exclusive. targetDateMonthOffset and targetDateDayOfMonth coexist.   # noqa: E501

        :return: The target_date_month_offset of this CreateBillRunRequest.  # noqa: E501
        :rtype: int
        """
        return self._target_date_month_offset

    @target_date_month_offset.setter
    def target_date_month_offset(self, target_date_month_offset):
        """Sets the target_date_month_offset of this CreateBillRunRequest.

        The month offset of target date for this bill run based on run date, only valid for monthly scheduled bill runs. targetDateOffset and targetDateMonthOffset/targetDateDayOfMonth are mutually exclusive. targetDateMonthOffset and targetDateDayOfMonth coexist.   # noqa: E501

        :param target_date_month_offset: The target_date_month_offset of this CreateBillRunRequest.  # noqa: E501
        :type: int
        """

        self._target_date_month_offset = target_date_month_offset

    @property
    def target_date_day_of_month(self):
        """Gets the target_date_day_of_month of this CreateBillRunRequest.  # noqa: E501

        The day of month of target date for this bill run, only valid for monthly scheduled bill runs. Specify any day of the month (1-31, where 31 = end-of-month). targetDateOffset and targetDateMonthOffset/targetDateDayOfMonth are mutually exclusive. targetDateMonthOffset and targetDateDayOfMonth coexist.   # noqa: E501

        :return: The target_date_day_of_month of this CreateBillRunRequest.  # noqa: E501
        :rtype: int
        """
        return self._target_date_day_of_month

    @target_date_day_of_month.setter
    def target_date_day_of_month(self, target_date_day_of_month):
        """Sets the target_date_day_of_month of this CreateBillRunRequest.

        The day of month of target date for this bill run, only valid for monthly scheduled bill runs. Specify any day of the month (1-31, where 31 = end-of-month). targetDateOffset and targetDateMonthOffset/targetDateDayOfMonth are mutually exclusive. targetDateMonthOffset and targetDateDayOfMonth coexist.   # noqa: E501

        :param target_date_day_of_month: The target_date_day_of_month of this CreateBillRunRequest.  # noqa: E501
        :type: int
        """

        self._target_date_day_of_month = target_date_day_of_month

    @property
    def organization_labels(self):
        """Gets the organization_labels of this CreateBillRunRequest.  # noqa: E501

        The organization(s) that the bill run is created for.  For each item in the array, either the `organizationId` or the `organizationName` field is required.  This field is only required when you have already turned on Multi-Org feature.   # noqa: E501

        :return: The organization_labels of this CreateBillRunRequest.  # noqa: E501
        :rtype: list[OrganizationLabel]
        """
        return self._organization_labels

    @organization_labels.setter
    def organization_labels(self, organization_labels):
        """Sets the organization_labels of this CreateBillRunRequest.

        The organization(s) that the bill run is created for.  For each item in the array, either the `organizationId` or the `organizationName` field is required.  This field is only required when you have already turned on Multi-Org feature.   # noqa: E501

        :param organization_labels: The organization_labels of this CreateBillRunRequest.  # noqa: E501
        :type: list[OrganizationLabel]
        """

        self._organization_labels = organization_labels

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateBillRunRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateBillRunRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
