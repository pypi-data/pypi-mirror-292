# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CollectDebitMemoRequestPayment(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'gateway_id': 'str',
        'payment_method_id': 'str'
    }

    attribute_map = {
        'gateway_id': 'gatewayId',
        'payment_method_id': 'paymentMethodId'
    }

    def __init__(self, gateway_id=None, payment_method_id=None):  # noqa: E501
        """CollectDebitMemoRequestPayment - a model defined in Swagger"""  # noqa: E501
        self._gateway_id = None
        self._payment_method_id = None
        self.discriminator = None
        if gateway_id is not None:
            self.gateway_id = gateway_id
        if payment_method_id is not None:
            self.payment_method_id = payment_method_id

    @property
    def gateway_id(self):
        """Gets the gateway_id of this CollectDebitMemoRequestPayment.  # noqa: E501

        The ID of the gateway instance that processes the payment. The ID must be a valid gateway instance ID and this gateway must support the specific payment method. If no gateway ID is specified in the request body, the default gateway for the customer account is used automatically, if this default one is not configured, the default gateway of the tenant would be used.   # noqa: E501

        :return: The gateway_id of this CollectDebitMemoRequestPayment.  # noqa: E501
        :rtype: str
        """
        return self._gateway_id

    @gateway_id.setter
    def gateway_id(self, gateway_id):
        """Sets the gateway_id of this CollectDebitMemoRequestPayment.

        The ID of the gateway instance that processes the payment. The ID must be a valid gateway instance ID and this gateway must support the specific payment method. If no gateway ID is specified in the request body, the default gateway for the customer account is used automatically, if this default one is not configured, the default gateway of the tenant would be used.   # noqa: E501

        :param gateway_id: The gateway_id of this CollectDebitMemoRequestPayment.  # noqa: E501
        :type: str
        """

        self._gateway_id = gateway_id

    @property
    def payment_method_id(self):
        """Gets the payment_method_id of this CollectDebitMemoRequestPayment.  # noqa: E501

        The unique ID of the payment method that the customer used to make the payment. If no payment method ID is specified in the request body, the default payment method for the customer account is used automatically. If the default payment method is different from the type of payments that you want to create, an error occurs.   # noqa: E501

        :return: The payment_method_id of this CollectDebitMemoRequestPayment.  # noqa: E501
        :rtype: str
        """
        return self._payment_method_id

    @payment_method_id.setter
    def payment_method_id(self, payment_method_id):
        """Sets the payment_method_id of this CollectDebitMemoRequestPayment.

        The unique ID of the payment method that the customer used to make the payment. If no payment method ID is specified in the request body, the default payment method for the customer account is used automatically. If the default payment method is different from the type of payments that you want to create, an error occurs.   # noqa: E501

        :param payment_method_id: The payment_method_id of this CollectDebitMemoRequestPayment.  # noqa: E501
        :type: str
        """

        self._payment_method_id = payment_method_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CollectDebitMemoRequestPayment, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CollectDebitMemoRequestPayment):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
