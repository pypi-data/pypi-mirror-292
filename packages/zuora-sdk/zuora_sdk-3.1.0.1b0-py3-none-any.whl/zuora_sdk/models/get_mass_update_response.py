# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetMassUpdateResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'action_type': 'str',
        'ended_on': 'str',
        'error_count': 'str',
        'input_size': 'int',
        'output_size': 'int',
        'output_type': 'str',
        'output_url': 'str',
        'processed_count': 'str',
        'started_on': 'str',
        'status': 'str',
        'success': 'bool',
        'success_count': 'str',
        'total_count': 'str',
        'uploaded_by': 'str',
        'uploaded_on': 'str'
    }

    attribute_map = {
        'action_type': 'actionType',
        'ended_on': 'endedOn',
        'error_count': 'errorCount',
        'input_size': 'inputSize',
        'output_size': 'outputSize',
        'output_type': 'outputType',
        'output_url': 'outputURL',
        'processed_count': 'processedCount',
        'started_on': 'startedOn',
        'status': 'status',
        'success': 'success',
        'success_count': 'successCount',
        'total_count': 'totalCount',
        'uploaded_by': 'uploadedBy',
        'uploaded_on': 'uploadedOn'
    }

    def __init__(self, action_type=None, ended_on=None, error_count=None, input_size=None, output_size=None, output_type=None, output_url=None, processed_count=None, started_on=None, status=None, success=None, success_count=None, total_count=None, uploaded_by=None, uploaded_on=None):  # noqa: E501
        """GetMassUpdateResponse - a model defined in Swagger"""  # noqa: E501
        self._action_type = None
        self._ended_on = None
        self._error_count = None
        self._input_size = None
        self._output_size = None
        self._output_type = None
        self._output_url = None
        self._processed_count = None
        self._started_on = None
        self._status = None
        self._success = None
        self._success_count = None
        self._total_count = None
        self._uploaded_by = None
        self._uploaded_on = None
        self.discriminator = None
        if action_type is not None:
            self.action_type = action_type
        if ended_on is not None:
            self.ended_on = ended_on
        if error_count is not None:
            self.error_count = error_count
        if input_size is not None:
            self.input_size = input_size
        if output_size is not None:
            self.output_size = output_size
        if output_type is not None:
            self.output_type = output_type
        if output_url is not None:
            self.output_url = output_url
        if processed_count is not None:
            self.processed_count = processed_count
        if started_on is not None:
            self.started_on = started_on
        if status is not None:
            self.status = status
        if success is not None:
            self.success = success
        if success_count is not None:
            self.success_count = success_count
        if total_count is not None:
            self.total_count = total_count
        if uploaded_by is not None:
            self.uploaded_by = uploaded_by
        if uploaded_on is not None:
            self.uploaded_on = uploaded_on

    @property
    def action_type(self):
        """Gets the action_type of this GetMassUpdateResponse.  # noqa: E501

        Type of mass action.   # noqa: E501

        :return: The action_type of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this GetMassUpdateResponse.

        Type of mass action.   # noqa: E501

        :param action_type: The action_type of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._action_type = action_type

    @property
    def ended_on(self):
        """Gets the ended_on of this GetMassUpdateResponse.  # noqa: E501

        Date and time that the mass action was completed. The format is `yyyy-MM-dd hh:mm:ss`.   # noqa: E501

        :return: The ended_on of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._ended_on

    @ended_on.setter
    def ended_on(self, ended_on):
        """Sets the ended_on of this GetMassUpdateResponse.

        Date and time that the mass action was completed. The format is `yyyy-MM-dd hh:mm:ss`.   # noqa: E501

        :param ended_on: The ended_on of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._ended_on = ended_on

    @property
    def error_count(self):
        """Gets the error_count of this GetMassUpdateResponse.  # noqa: E501

        Total number of failed records.  This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have failed so far. When the mass action **status** is Pending, this field is null.   # noqa: E501

        :return: The error_count of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._error_count

    @error_count.setter
    def error_count(self, error_count):
        """Sets the error_count of this GetMassUpdateResponse.

        Total number of failed records.  This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have failed so far. When the mass action **status** is Pending, this field is null.   # noqa: E501

        :param error_count: The error_count of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._error_count = error_count

    @property
    def input_size(self):
        """Gets the input_size of this GetMassUpdateResponse.  # noqa: E501

        Size of the input file in bytes.   # noqa: E501

        :return: The input_size of this GetMassUpdateResponse.  # noqa: E501
        :rtype: int
        """
        return self._input_size

    @input_size.setter
    def input_size(self, input_size):
        """Sets the input_size of this GetMassUpdateResponse.

        Size of the input file in bytes.   # noqa: E501

        :param input_size: The input_size of this GetMassUpdateResponse.  # noqa: E501
        :type: int
        """

        self._input_size = input_size

    @property
    def output_size(self):
        """Gets the output_size of this GetMassUpdateResponse.  # noqa: E501

        Size of the response file in bytes.   # noqa: E501

        :return: The output_size of this GetMassUpdateResponse.  # noqa: E501
        :rtype: int
        """
        return self._output_size

    @output_size.setter
    def output_size(self, output_size):
        """Sets the output_size of this GetMassUpdateResponse.

        Size of the response file in bytes.   # noqa: E501

        :param output_size: The output_size of this GetMassUpdateResponse.  # noqa: E501
        :type: int
        """

        self._output_size = output_size

    @property
    def output_type(self):
        """Gets the output_type of this GetMassUpdateResponse.  # noqa: E501

        Type of output for the response file. The following table describes the output type.  | Output Type    | Description                         | |----------------|-------------------------------------| | (url:.csv.zip) | URL pointing to a zipped .csv file. |   # noqa: E501

        :return: The output_type of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._output_type

    @output_type.setter
    def output_type(self, output_type):
        """Sets the output_type of this GetMassUpdateResponse.

        Type of output for the response file. The following table describes the output type.  | Output Type    | Description                         | |----------------|-------------------------------------| | (url:.csv.zip) | URL pointing to a zipped .csv file. |   # noqa: E501

        :param output_type: The output_type of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._output_type = output_type

    @property
    def output_url(self):
        """Gets the output_url of this GetMassUpdateResponse.  # noqa: E501

        URL to download the response file. The response file is a zipped .csv file.  The response file is identical to the file you uploaded to perform the mass action, with additional columns providing information about the outcome of each record.  This field only returns a value when the mass action **status** is Completed or Stopped. Otherwise, this field is null.   # noqa: E501

        :return: The output_url of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._output_url

    @output_url.setter
    def output_url(self, output_url):
        """Sets the output_url of this GetMassUpdateResponse.

        URL to download the response file. The response file is a zipped .csv file.  The response file is identical to the file you uploaded to perform the mass action, with additional columns providing information about the outcome of each record.  This field only returns a value when the mass action **status** is Completed or Stopped. Otherwise, this field is null.   # noqa: E501

        :param output_url: The output_url of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._output_url = output_url

    @property
    def processed_count(self):
        """Gets the processed_count of this GetMassUpdateResponse.  # noqa: E501

        Total number of processed records. This field is equal to the sum of `errorCount` and `successCount`.  This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have been processed so far. When the mass action **status** is Pending, this field is null.   # noqa: E501

        :return: The processed_count of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._processed_count

    @processed_count.setter
    def processed_count(self, processed_count):
        """Sets the processed_count of this GetMassUpdateResponse.

        Total number of processed records. This field is equal to the sum of `errorCount` and `successCount`.  This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have been processed so far. When the mass action **status** is Pending, this field is null.   # noqa: E501

        :param processed_count: The processed_count of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._processed_count = processed_count

    @property
    def started_on(self):
        """Gets the started_on of this GetMassUpdateResponse.  # noqa: E501

        Date and time that Zuora started processing the mass action. The format is `yyyy-MM-dd hh:mm:ss`.   # noqa: E501

        :return: The started_on of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._started_on

    @started_on.setter
    def started_on(self, started_on):
        """Sets the started_on of this GetMassUpdateResponse.

        Date and time that Zuora started processing the mass action. The format is `yyyy-MM-dd hh:mm:ss`.   # noqa: E501

        :param started_on: The started_on of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._started_on = started_on

    @property
    def status(self):
        """Gets the status of this GetMassUpdateResponse.  # noqa: E501

        Status of the mass action. The following table describes the mass action statuses.  | Status     | Description                                                                | |------------|----------------------------------------------------------------------------| | Pending    | Mass action has not yet started being processed.                           | | Processing | Mass action is in progress.                                                | | Stopping   | Mass action is in the process of stopping, but has not yet stopped.        | | Stopped    | Mass action has stopped.                                                   | | Completed  | Mass action was successfully completed. There may still be failed records. | | Failed     | Mass action failed. No records are processed. No response file is created. |   # noqa: E501

        :return: The status of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetMassUpdateResponse.

        Status of the mass action. The following table describes the mass action statuses.  | Status     | Description                                                                | |------------|----------------------------------------------------------------------------| | Pending    | Mass action has not yet started being processed.                           | | Processing | Mass action is in progress.                                                | | Stopping   | Mass action is in the process of stopping, but has not yet stopped.        | | Stopped    | Mass action has stopped.                                                   | | Completed  | Mass action was successfully completed. There may still be failed records. | | Failed     | Mass action failed. No records are processed. No response file is created. |   # noqa: E501

        :param status: The status of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def success(self):
        """Gets the success of this GetMassUpdateResponse.  # noqa: E501

        Returns `true` if the request was processed successfully.   # noqa: E501

        :return: The success of this GetMassUpdateResponse.  # noqa: E501
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this GetMassUpdateResponse.

        Returns `true` if the request was processed successfully.   # noqa: E501

        :param success: The success of this GetMassUpdateResponse.  # noqa: E501
        :type: bool
        """

        self._success = success

    @property
    def success_count(self):
        """Gets the success_count of this GetMassUpdateResponse.  # noqa: E501

        Total number of successful records. This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have succeeded so far. When the mass action **status** is Pending, this field is null.   # noqa: E501

        :return: The success_count of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._success_count

    @success_count.setter
    def success_count(self, success_count):
        """Sets the success_count of this GetMassUpdateResponse.

        Total number of successful records. This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have succeeded so far. When the mass action **status** is Pending, this field is null.   # noqa: E501

        :param success_count: The success_count of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._success_count = success_count

    @property
    def total_count(self):
        """Gets the total_count of this GetMassUpdateResponse.  # noqa: E501

        Total number of records in the uploaded mass action file. When the mass action **status** is Pending, this field is null.   # noqa: E501

        :return: The total_count of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this GetMassUpdateResponse.

        Total number of records in the uploaded mass action file. When the mass action **status** is Pending, this field is null.   # noqa: E501

        :param total_count: The total_count of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._total_count = total_count

    @property
    def uploaded_by(self):
        """Gets the uploaded_by of this GetMassUpdateResponse.  # noqa: E501

        Email of the person who uploaded the mass action file.   # noqa: E501

        :return: The uploaded_by of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._uploaded_by

    @uploaded_by.setter
    def uploaded_by(self, uploaded_by):
        """Sets the uploaded_by of this GetMassUpdateResponse.

        Email of the person who uploaded the mass action file.   # noqa: E501

        :param uploaded_by: The uploaded_by of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._uploaded_by = uploaded_by

    @property
    def uploaded_on(self):
        """Gets the uploaded_on of this GetMassUpdateResponse.  # noqa: E501

        Date and time that the mass action file was uploaded. The format is `yyyy-MM-dd hh:mm:ss`.   # noqa: E501

        :return: The uploaded_on of this GetMassUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._uploaded_on

    @uploaded_on.setter
    def uploaded_on(self, uploaded_on):
        """Sets the uploaded_on of this GetMassUpdateResponse.

        Date and time that the mass action file was uploaded. The format is `yyyy-MM-dd hh:mm:ss`.   # noqa: E501

        :param uploaded_on: The uploaded_on of this GetMassUpdateResponse.  # noqa: E501
        :type: str
        """

        self._uploaded_on = uploaded_on

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetMassUpdateResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetMassUpdateResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
