# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AccountEInvoiceProfile(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'enabled': 'bool',
        'business_name': 'str',
        'business_number': 'str',
        'business_number_scheme_id': 'str',
        'endpoint_id': 'str',
        'endpoint_scheme_id': 'str',
        'tax_register_number': 'str',
        'business_category': 'str'
    }

    attribute_map = {
        'enabled': 'enabled',
        'business_name': 'businessName',
        'business_number': 'businessNumber',
        'business_number_scheme_id': 'businessNumberSchemeId',
        'endpoint_id': 'endpointId',
        'endpoint_scheme_id': 'endpointSchemeId',
        'tax_register_number': 'taxRegisterNumber',
        'business_category': 'businessCategory'
    }

    def __init__(self, enabled=None, business_name=None, business_number=None, business_number_scheme_id=None, endpoint_id=None, endpoint_scheme_id=None, tax_register_number=None, business_category=None):  # noqa: E501
        """AccountEInvoiceProfile - a model defined in Swagger"""  # noqa: E501
        self._enabled = None
        self._business_name = None
        self._business_number = None
        self._business_number_scheme_id = None
        self._endpoint_id = None
        self._endpoint_scheme_id = None
        self._tax_register_number = None
        self._business_category = None
        self.discriminator = None
        if enabled is not None:
            self.enabled = enabled
        if business_name is not None:
            self.business_name = business_name
        if business_number is not None:
            self.business_number = business_number
        if business_number_scheme_id is not None:
            self.business_number_scheme_id = business_number_scheme_id
        if endpoint_id is not None:
            self.endpoint_id = endpoint_id
        if endpoint_scheme_id is not None:
            self.endpoint_scheme_id = endpoint_scheme_id
        if tax_register_number is not None:
            self.tax_register_number = tax_register_number
        if business_category is not None:
            self.business_category = business_category

    @property
    def enabled(self):
        """Gets the enabled of this AccountEInvoiceProfile.  # noqa: E501

        enabled   # noqa: E501

        :return: The enabled of this AccountEInvoiceProfile.  # noqa: E501
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this AccountEInvoiceProfile.

        enabled   # noqa: E501

        :param enabled: The enabled of this AccountEInvoiceProfile.  # noqa: E501
        :type: bool
        """

        self._enabled = enabled

    @property
    def business_name(self):
        """Gets the business_name of this AccountEInvoiceProfile.  # noqa: E501

        businessName.   # noqa: E501

        :return: The business_name of this AccountEInvoiceProfile.  # noqa: E501
        :rtype: str
        """
        return self._business_name

    @business_name.setter
    def business_name(self, business_name):
        """Sets the business_name of this AccountEInvoiceProfile.

        businessName.   # noqa: E501

        :param business_name: The business_name of this AccountEInvoiceProfile.  # noqa: E501
        :type: str
        """

        self._business_name = business_name

    @property
    def business_number(self):
        """Gets the business_number of this AccountEInvoiceProfile.  # noqa: E501

        businessNumber.   # noqa: E501

        :return: The business_number of this AccountEInvoiceProfile.  # noqa: E501
        :rtype: str
        """
        return self._business_number

    @business_number.setter
    def business_number(self, business_number):
        """Sets the business_number of this AccountEInvoiceProfile.

        businessNumber.   # noqa: E501

        :param business_number: The business_number of this AccountEInvoiceProfile.  # noqa: E501
        :type: str
        """

        self._business_number = business_number

    @property
    def business_number_scheme_id(self):
        """Gets the business_number_scheme_id of this AccountEInvoiceProfile.  # noqa: E501

        businessNumberSchemeId.   # noqa: E501

        :return: The business_number_scheme_id of this AccountEInvoiceProfile.  # noqa: E501
        :rtype: str
        """
        return self._business_number_scheme_id

    @business_number_scheme_id.setter
    def business_number_scheme_id(self, business_number_scheme_id):
        """Sets the business_number_scheme_id of this AccountEInvoiceProfile.

        businessNumberSchemeId.   # noqa: E501

        :param business_number_scheme_id: The business_number_scheme_id of this AccountEInvoiceProfile.  # noqa: E501
        :type: str
        """

        self._business_number_scheme_id = business_number_scheme_id

    @property
    def endpoint_id(self):
        """Gets the endpoint_id of this AccountEInvoiceProfile.  # noqa: E501

        endpointId.   # noqa: E501

        :return: The endpoint_id of this AccountEInvoiceProfile.  # noqa: E501
        :rtype: str
        """
        return self._endpoint_id

    @endpoint_id.setter
    def endpoint_id(self, endpoint_id):
        """Sets the endpoint_id of this AccountEInvoiceProfile.

        endpointId.   # noqa: E501

        :param endpoint_id: The endpoint_id of this AccountEInvoiceProfile.  # noqa: E501
        :type: str
        """

        self._endpoint_id = endpoint_id

    @property
    def endpoint_scheme_id(self):
        """Gets the endpoint_scheme_id of this AccountEInvoiceProfile.  # noqa: E501

        endpointSchemeId.   # noqa: E501

        :return: The endpoint_scheme_id of this AccountEInvoiceProfile.  # noqa: E501
        :rtype: str
        """
        return self._endpoint_scheme_id

    @endpoint_scheme_id.setter
    def endpoint_scheme_id(self, endpoint_scheme_id):
        """Sets the endpoint_scheme_id of this AccountEInvoiceProfile.

        endpointSchemeId.   # noqa: E501

        :param endpoint_scheme_id: The endpoint_scheme_id of this AccountEInvoiceProfile.  # noqa: E501
        :type: str
        """

        self._endpoint_scheme_id = endpoint_scheme_id

    @property
    def tax_register_number(self):
        """Gets the tax_register_number of this AccountEInvoiceProfile.  # noqa: E501

        taxRegisterNumber.   # noqa: E501

        :return: The tax_register_number of this AccountEInvoiceProfile.  # noqa: E501
        :rtype: str
        """
        return self._tax_register_number

    @tax_register_number.setter
    def tax_register_number(self, tax_register_number):
        """Sets the tax_register_number of this AccountEInvoiceProfile.

        taxRegisterNumber.   # noqa: E501

        :param tax_register_number: The tax_register_number of this AccountEInvoiceProfile.  # noqa: E501
        :type: str
        """

        self._tax_register_number = tax_register_number

    @property
    def business_category(self):
        """Gets the business_category of this AccountEInvoiceProfile.  # noqa: E501

        A field to identify the business category on the Account Einvoice Profile.   # noqa: E501

        :return: The business_category of this AccountEInvoiceProfile.  # noqa: E501
        :rtype: str
        """
        return self._business_category

    @business_category.setter
    def business_category(self, business_category):
        """Sets the business_category of this AccountEInvoiceProfile.

        A field to identify the business category on the Account Einvoice Profile.   # noqa: E501

        :param business_category: The business_category of this AccountEInvoiceProfile.  # noqa: E501
        :type: str
        """

        self._business_category = business_category

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AccountEInvoiceProfile, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AccountEInvoiceProfile):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
