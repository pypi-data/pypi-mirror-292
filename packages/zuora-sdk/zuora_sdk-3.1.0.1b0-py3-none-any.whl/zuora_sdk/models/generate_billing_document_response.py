# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GenerateBillingDocumentResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'credit_memos': 'list[GenerateBillingDocumentResponseCreditMemo]',
        'invoices': 'list[GenerateBillingDocumentResponseInvoice]',
        'success': 'bool'
    }

    attribute_map = {
        'credit_memos': 'creditMemos',
        'invoices': 'invoices',
        'success': 'success'
    }

    def __init__(self, credit_memos=None, invoices=None, success=None):  # noqa: E501
        """GenerateBillingDocumentResponse - a model defined in Swagger"""  # noqa: E501
        self._credit_memos = None
        self._invoices = None
        self._success = None
        self.discriminator = None
        if credit_memos is not None:
            self.credit_memos = credit_memos
        if invoices is not None:
            self.invoices = invoices
        if success is not None:
            self.success = success

    @property
    def credit_memos(self):
        """Gets the credit_memos of this GenerateBillingDocumentResponse.  # noqa: E501

        Container for generated credit memos.  **Note:** This container is only available if you have [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement) enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information.   # noqa: E501

        :return: The credit_memos of this GenerateBillingDocumentResponse.  # noqa: E501
        :rtype: list[GenerateBillingDocumentResponseCreditMemo]
        """
        return self._credit_memos

    @credit_memos.setter
    def credit_memos(self, credit_memos):
        """Sets the credit_memos of this GenerateBillingDocumentResponse.

        Container for generated credit memos.  **Note:** This container is only available if you have [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement) enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information.   # noqa: E501

        :param credit_memos: The credit_memos of this GenerateBillingDocumentResponse.  # noqa: E501
        :type: list[GenerateBillingDocumentResponseCreditMemo]
        """

        self._credit_memos = credit_memos

    @property
    def invoices(self):
        """Gets the invoices of this GenerateBillingDocumentResponse.  # noqa: E501

        Container for generated invoices.   # noqa: E501

        :return: The invoices of this GenerateBillingDocumentResponse.  # noqa: E501
        :rtype: list[GenerateBillingDocumentResponseInvoice]
        """
        return self._invoices

    @invoices.setter
    def invoices(self, invoices):
        """Sets the invoices of this GenerateBillingDocumentResponse.

        Container for generated invoices.   # noqa: E501

        :param invoices: The invoices of this GenerateBillingDocumentResponse.  # noqa: E501
        :type: list[GenerateBillingDocumentResponseInvoice]
        """

        self._invoices = invoices

    @property
    def success(self):
        """Gets the success of this GenerateBillingDocumentResponse.  # noqa: E501

        Returns `true` if the request was processed successfully.  # noqa: E501

        :return: The success of this GenerateBillingDocumentResponse.  # noqa: E501
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this GenerateBillingDocumentResponse.

        Returns `true` if the request was processed successfully.  # noqa: E501

        :param success: The success of this GenerateBillingDocumentResponse.  # noqa: E501
        :type: bool
        """

        self._success = success

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GenerateBillingDocumentResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GenerateBillingDocumentResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
