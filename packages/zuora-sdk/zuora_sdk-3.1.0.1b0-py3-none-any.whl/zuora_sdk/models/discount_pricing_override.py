# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DiscountPricingOverride(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'apply_discount_to': 'ApplyDiscountTo',
        'original_discount_amount': 'float',
        'discount_amount': 'float',
        'discount_level': 'DiscountLevel',
        'original_discount_percentage': 'float',
        'discount_percentage': 'float',
        'price_change_option': 'PriceChangeOption',
        'discount_class': 'str',
        'apply_to_billing_period_partially': 'bool',
        'discount_apply_details': 'list[OverrideDiscountApplyDetail]'
    }

    attribute_map = {
        'apply_discount_to': 'applyDiscountTo',
        'original_discount_amount': 'originalDiscountAmount',
        'discount_amount': 'discountAmount',
        'discount_level': 'discountLevel',
        'original_discount_percentage': 'originalDiscountPercentage',
        'discount_percentage': 'discountPercentage',
        'price_change_option': 'priceChangeOption',
        'discount_class': 'discountClass',
        'apply_to_billing_period_partially': 'applyToBillingPeriodPartially',
        'discount_apply_details': 'discountApplyDetails'
    }

    def __init__(self, apply_discount_to=None, original_discount_amount=None, discount_amount=None, discount_level=None, original_discount_percentage=None, discount_percentage=None, price_change_option=None, discount_class=None, apply_to_billing_period_partially=None, discount_apply_details=None):  # noqa: E501
        """DiscountPricingOverride - a model defined in Swagger"""  # noqa: E501
        self._apply_discount_to = None
        self._original_discount_amount = None
        self._discount_amount = None
        self._discount_level = None
        self._original_discount_percentage = None
        self._discount_percentage = None
        self._price_change_option = None
        self._discount_class = None
        self._apply_to_billing_period_partially = None
        self._discount_apply_details = None
        self.discriminator = None
        if apply_discount_to is not None:
            self.apply_discount_to = apply_discount_to
        if original_discount_amount is not None:
            self.original_discount_amount = original_discount_amount
        if discount_amount is not None:
            self.discount_amount = discount_amount
        if discount_level is not None:
            self.discount_level = discount_level
        if original_discount_percentage is not None:
            self.original_discount_percentage = original_discount_percentage
        if discount_percentage is not None:
            self.discount_percentage = discount_percentage
        if price_change_option is not None:
            self.price_change_option = price_change_option
        if discount_class is not None:
            self.discount_class = discount_class
        if apply_to_billing_period_partially is not None:
            self.apply_to_billing_period_partially = apply_to_billing_period_partially
        if discount_apply_details is not None:
            self.discount_apply_details = discount_apply_details

    @property
    def apply_discount_to(self):
        """Gets the apply_discount_to of this DiscountPricingOverride.  # noqa: E501


        :return: The apply_discount_to of this DiscountPricingOverride.  # noqa: E501
        :rtype: ApplyDiscountTo
        """
        return self._apply_discount_to

    @apply_discount_to.setter
    def apply_discount_to(self, apply_discount_to):
        """Sets the apply_discount_to of this DiscountPricingOverride.


        :param apply_discount_to: The apply_discount_to of this DiscountPricingOverride.  # noqa: E501
        :type: ApplyDiscountTo
        """

        self._apply_discount_to = apply_discount_to

    @property
    def original_discount_amount(self):
        """Gets the original_discount_amount of this DiscountPricingOverride.  # noqa: E501

        The manufacturer's suggested retail discount price for standalone charge.  Only applicable if the standalone discount charge is a fixed-amount discount.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature is enabled.   # noqa: E501

        :return: The original_discount_amount of this DiscountPricingOverride.  # noqa: E501
        :rtype: float
        """
        return self._original_discount_amount

    @original_discount_amount.setter
    def original_discount_amount(self, original_discount_amount):
        """Sets the original_discount_amount of this DiscountPricingOverride.

        The manufacturer's suggested retail discount price for standalone charge.  Only applicable if the standalone discount charge is a fixed-amount discount.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature is enabled.   # noqa: E501

        :param original_discount_amount: The original_discount_amount of this DiscountPricingOverride.  # noqa: E501
        :type: float
        """

        self._original_discount_amount = original_discount_amount

    @property
    def discount_amount(self):
        """Gets the discount_amount of this DiscountPricingOverride.  # noqa: E501

        Only applicable if the discount charge is a fixed-amount discount.   # noqa: E501

        :return: The discount_amount of this DiscountPricingOverride.  # noqa: E501
        :rtype: float
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """Sets the discount_amount of this DiscountPricingOverride.

        Only applicable if the discount charge is a fixed-amount discount.   # noqa: E501

        :param discount_amount: The discount_amount of this DiscountPricingOverride.  # noqa: E501
        :type: float
        """

        self._discount_amount = discount_amount

    @property
    def discount_level(self):
        """Gets the discount_level of this DiscountPricingOverride.  # noqa: E501


        :return: The discount_level of this DiscountPricingOverride.  # noqa: E501
        :rtype: DiscountLevel
        """
        return self._discount_level

    @discount_level.setter
    def discount_level(self, discount_level):
        """Sets the discount_level of this DiscountPricingOverride.


        :param discount_level: The discount_level of this DiscountPricingOverride.  # noqa: E501
        :type: DiscountLevel
        """

        self._discount_level = discount_level

    @property
    def original_discount_percentage(self):
        """Gets the original_discount_percentage of this DiscountPricingOverride.  # noqa: E501

        The manufacturer's suggested retail discount percentage for standalone charge.  Only applicable if the standalone discount charge is a percentage discount.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature is enabled.   # noqa: E501

        :return: The original_discount_percentage of this DiscountPricingOverride.  # noqa: E501
        :rtype: float
        """
        return self._original_discount_percentage

    @original_discount_percentage.setter
    def original_discount_percentage(self, original_discount_percentage):
        """Sets the original_discount_percentage of this DiscountPricingOverride.

        The manufacturer's suggested retail discount percentage for standalone charge.  Only applicable if the standalone discount charge is a percentage discount.  **Note:** This field is available when the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Manage_subscription_transactions/Orders/Standalone_Orders/AA_Overview_of_Standalone_Orders\" target=\"_blank\">Standalone Orders</a> feature is enabled.   # noqa: E501

        :param original_discount_percentage: The original_discount_percentage of this DiscountPricingOverride.  # noqa: E501
        :type: float
        """

        self._original_discount_percentage = original_discount_percentage

    @property
    def discount_percentage(self):
        """Gets the discount_percentage of this DiscountPricingOverride.  # noqa: E501

        Only applicable if the discount charge is a percentage discount.   # noqa: E501

        :return: The discount_percentage of this DiscountPricingOverride.  # noqa: E501
        :rtype: float
        """
        return self._discount_percentage

    @discount_percentage.setter
    def discount_percentage(self, discount_percentage):
        """Sets the discount_percentage of this DiscountPricingOverride.

        Only applicable if the discount charge is a percentage discount.   # noqa: E501

        :param discount_percentage: The discount_percentage of this DiscountPricingOverride.  # noqa: E501
        :type: float
        """

        self._discount_percentage = discount_percentage

    @property
    def price_change_option(self):
        """Gets the price_change_option of this DiscountPricingOverride.  # noqa: E501


        :return: The price_change_option of this DiscountPricingOverride.  # noqa: E501
        :rtype: PriceChangeOption
        """
        return self._price_change_option

    @price_change_option.setter
    def price_change_option(self, price_change_option):
        """Sets the price_change_option of this DiscountPricingOverride.


        :param price_change_option: The price_change_option of this DiscountPricingOverride.  # noqa: E501
        :type: PriceChangeOption
        """

        self._price_change_option = price_change_option

    @property
    def discount_class(self):
        """Gets the discount_class of this DiscountPricingOverride.  # noqa: E501

        The discount class defines the sequence in which discount product rate plan charges are applied.  **Note**: You must enable the [Enhanced Discounts](https://knowledgecenter.zuora.com/Zuora_Billing/Build_products_and_prices/Basic_concepts_and_terms/B_Charge_Models/D_Manage_Enhanced_Discount) feature to access this field.   # noqa: E501

        :return: The discount_class of this DiscountPricingOverride.  # noqa: E501
        :rtype: str
        """
        return self._discount_class

    @discount_class.setter
    def discount_class(self, discount_class):
        """Sets the discount_class of this DiscountPricingOverride.

        The discount class defines the sequence in which discount product rate plan charges are applied.  **Note**: You must enable the [Enhanced Discounts](https://knowledgecenter.zuora.com/Zuora_Billing/Build_products_and_prices/Basic_concepts_and_terms/B_Charge_Models/D_Manage_Enhanced_Discount) feature to access this field.   # noqa: E501

        :param discount_class: The discount_class of this DiscountPricingOverride.  # noqa: E501
        :type: str
        """

        self._discount_class = discount_class

    @property
    def apply_to_billing_period_partially(self):
        """Gets the apply_to_billing_period_partially of this DiscountPricingOverride.  # noqa: E501

        Allow the discount duration to be aligned with the billing period partially.  **Note**: You must enable the [Enhanced Discounts](https://knowledgecenter.zuora.com/Zuora_Billing/Build_products_and_prices/Basic_concepts_and_terms/B_Charge_Models/D_Manage_Enhanced_Discount) feature to access this field.   # noqa: E501

        :return: The apply_to_billing_period_partially of this DiscountPricingOverride.  # noqa: E501
        :rtype: bool
        """
        return self._apply_to_billing_period_partially

    @apply_to_billing_period_partially.setter
    def apply_to_billing_period_partially(self, apply_to_billing_period_partially):
        """Sets the apply_to_billing_period_partially of this DiscountPricingOverride.

        Allow the discount duration to be aligned with the billing period partially.  **Note**: You must enable the [Enhanced Discounts](https://knowledgecenter.zuora.com/Zuora_Billing/Build_products_and_prices/Basic_concepts_and_terms/B_Charge_Models/D_Manage_Enhanced_Discount) feature to access this field.   # noqa: E501

        :param apply_to_billing_period_partially: The apply_to_billing_period_partially of this DiscountPricingOverride.  # noqa: E501
        :type: bool
        """

        self._apply_to_billing_period_partially = apply_to_billing_period_partially

    @property
    def discount_apply_details(self):
        """Gets the discount_apply_details of this DiscountPricingOverride.  # noqa: E501

        Charge list of discount be applied to.  **Note**: You must enable the [Enhanced Discounts](https://knowledgecenter.zuora.com/Zuora_Billing/Build_products_and_prices/Basic_concepts_and_terms/B_Charge_Models/D_Manage_Enhanced_Discount) feature to access this field.   # noqa: E501

        :return: The discount_apply_details of this DiscountPricingOverride.  # noqa: E501
        :rtype: list[OverrideDiscountApplyDetail]
        """
        return self._discount_apply_details

    @discount_apply_details.setter
    def discount_apply_details(self, discount_apply_details):
        """Sets the discount_apply_details of this DiscountPricingOverride.

        Charge list of discount be applied to.  **Note**: You must enable the [Enhanced Discounts](https://knowledgecenter.zuora.com/Zuora_Billing/Build_products_and_prices/Basic_concepts_and_terms/B_Charge_Models/D_Manage_Enhanced_Discount) feature to access this field.   # noqa: E501

        :param discount_apply_details: The discount_apply_details of this DiscountPricingOverride.  # noqa: E501
        :type: list[OverrideDiscountApplyDetail]
        """

        self._discount_apply_details = discount_apply_details

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DiscountPricingOverride, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DiscountPricingOverride):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
