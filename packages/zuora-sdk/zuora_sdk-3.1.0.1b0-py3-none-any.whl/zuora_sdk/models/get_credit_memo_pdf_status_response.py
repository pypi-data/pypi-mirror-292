# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetCreditMemoPdfStatusResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'credit_memo_id': 'str',
        'credit_memo_number': 'str',
        'pdf_generation_status': 'str',
        'created_on': 'str',
        'updated_on': 'str'
    }

    attribute_map = {
        'credit_memo_id': 'creditMemoId',
        'credit_memo_number': 'creditMemoNumber',
        'pdf_generation_status': 'pdfGenerationStatus',
        'created_on': 'createdOn',
        'updated_on': 'updatedOn'
    }

    def __init__(self, credit_memo_id=None, credit_memo_number=None, pdf_generation_status=None, created_on=None, updated_on=None):  # noqa: E501
        """GetCreditMemoPdfStatusResponse - a model defined in Swagger"""  # noqa: E501
        self._credit_memo_id = None
        self._credit_memo_number = None
        self._pdf_generation_status = None
        self._created_on = None
        self._updated_on = None
        self.discriminator = None
        if credit_memo_id is not None:
            self.credit_memo_id = credit_memo_id
        if credit_memo_number is not None:
            self.credit_memo_number = credit_memo_number
        if pdf_generation_status is not None:
            self.pdf_generation_status = pdf_generation_status
        if created_on is not None:
            self.created_on = created_on
        if updated_on is not None:
            self.updated_on = updated_on

    @property
    def credit_memo_id(self):
        """Gets the credit_memo_id of this GetCreditMemoPdfStatusResponse.  # noqa: E501

        The ID of the credit memo whose pdf status is requested.   # noqa: E501

        :return: The credit_memo_id of this GetCreditMemoPdfStatusResponse.  # noqa: E501
        :rtype: str
        """
        return self._credit_memo_id

    @credit_memo_id.setter
    def credit_memo_id(self, credit_memo_id):
        """Sets the credit_memo_id of this GetCreditMemoPdfStatusResponse.

        The ID of the credit memo whose pdf status is requested.   # noqa: E501

        :param credit_memo_id: The credit_memo_id of this GetCreditMemoPdfStatusResponse.  # noqa: E501
        :type: str
        """

        self._credit_memo_id = credit_memo_id

    @property
    def credit_memo_number(self):
        """Gets the credit_memo_number of this GetCreditMemoPdfStatusResponse.  # noqa: E501

        The credit memo number of the credit memo whose pdf status is requested.   # noqa: E501

        :return: The credit_memo_number of this GetCreditMemoPdfStatusResponse.  # noqa: E501
        :rtype: str
        """
        return self._credit_memo_number

    @credit_memo_number.setter
    def credit_memo_number(self, credit_memo_number):
        """Sets the credit_memo_number of this GetCreditMemoPdfStatusResponse.

        The credit memo number of the credit memo whose pdf status is requested.   # noqa: E501

        :param credit_memo_number: The credit_memo_number of this GetCreditMemoPdfStatusResponse.  # noqa: E501
        :type: str
        """

        self._credit_memo_number = credit_memo_number

    @property
    def pdf_generation_status(self):
        """Gets the pdf_generation_status of this GetCreditMemoPdfStatusResponse.  # noqa: E501

        The generation status of the credit memo PDF. Can be one of - None/Pending/Processing/Generated/Error/Obsolete/Archived   # noqa: E501

        :return: The pdf_generation_status of this GetCreditMemoPdfStatusResponse.  # noqa: E501
        :rtype: str
        """
        return self._pdf_generation_status

    @pdf_generation_status.setter
    def pdf_generation_status(self, pdf_generation_status):
        """Sets the pdf_generation_status of this GetCreditMemoPdfStatusResponse.

        The generation status of the credit memo PDF. Can be one of - None/Pending/Processing/Generated/Error/Obsolete/Archived   # noqa: E501

        :param pdf_generation_status: The pdf_generation_status of this GetCreditMemoPdfStatusResponse.  # noqa: E501
        :type: str
        """

        self._pdf_generation_status = pdf_generation_status

    @property
    def created_on(self):
        """Gets the created_on of this GetCreditMemoPdfStatusResponse.  # noqa: E501

        The time at which the request to generate the PDF was created.   # noqa: E501

        :return: The created_on of this GetCreditMemoPdfStatusResponse.  # noqa: E501
        :rtype: str
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this GetCreditMemoPdfStatusResponse.

        The time at which the request to generate the PDF was created.   # noqa: E501

        :param created_on: The created_on of this GetCreditMemoPdfStatusResponse.  # noqa: E501
        :type: str
        """

        self._created_on = created_on

    @property
    def updated_on(self):
        """Gets the updated_on of this GetCreditMemoPdfStatusResponse.  # noqa: E501

        The time at which the request to generate the PDF was updated.   # noqa: E501

        :return: The updated_on of this GetCreditMemoPdfStatusResponse.  # noqa: E501
        :rtype: str
        """
        return self._updated_on

    @updated_on.setter
    def updated_on(self, updated_on):
        """Sets the updated_on of this GetCreditMemoPdfStatusResponse.

        The time at which the request to generate the PDF was updated.   # noqa: E501

        :param updated_on: The updated_on of this GetCreditMemoPdfStatusResponse.  # noqa: E501
        :type: str
        """

        self._updated_on = updated_on

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetCreditMemoPdfStatusResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetCreditMemoPdfStatusResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
