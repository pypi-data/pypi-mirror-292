# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CreateInvoiceScheduleRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_key': 'str',
        'additional_subscriptions_to_bill': 'list[str]',
        'invoice_separately': 'bool',
        'notes': 'str',
        'orders': 'list[str]',
        'schedule_items': 'list[CreateInvoiceScheduleItem]',
        'specific_subscriptions': 'list[InvoiceScheduleSubscription]'
    }

    attribute_map = {
        'account_key': 'accountKey',
        'additional_subscriptions_to_bill': 'additionalSubscriptionsToBill',
        'invoice_separately': 'invoiceSeparately',
        'notes': 'notes',
        'orders': 'orders',
        'schedule_items': 'scheduleItems',
        'specific_subscriptions': 'specificSubscriptions'
    }

    def __init__(self, account_key=None, additional_subscriptions_to_bill=None, invoice_separately=None, notes=None, orders=None, schedule_items=None, specific_subscriptions=None):  # noqa: E501
        """CreateInvoiceScheduleRequest - a model defined in Swagger"""  # noqa: E501
        self._account_key = None
        self._additional_subscriptions_to_bill = None
        self._invoice_separately = None
        self._notes = None
        self._orders = None
        self._schedule_items = None
        self._specific_subscriptions = None
        self.discriminator = None
        if account_key is not None:
            self.account_key = account_key
        if additional_subscriptions_to_bill is not None:
            self.additional_subscriptions_to_bill = additional_subscriptions_to_bill
        if invoice_separately is not None:
            self.invoice_separately = invoice_separately
        if notes is not None:
            self.notes = notes
        if orders is not None:
            self.orders = orders
        if schedule_items is not None:
            self.schedule_items = schedule_items
        if specific_subscriptions is not None:
            self.specific_subscriptions = specific_subscriptions

    @property
    def account_key(self):
        """Gets the account_key of this CreateInvoiceScheduleRequest.  # noqa: E501

        The ID or number of the account associated with the invoice schedule.   # noqa: E501

        :return: The account_key of this CreateInvoiceScheduleRequest.  # noqa: E501
        :rtype: str
        """
        return self._account_key

    @account_key.setter
    def account_key(self, account_key):
        """Sets the account_key of this CreateInvoiceScheduleRequest.

        The ID or number of the account associated with the invoice schedule.   # noqa: E501

        :param account_key: The account_key of this CreateInvoiceScheduleRequest.  # noqa: E501
        :type: str
        """

        self._account_key = account_key

    @property
    def additional_subscriptions_to_bill(self):
        """Gets the additional_subscriptions_to_bill of this CreateInvoiceScheduleRequest.  # noqa: E501

        A list of the numbers of the subscriptions that need to be billed together with the invoice schedule.   One invoice schedule can have at most 600 additional subscriptions.   # noqa: E501

        :return: The additional_subscriptions_to_bill of this CreateInvoiceScheduleRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._additional_subscriptions_to_bill

    @additional_subscriptions_to_bill.setter
    def additional_subscriptions_to_bill(self, additional_subscriptions_to_bill):
        """Sets the additional_subscriptions_to_bill of this CreateInvoiceScheduleRequest.

        A list of the numbers of the subscriptions that need to be billed together with the invoice schedule.   One invoice schedule can have at most 600 additional subscriptions.   # noqa: E501

        :param additional_subscriptions_to_bill: The additional_subscriptions_to_bill of this CreateInvoiceScheduleRequest.  # noqa: E501
        :type: list[str]
        """

        self._additional_subscriptions_to_bill = additional_subscriptions_to_bill

    @property
    def invoice_separately(self):
        """Gets the invoice_separately of this CreateInvoiceScheduleRequest.  # noqa: E501

        Whether the invoice items created from the invoice schedule appears on a separate invoice when Zuora generates invoices.   # noqa: E501

        :return: The invoice_separately of this CreateInvoiceScheduleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._invoice_separately

    @invoice_separately.setter
    def invoice_separately(self, invoice_separately):
        """Sets the invoice_separately of this CreateInvoiceScheduleRequest.

        Whether the invoice items created from the invoice schedule appears on a separate invoice when Zuora generates invoices.   # noqa: E501

        :param invoice_separately: The invoice_separately of this CreateInvoiceScheduleRequest.  # noqa: E501
        :type: bool
        """

        self._invoice_separately = invoice_separately

    @property
    def notes(self):
        """Gets the notes of this CreateInvoiceScheduleRequest.  # noqa: E501

        Comments on the invoice schedule.   # noqa: E501

        :return: The notes of this CreateInvoiceScheduleRequest.  # noqa: E501
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this CreateInvoiceScheduleRequest.

        Comments on the invoice schedule.   # noqa: E501

        :param notes: The notes of this CreateInvoiceScheduleRequest.  # noqa: E501
        :type: str
        """

        self._notes = notes

    @property
    def orders(self):
        """Gets the orders of this CreateInvoiceScheduleRequest.  # noqa: E501

        A list of the IDs or numbers of the orders associated with the invoice schedule. One invoice schedule can be associated with at most 10 orders.   # noqa: E501

        :return: The orders of this CreateInvoiceScheduleRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._orders

    @orders.setter
    def orders(self, orders):
        """Sets the orders of this CreateInvoiceScheduleRequest.

        A list of the IDs or numbers of the orders associated with the invoice schedule. One invoice schedule can be associated with at most 10 orders.   # noqa: E501

        :param orders: The orders of this CreateInvoiceScheduleRequest.  # noqa: E501
        :type: list[str]
        """

        self._orders = orders

    @property
    def schedule_items(self):
        """Gets the schedule_items of this CreateInvoiceScheduleRequest.  # noqa: E501

        Container for invoice schedule items. One invoice schedule can have at most 50 invoice schedule items.   # noqa: E501

        :return: The schedule_items of this CreateInvoiceScheduleRequest.  # noqa: E501
        :rtype: list[CreateInvoiceScheduleItem]
        """
        return self._schedule_items

    @schedule_items.setter
    def schedule_items(self, schedule_items):
        """Sets the schedule_items of this CreateInvoiceScheduleRequest.

        Container for invoice schedule items. One invoice schedule can have at most 50 invoice schedule items.   # noqa: E501

        :param schedule_items: The schedule_items of this CreateInvoiceScheduleRequest.  # noqa: E501
        :type: list[CreateInvoiceScheduleItem]
        """

        self._schedule_items = schedule_items

    @property
    def specific_subscriptions(self):
        """Gets the specific_subscriptions of this CreateInvoiceScheduleRequest.  # noqa: E501

        A list of the numbers of specific subscriptions associated with the invoice schedule.  - If the subscriptions specified in this field belong to the orders specified in the `orders` field, only the specific subscriptions instead of the orders are associated with the invoice schedule.  - If only the `orders` field is specified, all the subscriptions from the order are associated with the invoice schedule.  Example: ``` {   \"orders\": [     \"O-00000001\", \"O-00000002\"   ],   \"specificSubscriptions\": [     {       \"orderKey\": \"O-00000001\",       \"subscriptionKey\": \"S-00000001\"     }   ] } ``` - For the order with number O-00000001, only subscription S-00000001 contained in the order is associated with the invoice schedule. - For the order with number O-00000002, all subscriptions contained in the order are associated with the invoice schedule.   # noqa: E501

        :return: The specific_subscriptions of this CreateInvoiceScheduleRequest.  # noqa: E501
        :rtype: list[InvoiceScheduleSubscription]
        """
        return self._specific_subscriptions

    @specific_subscriptions.setter
    def specific_subscriptions(self, specific_subscriptions):
        """Sets the specific_subscriptions of this CreateInvoiceScheduleRequest.

        A list of the numbers of specific subscriptions associated with the invoice schedule.  - If the subscriptions specified in this field belong to the orders specified in the `orders` field, only the specific subscriptions instead of the orders are associated with the invoice schedule.  - If only the `orders` field is specified, all the subscriptions from the order are associated with the invoice schedule.  Example: ``` {   \"orders\": [     \"O-00000001\", \"O-00000002\"   ],   \"specificSubscriptions\": [     {       \"orderKey\": \"O-00000001\",       \"subscriptionKey\": \"S-00000001\"     }   ] } ``` - For the order with number O-00000001, only subscription S-00000001 contained in the order is associated with the invoice schedule. - For the order with number O-00000002, all subscriptions contained in the order are associated with the invoice schedule.   # noqa: E501

        :param specific_subscriptions: The specific_subscriptions of this CreateInvoiceScheduleRequest.  # noqa: E501
        :type: list[InvoiceScheduleSubscription]
        """

        self._specific_subscriptions = specific_subscriptions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateInvoiceScheduleRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateInvoiceScheduleRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
