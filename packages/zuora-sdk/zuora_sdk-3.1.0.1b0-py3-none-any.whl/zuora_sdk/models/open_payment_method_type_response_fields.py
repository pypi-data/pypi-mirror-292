# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class OpenPaymentMethodTypeResponseFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'checksum': 'bool',
        'default_value': 'str',
        'description': 'str',
        'editable': 'bool',
        'index': 'int',
        'label': 'str',
        'max_length': 'int',
        'min_length': 'int',
        'name': 'str',
        'representer': 'bool',
        'required': 'bool',
        'type': 'OpenPaymentMethodTypeFieldsType',
        'visible': 'bool'
    }

    attribute_map = {
        'checksum': 'checksum',
        'default_value': 'defaultValue',
        'description': 'description',
        'editable': 'editable',
        'index': 'index',
        'label': 'label',
        'max_length': 'maxLength',
        'min_length': 'minLength',
        'name': 'name',
        'representer': 'representer',
        'required': 'required',
        'type': 'type',
        'visible': 'visible'
    }

    def __init__(self, checksum=None, default_value=None, description=None, editable=None, index=None, label=None, max_length=None, min_length=None, name=None, representer=None, required=None, type=None, visible=None):  # noqa: E501
        """OpenPaymentMethodTypeResponseFields - a model defined in Swagger"""  # noqa: E501
        self._checksum = None
        self._default_value = None
        self._description = None
        self._editable = None
        self._index = None
        self._label = None
        self._max_length = None
        self._min_length = None
        self._name = None
        self._representer = None
        self._required = None
        self._type = None
        self._visible = None
        self.discriminator = None
        if checksum is not None:
            self.checksum = checksum
        if default_value is not None:
            self.default_value = default_value
        if description is not None:
            self.description = description
        if editable is not None:
            self.editable = editable
        if index is not None:
            self.index = index
        if label is not None:
            self.label = label
        if max_length is not None:
            self.max_length = max_length
        if min_length is not None:
            self.min_length = min_length
        if name is not None:
            self.name = name
        if representer is not None:
            self.representer = representer
        if required is not None:
            self.required = required
        if type is not None:
            self.type = type
        if visible is not None:
            self.visible = visible

    @property
    def checksum(self):
        """Gets the checksum of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        The checksum value of a payment method is used to identify if this payment method is the same as another one, or if this payment method is altered to another new payment method.  For example, if you select the credit card number and expiration date as the checksum fields for the CreditCard payment method type, when you modified the expiration date, Zuora considers this payment method as a different payment method compared to the original one.   # noqa: E501

        :return: The checksum of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: bool
        """
        return self._checksum

    @checksum.setter
    def checksum(self, checksum):
        """Sets the checksum of this OpenPaymentMethodTypeResponseFields.

        The checksum value of a payment method is used to identify if this payment method is the same as another one, or if this payment method is altered to another new payment method.  For example, if you select the credit card number and expiration date as the checksum fields for the CreditCard payment method type, when you modified the expiration date, Zuora considers this payment method as a different payment method compared to the original one.   # noqa: E501

        :param checksum: The checksum of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: bool
        """

        self._checksum = checksum

    @property
    def default_value(self):
        """Gets the default_value of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        The default value of the field.   # noqa: E501

        :return: The default_value of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this OpenPaymentMethodTypeResponseFields.

        The default value of the field.   # noqa: E501

        :param default_value: The default_value of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: str
        """

        self._default_value = default_value

    @property
    def description(self):
        """Gets the description of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        An explanation of this field.   # noqa: E501

        :return: The description of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this OpenPaymentMethodTypeResponseFields.

        An explanation of this field.   # noqa: E501

        :param description: The description of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def editable(self):
        """Gets the editable of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        Specify `true` if this field can be updated through PUT API or UI.  Note: If `editable` is set to `false`, you can specify the value of this field in the UI and POST API when creating a payment method. However, after you created the payment method, you cannot edit this field through PUT API or UI.   # noqa: E501

        :return: The editable of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: bool
        """
        return self._editable

    @editable.setter
    def editable(self, editable):
        """Sets the editable of this OpenPaymentMethodTypeResponseFields.

        Specify `true` if this field can be updated through PUT API or UI.  Note: If `editable` is set to `false`, you can specify the value of this field in the UI and POST API when creating a payment method. However, after you created the payment method, you cannot edit this field through PUT API or UI.   # noqa: E501

        :param editable: The editable of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: bool
        """

        self._editable = editable

    @property
    def index(self):
        """Gets the index of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        The order of the field in this type, starting from 1.   # noqa: E501

        :return: The index of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this OpenPaymentMethodTypeResponseFields.

        The order of the field in this type, starting from 1.   # noqa: E501

        :param index: The index of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: int
        """

        self._index = index

    @property
    def label(self):
        """Gets the label of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        The label that is used to refer to this field in the Zuora UI.   # noqa: E501

        :return: The label of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this OpenPaymentMethodTypeResponseFields.

        The label that is used to refer to this field in the Zuora UI.   # noqa: E501

        :param label: The label of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: str
        """

        self._label = label

    @property
    def max_length(self):
        """Gets the max_length of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        A maximum length limitation of the field value.   # noqa: E501

        :return: The max_length of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: int
        """
        return self._max_length

    @max_length.setter
    def max_length(self, max_length):
        """Sets the max_length of this OpenPaymentMethodTypeResponseFields.

        A maximum length limitation of the field value.   # noqa: E501

        :param max_length: The max_length of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: int
        """

        self._max_length = max_length

    @property
    def min_length(self):
        """Gets the min_length of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        A minimal length limitation of the field value.   # noqa: E501

        :return: The min_length of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: int
        """
        return self._min_length

    @min_length.setter
    def min_length(self, min_length):
        """Sets the min_length of this OpenPaymentMethodTypeResponseFields.

        A minimal length limitation of the field value.   # noqa: E501

        :param min_length: The min_length of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: int
        """

        self._min_length = min_length

    @property
    def name(self):
        """Gets the name of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        The API name of this field. It must be uinique.   # noqa: E501

        :return: The name of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OpenPaymentMethodTypeResponseFields.

        The API name of this field. It must be uinique.   # noqa: E501

        :param name: The name of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def representer(self):
        """Gets the representer of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        This flag determines whether this field will be used for identifying this payment method in the Zuora UI. The field will be shown in the Payment Method field in the UI.   # noqa: E501

        :return: The representer of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: bool
        """
        return self._representer

    @representer.setter
    def representer(self, representer):
        """Sets the representer of this OpenPaymentMethodTypeResponseFields.

        This flag determines whether this field will be used for identifying this payment method in the Zuora UI. The field will be shown in the Payment Method field in the UI.   # noqa: E501

        :param representer: The representer of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: bool
        """

        self._representer = representer

    @property
    def required(self):
        """Gets the required of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        Specify whether this field is required.   # noqa: E501

        :return: The required of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: bool
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this OpenPaymentMethodTypeResponseFields.

        Specify whether this field is required.   # noqa: E501

        :param required: The required of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: bool
        """

        self._required = required

    @property
    def type(self):
        """Gets the type of this OpenPaymentMethodTypeResponseFields.  # noqa: E501


        :return: The type of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: OpenPaymentMethodTypeFieldsType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OpenPaymentMethodTypeResponseFields.


        :param type: The type of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: OpenPaymentMethodTypeFieldsType
        """

        self._type = type

    @property
    def visible(self):
        """Gets the visible of this OpenPaymentMethodTypeResponseFields.  # noqa: E501

        Specify `true` if this field can be retrieved through GET API or UI for displaying payment method details.  Notes:    - If `visible` is set to `false`, you can still specify the value of this field in the UI and POST API when creating the payment method.   - If `visible` is set to `false` and `editable` is set to `true`, this field is not accessible through GET API or UI for displaying details, but you can still see it and edit the value in the UI and PUT API when updating this payment method.   # noqa: E501

        :return: The visible of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :rtype: bool
        """
        return self._visible

    @visible.setter
    def visible(self, visible):
        """Sets the visible of this OpenPaymentMethodTypeResponseFields.

        Specify `true` if this field can be retrieved through GET API or UI for displaying payment method details.  Notes:    - If `visible` is set to `false`, you can still specify the value of this field in the UI and POST API when creating the payment method.   - If `visible` is set to `false` and `editable` is set to `true`, this field is not accessible through GET API or UI for displaying details, but you can still see it and edit the value in the UI and PUT API when updating this payment method.   # noqa: E501

        :param visible: The visible of this OpenPaymentMethodTypeResponseFields.  # noqa: E501
        :type: bool
        """

        self._visible = visible

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OpenPaymentMethodTypeResponseFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OpenPaymentMethodTypeResponseFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
