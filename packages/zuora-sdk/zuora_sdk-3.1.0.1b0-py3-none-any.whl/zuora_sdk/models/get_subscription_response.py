# coding: utf-8

"""
    Zuora API Reference

    REST API reference for the Zuora Billing, Payments, and Central Platform! Check out the [REST API Overview](https://www.zuora.com/developer/api-references/api/overview/).  # noqa: E501

    OpenAPI spec version: 2024-05-20
    Contact: docs@zuora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from zuora_sdk.models.common_response import CommonResponse  # noqa: F401,E501

class GetSubscriptionResponse(CommonResponse):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'subscription_number': 'str',
        'account_id': 'str',
        'account_name': 'str',
        'account_number': 'str',
        'auto_renew': 'bool',
        'bill_to_contact': 'Contact',
        'cancel_reason': 'str',
        'contract_effective_date': 'date',
        'contracted_mrr': 'float',
        'current_term': 'int',
        'current_term_period_type': 'TermPeriodType',
        'customer_acceptance_date': 'date',
        'currency': 'str',
        'create_time': 'str',
        'update_time': 'str',
        'externally_managed_by': 'ExternallyManagedBy',
        'initial_term': 'int',
        'initial_term_period_type': 'TermPeriodType',
        'invoice_group_number': 'str',
        'invoice_owner_account_id': 'str',
        'invoice_owner_account_name': 'str',
        'invoice_owner_account_number': 'str',
        'invoice_schedule_id': 'str',
        'invoice_separately': 'str',
        'invoice_template_id': 'str',
        'invoice_template_name': 'str',
        'is_latest_version': 'bool',
        'last_booking_date': 'date',
        'notes': 'str',
        'order_number': 'str',
        'payment_term': 'str',
        'rate_plans': 'list[SubscriptionRatePlan]',
        'renewal_setting': 'str',
        'renewal_term': 'int',
        'renewal_term_period_type': 'TermPeriodType',
        'revision': 'str',
        'sequence_set_id': 'str',
        'sequence_set_name': 'str',
        'service_activation_date': 'date',
        'sold_to_contact': 'Contact',
        'status': 'SubscriptionStatus',
        'status_history': 'list[SubscriptionStatusHistory]',
        'subscription_start_date': 'date',
        'subscription_end_date': 'date',
        'term_end_date': 'date',
        'term_start_date': 'date',
        'term_type': 'str',
        'total_contracted_value': 'float',
        'version': 'int',
        'contracted_net_mrr': 'float',
        'as_of_day_gross_mrr': 'float',
        'as_of_day_net_mrr': 'float',
        'account_owner_details': 'AccountBasicInfo',
        'invoice_owner_account_details': 'AccountBasicInfo',
        'cpq_bundle_json_id__qt': 'str',
        'opportunity_close_date__qt': 'date',
        'opportunity_name__qt': 'str',
        'quote_business_type__qt': 'str',
        'quote_number__qt': 'str',
        'quote_type__qt': 'str',
        'integration_id__ns': 'str',
        'integration_status__ns': 'str',
        'project__ns': 'str',
        'sales_order__ns': 'str',
        'sync_date__ns': 'str'
    }
    if hasattr(CommonResponse, "swagger_types"):
        swagger_types.update(CommonResponse.swagger_types)

    attribute_map = {
        'id': 'id',
        'subscription_number': 'subscriptionNumber',
        'account_id': 'accountId',
        'account_name': 'accountName',
        'account_number': 'accountNumber',
        'auto_renew': 'autoRenew',
        'bill_to_contact': 'billToContact',
        'cancel_reason': 'cancelReason',
        'contract_effective_date': 'contractEffectiveDate',
        'contracted_mrr': 'contractedMrr',
        'current_term': 'currentTerm',
        'current_term_period_type': 'currentTermPeriodType',
        'customer_acceptance_date': 'customerAcceptanceDate',
        'currency': 'currency',
        'create_time': 'createTime',
        'update_time': 'updateTime',
        'externally_managed_by': 'externallyManagedBy',
        'initial_term': 'initialTerm',
        'initial_term_period_type': 'initialTermPeriodType',
        'invoice_group_number': 'invoiceGroupNumber',
        'invoice_owner_account_id': 'invoiceOwnerAccountId',
        'invoice_owner_account_name': 'invoiceOwnerAccountName',
        'invoice_owner_account_number': 'invoiceOwnerAccountNumber',
        'invoice_schedule_id': 'invoiceScheduleId',
        'invoice_separately': 'invoiceSeparately',
        'invoice_template_id': 'invoiceTemplateId',
        'invoice_template_name': 'invoiceTemplateName',
        'is_latest_version': 'isLatestVersion',
        'last_booking_date': 'lastBookingDate',
        'notes': 'notes',
        'order_number': 'orderNumber',
        'payment_term': 'paymentTerm',
        'rate_plans': 'ratePlans',
        'renewal_setting': 'renewalSetting',
        'renewal_term': 'renewalTerm',
        'renewal_term_period_type': 'renewalTermPeriodType',
        'revision': 'revision',
        'sequence_set_id': 'sequenceSetId',
        'sequence_set_name': 'sequenceSetName',
        'service_activation_date': 'serviceActivationDate',
        'sold_to_contact': 'soldToContact',
        'status': 'status',
        'status_history': 'statusHistory',
        'subscription_start_date': 'subscriptionStartDate',
        'subscription_end_date': 'subscriptionEndDate',
        'term_end_date': 'termEndDate',
        'term_start_date': 'termStartDate',
        'term_type': 'termType',
        'total_contracted_value': 'totalContractedValue',
        'version': 'version',
        'contracted_net_mrr': 'contractedNetMrr',
        'as_of_day_gross_mrr': 'asOfDayGrossMrr',
        'as_of_day_net_mrr': 'asOfDayNetMrr',
        'account_owner_details': 'accountOwnerDetails',
        'invoice_owner_account_details': 'invoiceOwnerAccountDetails',
        'cpq_bundle_json_id__qt': 'CpqBundleJsonId__QT',
        'opportunity_close_date__qt': 'OpportunityCloseDate__QT',
        'opportunity_name__qt': 'OpportunityName__QT',
        'quote_business_type__qt': 'QuoteBusinessType__QT',
        'quote_number__qt': 'QuoteNumber__QT',
        'quote_type__qt': 'QuoteType__QT',
        'integration_id__ns': 'IntegrationId__NS',
        'integration_status__ns': 'IntegrationStatus__NS',
        'project__ns': 'Project__NS',
        'sales_order__ns': 'SalesOrder__NS',
        'sync_date__ns': 'SyncDate__NS'
    }
    if hasattr(CommonResponse, "attribute_map"):
        attribute_map.update(CommonResponse.attribute_map)

    def __init__(self, id=None, subscription_number=None, account_id=None, account_name=None, account_number=None, auto_renew=None, bill_to_contact=None, cancel_reason=None, contract_effective_date=None, contracted_mrr=None, current_term=None, current_term_period_type=None, customer_acceptance_date=None, currency=None, create_time=None, update_time=None, externally_managed_by=None, initial_term=None, initial_term_period_type=None, invoice_group_number=None, invoice_owner_account_id=None, invoice_owner_account_name=None, invoice_owner_account_number=None, invoice_schedule_id=None, invoice_separately=None, invoice_template_id=None, invoice_template_name=None, is_latest_version=None, last_booking_date=None, notes=None, order_number=None, payment_term=None, rate_plans=None, renewal_setting=None, renewal_term=None, renewal_term_period_type=None, revision=None, sequence_set_id=None, sequence_set_name=None, service_activation_date=None, sold_to_contact=None, status=None, status_history=None, subscription_start_date=None, subscription_end_date=None, term_end_date=None, term_start_date=None, term_type=None, total_contracted_value=None, version=None, contracted_net_mrr=None, as_of_day_gross_mrr=None, as_of_day_net_mrr=None, account_owner_details=None, invoice_owner_account_details=None, cpq_bundle_json_id__qt=None, opportunity_close_date__qt=None, opportunity_name__qt=None, quote_business_type__qt=None, quote_number__qt=None, quote_type__qt=None, integration_id__ns=None, integration_status__ns=None, project__ns=None, sales_order__ns=None, sync_date__ns=None, *args, **kwargs):  # noqa: E501
        """GetSubscriptionResponse - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._subscription_number = None
        self._account_id = None
        self._account_name = None
        self._account_number = None
        self._auto_renew = None
        self._bill_to_contact = None
        self._cancel_reason = None
        self._contract_effective_date = None
        self._contracted_mrr = None
        self._current_term = None
        self._current_term_period_type = None
        self._customer_acceptance_date = None
        self._currency = None
        self._create_time = None
        self._update_time = None
        self._externally_managed_by = None
        self._initial_term = None
        self._initial_term_period_type = None
        self._invoice_group_number = None
        self._invoice_owner_account_id = None
        self._invoice_owner_account_name = None
        self._invoice_owner_account_number = None
        self._invoice_schedule_id = None
        self._invoice_separately = None
        self._invoice_template_id = None
        self._invoice_template_name = None
        self._is_latest_version = None
        self._last_booking_date = None
        self._notes = None
        self._order_number = None
        self._payment_term = None
        self._rate_plans = None
        self._renewal_setting = None
        self._renewal_term = None
        self._renewal_term_period_type = None
        self._revision = None
        self._sequence_set_id = None
        self._sequence_set_name = None
        self._service_activation_date = None
        self._sold_to_contact = None
        self._status = None
        self._status_history = None
        self._subscription_start_date = None
        self._subscription_end_date = None
        self._term_end_date = None
        self._term_start_date = None
        self._term_type = None
        self._total_contracted_value = None
        self._version = None
        self._contracted_net_mrr = None
        self._as_of_day_gross_mrr = None
        self._as_of_day_net_mrr = None
        self._account_owner_details = None
        self._invoice_owner_account_details = None
        self._cpq_bundle_json_id__qt = None
        self._opportunity_close_date__qt = None
        self._opportunity_name__qt = None
        self._quote_business_type__qt = None
        self._quote_number__qt = None
        self._quote_type__qt = None
        self._integration_id__ns = None
        self._integration_status__ns = None
        self._project__ns = None
        self._sales_order__ns = None
        self._sync_date__ns = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if subscription_number is not None:
            self.subscription_number = subscription_number
        if account_id is not None:
            self.account_id = account_id
        if account_name is not None:
            self.account_name = account_name
        if account_number is not None:
            self.account_number = account_number
        if auto_renew is not None:
            self.auto_renew = auto_renew
        if bill_to_contact is not None:
            self.bill_to_contact = bill_to_contact
        if cancel_reason is not None:
            self.cancel_reason = cancel_reason
        if contract_effective_date is not None:
            self.contract_effective_date = contract_effective_date
        if contracted_mrr is not None:
            self.contracted_mrr = contracted_mrr
        if current_term is not None:
            self.current_term = current_term
        if current_term_period_type is not None:
            self.current_term_period_type = current_term_period_type
        if customer_acceptance_date is not None:
            self.customer_acceptance_date = customer_acceptance_date
        if currency is not None:
            self.currency = currency
        if create_time is not None:
            self.create_time = create_time
        if update_time is not None:
            self.update_time = update_time
        if externally_managed_by is not None:
            self.externally_managed_by = externally_managed_by
        if initial_term is not None:
            self.initial_term = initial_term
        if initial_term_period_type is not None:
            self.initial_term_period_type = initial_term_period_type
        if invoice_group_number is not None:
            self.invoice_group_number = invoice_group_number
        if invoice_owner_account_id is not None:
            self.invoice_owner_account_id = invoice_owner_account_id
        if invoice_owner_account_name is not None:
            self.invoice_owner_account_name = invoice_owner_account_name
        if invoice_owner_account_number is not None:
            self.invoice_owner_account_number = invoice_owner_account_number
        if invoice_schedule_id is not None:
            self.invoice_schedule_id = invoice_schedule_id
        if invoice_separately is not None:
            self.invoice_separately = invoice_separately
        if invoice_template_id is not None:
            self.invoice_template_id = invoice_template_id
        if invoice_template_name is not None:
            self.invoice_template_name = invoice_template_name
        if is_latest_version is not None:
            self.is_latest_version = is_latest_version
        if last_booking_date is not None:
            self.last_booking_date = last_booking_date
        if notes is not None:
            self.notes = notes
        if order_number is not None:
            self.order_number = order_number
        if payment_term is not None:
            self.payment_term = payment_term
        if rate_plans is not None:
            self.rate_plans = rate_plans
        if renewal_setting is not None:
            self.renewal_setting = renewal_setting
        if renewal_term is not None:
            self.renewal_term = renewal_term
        if renewal_term_period_type is not None:
            self.renewal_term_period_type = renewal_term_period_type
        if revision is not None:
            self.revision = revision
        if sequence_set_id is not None:
            self.sequence_set_id = sequence_set_id
        if sequence_set_name is not None:
            self.sequence_set_name = sequence_set_name
        if service_activation_date is not None:
            self.service_activation_date = service_activation_date
        if sold_to_contact is not None:
            self.sold_to_contact = sold_to_contact
        if status is not None:
            self.status = status
        if status_history is not None:
            self.status_history = status_history
        if subscription_start_date is not None:
            self.subscription_start_date = subscription_start_date
        if subscription_end_date is not None:
            self.subscription_end_date = subscription_end_date
        if term_end_date is not None:
            self.term_end_date = term_end_date
        if term_start_date is not None:
            self.term_start_date = term_start_date
        if term_type is not None:
            self.term_type = term_type
        if total_contracted_value is not None:
            self.total_contracted_value = total_contracted_value
        if version is not None:
            self.version = version
        if contracted_net_mrr is not None:
            self.contracted_net_mrr = contracted_net_mrr
        if as_of_day_gross_mrr is not None:
            self.as_of_day_gross_mrr = as_of_day_gross_mrr
        if as_of_day_net_mrr is not None:
            self.as_of_day_net_mrr = as_of_day_net_mrr
        if account_owner_details is not None:
            self.account_owner_details = account_owner_details
        if invoice_owner_account_details is not None:
            self.invoice_owner_account_details = invoice_owner_account_details
        if cpq_bundle_json_id__qt is not None:
            self.cpq_bundle_json_id__qt = cpq_bundle_json_id__qt
        if opportunity_close_date__qt is not None:
            self.opportunity_close_date__qt = opportunity_close_date__qt
        if opportunity_name__qt is not None:
            self.opportunity_name__qt = opportunity_name__qt
        if quote_business_type__qt is not None:
            self.quote_business_type__qt = quote_business_type__qt
        if quote_number__qt is not None:
            self.quote_number__qt = quote_number__qt
        if quote_type__qt is not None:
            self.quote_type__qt = quote_type__qt
        if integration_id__ns is not None:
            self.integration_id__ns = integration_id__ns
        if integration_status__ns is not None:
            self.integration_status__ns = integration_status__ns
        if project__ns is not None:
            self.project__ns = project__ns
        if sales_order__ns is not None:
            self.sales_order__ns = sales_order__ns
        if sync_date__ns is not None:
            self.sync_date__ns = sync_date__ns
        CommonResponse.__init__(self, *args, **kwargs)

    @property
    def id(self):
        """Gets the id of this GetSubscriptionResponse.  # noqa: E501

        Subscription ID.   # noqa: E501

        :return: The id of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetSubscriptionResponse.

        Subscription ID.   # noqa: E501

        :param id: The id of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def subscription_number(self):
        """Gets the subscription_number of this GetSubscriptionResponse.  # noqa: E501

        Subscription number.  # noqa: E501

        :return: The subscription_number of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._subscription_number

    @subscription_number.setter
    def subscription_number(self, subscription_number):
        """Sets the subscription_number of this GetSubscriptionResponse.

        Subscription number.  # noqa: E501

        :param subscription_number: The subscription_number of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._subscription_number = subscription_number

    @property
    def account_id(self):
        """Gets the account_id of this GetSubscriptionResponse.  # noqa: E501

        The ID of the account associated with this subscription.  # noqa: E501

        :return: The account_id of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GetSubscriptionResponse.

        The ID of the account associated with this subscription.  # noqa: E501

        :param account_id: The account_id of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def account_name(self):
        """Gets the account_name of this GetSubscriptionResponse.  # noqa: E501

        The name of the account associated with this subscription.  # noqa: E501

        :return: The account_name of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this GetSubscriptionResponse.

        The name of the account associated with this subscription.  # noqa: E501

        :param account_name: The account_name of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._account_name = account_name

    @property
    def account_number(self):
        """Gets the account_number of this GetSubscriptionResponse.  # noqa: E501

        The number of the account associated with this subscription.  # noqa: E501

        :return: The account_number of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this GetSubscriptionResponse.

        The number of the account associated with this subscription.  # noqa: E501

        :param account_number: The account_number of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._account_number = account_number

    @property
    def auto_renew(self):
        """Gets the auto_renew of this GetSubscriptionResponse.  # noqa: E501

        If `true`, the subscription automatically renews at the end of the term. Default is `false`.   # noqa: E501

        :return: The auto_renew of this GetSubscriptionResponse.  # noqa: E501
        :rtype: bool
        """
        return self._auto_renew

    @auto_renew.setter
    def auto_renew(self, auto_renew):
        """Sets the auto_renew of this GetSubscriptionResponse.

        If `true`, the subscription automatically renews at the end of the term. Default is `false`.   # noqa: E501

        :param auto_renew: The auto_renew of this GetSubscriptionResponse.  # noqa: E501
        :type: bool
        """

        self._auto_renew = auto_renew

    @property
    def bill_to_contact(self):
        """Gets the bill_to_contact of this GetSubscriptionResponse.  # noqa: E501


        :return: The bill_to_contact of this GetSubscriptionResponse.  # noqa: E501
        :rtype: Contact
        """
        return self._bill_to_contact

    @bill_to_contact.setter
    def bill_to_contact(self, bill_to_contact):
        """Sets the bill_to_contact of this GetSubscriptionResponse.


        :param bill_to_contact: The bill_to_contact of this GetSubscriptionResponse.  # noqa: E501
        :type: Contact
        """

        self._bill_to_contact = bill_to_contact

    @property
    def cancel_reason(self):
        """Gets the cancel_reason of this GetSubscriptionResponse.  # noqa: E501

        The reason for a subscription cancellation copied from the `changeReason` field of a Cancel Subscription order action.   This field contains valid value only if a subscription is cancelled through the Orders UI or API. Otherwise, the value for this field will always be `null`.   # noqa: E501

        :return: The cancel_reason of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._cancel_reason

    @cancel_reason.setter
    def cancel_reason(self, cancel_reason):
        """Sets the cancel_reason of this GetSubscriptionResponse.

        The reason for a subscription cancellation copied from the `changeReason` field of a Cancel Subscription order action.   This field contains valid value only if a subscription is cancelled through the Orders UI or API. Otherwise, the value for this field will always be `null`.   # noqa: E501

        :param cancel_reason: The cancel_reason of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._cancel_reason = cancel_reason

    @property
    def contract_effective_date(self):
        """Gets the contract_effective_date of this GetSubscriptionResponse.  # noqa: E501

        Effective contract date for this subscription, as yyyy-mm-dd.   # noqa: E501

        :return: The contract_effective_date of this GetSubscriptionResponse.  # noqa: E501
        :rtype: date
        """
        return self._contract_effective_date

    @contract_effective_date.setter
    def contract_effective_date(self, contract_effective_date):
        """Sets the contract_effective_date of this GetSubscriptionResponse.

        Effective contract date for this subscription, as yyyy-mm-dd.   # noqa: E501

        :param contract_effective_date: The contract_effective_date of this GetSubscriptionResponse.  # noqa: E501
        :type: date
        """

        self._contract_effective_date = contract_effective_date

    @property
    def contracted_mrr(self):
        """Gets the contracted_mrr of this GetSubscriptionResponse.  # noqa: E501

        Monthly recurring revenue of the subscription.   # noqa: E501

        :return: The contracted_mrr of this GetSubscriptionResponse.  # noqa: E501
        :rtype: float
        """
        return self._contracted_mrr

    @contracted_mrr.setter
    def contracted_mrr(self, contracted_mrr):
        """Sets the contracted_mrr of this GetSubscriptionResponse.

        Monthly recurring revenue of the subscription.   # noqa: E501

        :param contracted_mrr: The contracted_mrr of this GetSubscriptionResponse.  # noqa: E501
        :type: float
        """

        self._contracted_mrr = contracted_mrr

    @property
    def current_term(self):
        """Gets the current_term of this GetSubscriptionResponse.  # noqa: E501

        The length of the period for the current subscription term.   # noqa: E501

        :return: The current_term of this GetSubscriptionResponse.  # noqa: E501
        :rtype: int
        """
        return self._current_term

    @current_term.setter
    def current_term(self, current_term):
        """Sets the current_term of this GetSubscriptionResponse.

        The length of the period for the current subscription term.   # noqa: E501

        :param current_term: The current_term of this GetSubscriptionResponse.  # noqa: E501
        :type: int
        """

        self._current_term = current_term

    @property
    def current_term_period_type(self):
        """Gets the current_term_period_type of this GetSubscriptionResponse.  # noqa: E501


        :return: The current_term_period_type of this GetSubscriptionResponse.  # noqa: E501
        :rtype: TermPeriodType
        """
        return self._current_term_period_type

    @current_term_period_type.setter
    def current_term_period_type(self, current_term_period_type):
        """Sets the current_term_period_type of this GetSubscriptionResponse.


        :param current_term_period_type: The current_term_period_type of this GetSubscriptionResponse.  # noqa: E501
        :type: TermPeriodType
        """

        self._current_term_period_type = current_term_period_type

    @property
    def customer_acceptance_date(self):
        """Gets the customer_acceptance_date of this GetSubscriptionResponse.  # noqa: E501

        The date on which the services or products within a subscription have been accepted by the customer, as yyyy-mm-dd.   # noqa: E501

        :return: The customer_acceptance_date of this GetSubscriptionResponse.  # noqa: E501
        :rtype: date
        """
        return self._customer_acceptance_date

    @customer_acceptance_date.setter
    def customer_acceptance_date(self, customer_acceptance_date):
        """Sets the customer_acceptance_date of this GetSubscriptionResponse.

        The date on which the services or products within a subscription have been accepted by the customer, as yyyy-mm-dd.   # noqa: E501

        :param customer_acceptance_date: The customer_acceptance_date of this GetSubscriptionResponse.  # noqa: E501
        :type: date
        """

        self._customer_acceptance_date = customer_acceptance_date

    @property
    def currency(self):
        """Gets the currency of this GetSubscriptionResponse.  # noqa: E501

        The currency of the subscription.   # noqa: E501

        :return: The currency of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this GetSubscriptionResponse.

        The currency of the subscription.   # noqa: E501

        :param currency: The currency of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._currency = currency

    @property
    def create_time(self):
        """Gets the create_time of this GetSubscriptionResponse.  # noqa: E501

        The date when the subscription was created, as yyyy-mm-dd HH:MM:SS.   # noqa: E501

        :return: The create_time of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GetSubscriptionResponse.

        The date when the subscription was created, as yyyy-mm-dd HH:MM:SS.   # noqa: E501

        :param create_time: The create_time of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._create_time = create_time

    @property
    def update_time(self):
        """Gets the update_time of this GetSubscriptionResponse.  # noqa: E501

        The date when the subscription was last updated, as yyyy-mm-dd HH:MM:SS.   # noqa: E501

        :return: The update_time of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GetSubscriptionResponse.

        The date when the subscription was last updated, as yyyy-mm-dd HH:MM:SS.   # noqa: E501

        :param update_time: The update_time of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._update_time = update_time

    @property
    def externally_managed_by(self):
        """Gets the externally_managed_by of this GetSubscriptionResponse.  # noqa: E501


        :return: The externally_managed_by of this GetSubscriptionResponse.  # noqa: E501
        :rtype: ExternallyManagedBy
        """
        return self._externally_managed_by

    @externally_managed_by.setter
    def externally_managed_by(self, externally_managed_by):
        """Sets the externally_managed_by of this GetSubscriptionResponse.


        :param externally_managed_by: The externally_managed_by of this GetSubscriptionResponse.  # noqa: E501
        :type: ExternallyManagedBy
        """

        self._externally_managed_by = externally_managed_by

    @property
    def initial_term(self):
        """Gets the initial_term of this GetSubscriptionResponse.  # noqa: E501

        The length of the period for the first subscription term.   # noqa: E501

        :return: The initial_term of this GetSubscriptionResponse.  # noqa: E501
        :rtype: int
        """
        return self._initial_term

    @initial_term.setter
    def initial_term(self, initial_term):
        """Sets the initial_term of this GetSubscriptionResponse.

        The length of the period for the first subscription term.   # noqa: E501

        :param initial_term: The initial_term of this GetSubscriptionResponse.  # noqa: E501
        :type: int
        """

        self._initial_term = initial_term

    @property
    def initial_term_period_type(self):
        """Gets the initial_term_period_type of this GetSubscriptionResponse.  # noqa: E501


        :return: The initial_term_period_type of this GetSubscriptionResponse.  # noqa: E501
        :rtype: TermPeriodType
        """
        return self._initial_term_period_type

    @initial_term_period_type.setter
    def initial_term_period_type(self, initial_term_period_type):
        """Sets the initial_term_period_type of this GetSubscriptionResponse.


        :param initial_term_period_type: The initial_term_period_type of this GetSubscriptionResponse.  # noqa: E501
        :type: TermPeriodType
        """

        self._initial_term_period_type = initial_term_period_type

    @property
    def invoice_group_number(self):
        """Gets the invoice_group_number of this GetSubscriptionResponse.  # noqa: E501

        The number of invoice group associated with the subscription.  **Note**: This field is available only if you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature enabled.   # noqa: E501

        :return: The invoice_group_number of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._invoice_group_number

    @invoice_group_number.setter
    def invoice_group_number(self, invoice_group_number):
        """Sets the invoice_group_number of this GetSubscriptionResponse.

        The number of invoice group associated with the subscription.  **Note**: This field is available only if you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature enabled.   # noqa: E501

        :param invoice_group_number: The invoice_group_number of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._invoice_group_number = invoice_group_number

    @property
    def invoice_owner_account_id(self):
        """Gets the invoice_owner_account_id of this GetSubscriptionResponse.  # noqa: E501


        :return: The invoice_owner_account_id of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._invoice_owner_account_id

    @invoice_owner_account_id.setter
    def invoice_owner_account_id(self, invoice_owner_account_id):
        """Sets the invoice_owner_account_id of this GetSubscriptionResponse.


        :param invoice_owner_account_id: The invoice_owner_account_id of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._invoice_owner_account_id = invoice_owner_account_id

    @property
    def invoice_owner_account_name(self):
        """Gets the invoice_owner_account_name of this GetSubscriptionResponse.  # noqa: E501


        :return: The invoice_owner_account_name of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._invoice_owner_account_name

    @invoice_owner_account_name.setter
    def invoice_owner_account_name(self, invoice_owner_account_name):
        """Sets the invoice_owner_account_name of this GetSubscriptionResponse.


        :param invoice_owner_account_name: The invoice_owner_account_name of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._invoice_owner_account_name = invoice_owner_account_name

    @property
    def invoice_owner_account_number(self):
        """Gets the invoice_owner_account_number of this GetSubscriptionResponse.  # noqa: E501


        :return: The invoice_owner_account_number of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._invoice_owner_account_number

    @invoice_owner_account_number.setter
    def invoice_owner_account_number(self, invoice_owner_account_number):
        """Sets the invoice_owner_account_number of this GetSubscriptionResponse.


        :param invoice_owner_account_number: The invoice_owner_account_number of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._invoice_owner_account_number = invoice_owner_account_number

    @property
    def invoice_schedule_id(self):
        """Gets the invoice_schedule_id of this GetSubscriptionResponse.  # noqa: E501

        The ID of the invoice schedule associated with the subscription.  If multiple invoice schedules are created for different terms of a subscription, this field stores the latest invoice schedule.  **Note**: This field is available only if you have the <a href=\"https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Billing_Schedule\" target=\"_blank\">Billing Schedule</a> feature in the **Early Adopter** phase enabled.   # noqa: E501

        :return: The invoice_schedule_id of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._invoice_schedule_id

    @invoice_schedule_id.setter
    def invoice_schedule_id(self, invoice_schedule_id):
        """Sets the invoice_schedule_id of this GetSubscriptionResponse.

        The ID of the invoice schedule associated with the subscription.  If multiple invoice schedules are created for different terms of a subscription, this field stores the latest invoice schedule.  **Note**: This field is available only if you have the <a href=\"https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Billing_Schedule\" target=\"_blank\">Billing Schedule</a> feature in the **Early Adopter** phase enabled.   # noqa: E501

        :param invoice_schedule_id: The invoice_schedule_id of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._invoice_schedule_id = invoice_schedule_id

    @property
    def invoice_separately(self):
        """Gets the invoice_separately of this GetSubscriptionResponse.  # noqa: E501

        Separates a single subscription from other subscriptions and creates an invoice for the subscription.   If the value is `true`, the subscription is billed separately from other subscriptions. If the value is `false`, the subscription is included with other subscriptions in the account invoice.   # noqa: E501

        :return: The invoice_separately of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._invoice_separately

    @invoice_separately.setter
    def invoice_separately(self, invoice_separately):
        """Sets the invoice_separately of this GetSubscriptionResponse.

        Separates a single subscription from other subscriptions and creates an invoice for the subscription.   If the value is `true`, the subscription is billed separately from other subscriptions. If the value is `false`, the subscription is included with other subscriptions in the account invoice.   # noqa: E501

        :param invoice_separately: The invoice_separately of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._invoice_separately = invoice_separately

    @property
    def invoice_template_id(self):
        """Gets the invoice_template_id of this GetSubscriptionResponse.  # noqa: E501

        The ID of the invoice template associated with the subscription.  **Note**:    - If you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature disabled, this field is unavailable in the request body and the value of this field is `null` in the response body.    - If you have the Flexible Billing Attributes feature enabled, and you do not specify this field in the request or you select **Default Template from Account** for this field during subscription creation, the value of this field is automatically set to `null` in the response body.   # noqa: E501

        :return: The invoice_template_id of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._invoice_template_id

    @invoice_template_id.setter
    def invoice_template_id(self, invoice_template_id):
        """Sets the invoice_template_id of this GetSubscriptionResponse.

        The ID of the invoice template associated with the subscription.  **Note**:    - If you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature disabled, this field is unavailable in the request body and the value of this field is `null` in the response body.    - If you have the Flexible Billing Attributes feature enabled, and you do not specify this field in the request or you select **Default Template from Account** for this field during subscription creation, the value of this field is automatically set to `null` in the response body.   # noqa: E501

        :param invoice_template_id: The invoice_template_id of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._invoice_template_id = invoice_template_id

    @property
    def invoice_template_name(self):
        """Gets the invoice_template_name of this GetSubscriptionResponse.  # noqa: E501

        The name of the invoice template associated with the subscription.  **Note**:    - If you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature disabled, the value of this field is `null` in the response body.    - If you have the Flexible Billing Attributes feature enabled, and you do not specify the `invoiceTemplateId` field in the request or you select **Default Template from Account** for the `invoiceTemplateId` field during subscription creation, the value of the `invoiceTemplateName` field is automatically set to `null` in the response body.      # noqa: E501

        :return: The invoice_template_name of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._invoice_template_name

    @invoice_template_name.setter
    def invoice_template_name(self, invoice_template_name):
        """Sets the invoice_template_name of this GetSubscriptionResponse.

        The name of the invoice template associated with the subscription.  **Note**:    - If you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature disabled, the value of this field is `null` in the response body.    - If you have the Flexible Billing Attributes feature enabled, and you do not specify the `invoiceTemplateId` field in the request or you select **Default Template from Account** for the `invoiceTemplateId` field during subscription creation, the value of the `invoiceTemplateName` field is automatically set to `null` in the response body.      # noqa: E501

        :param invoice_template_name: The invoice_template_name of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._invoice_template_name = invoice_template_name

    @property
    def is_latest_version(self):
        """Gets the is_latest_version of this GetSubscriptionResponse.  # noqa: E501

        If `true`, the current subscription object is the latest version.  # noqa: E501

        :return: The is_latest_version of this GetSubscriptionResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_latest_version

    @is_latest_version.setter
    def is_latest_version(self, is_latest_version):
        """Sets the is_latest_version of this GetSubscriptionResponse.

        If `true`, the current subscription object is the latest version.  # noqa: E501

        :param is_latest_version: The is_latest_version of this GetSubscriptionResponse.  # noqa: E501
        :type: bool
        """

        self._is_latest_version = is_latest_version

    @property
    def last_booking_date(self):
        """Gets the last_booking_date of this GetSubscriptionResponse.  # noqa: E501

        The last booking date of the subscription object. This field is writable only when the subscription is newly created as a first version subscription. You can override the date value when creating a subscription through the Subscribe and Amend API or the subscription creation UI (non-Orders). Otherwise, the default value `today` is set per the user's timezone. The value of this field is as follows: * For a new subscription created by the [Subscribe and Amend APIs](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization/Orders_Migration_Guidance#Subscribe_and_Amend_APIs_to_Migrate), this field has the value of the subscription creation date. * For a subscription changed by an amendment, this field has the value of the amendment booking date. * For a subscription created or changed by an order, this field has the value of the order date.   # noqa: E501

        :return: The last_booking_date of this GetSubscriptionResponse.  # noqa: E501
        :rtype: date
        """
        return self._last_booking_date

    @last_booking_date.setter
    def last_booking_date(self, last_booking_date):
        """Sets the last_booking_date of this GetSubscriptionResponse.

        The last booking date of the subscription object. This field is writable only when the subscription is newly created as a first version subscription. You can override the date value when creating a subscription through the Subscribe and Amend API or the subscription creation UI (non-Orders). Otherwise, the default value `today` is set per the user's timezone. The value of this field is as follows: * For a new subscription created by the [Subscribe and Amend APIs](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization/Orders_Migration_Guidance#Subscribe_and_Amend_APIs_to_Migrate), this field has the value of the subscription creation date. * For a subscription changed by an amendment, this field has the value of the amendment booking date. * For a subscription created or changed by an order, this field has the value of the order date.   # noqa: E501

        :param last_booking_date: The last_booking_date of this GetSubscriptionResponse.  # noqa: E501
        :type: date
        """

        self._last_booking_date = last_booking_date

    @property
    def notes(self):
        """Gets the notes of this GetSubscriptionResponse.  # noqa: E501

        A string of up to 65,535 characters.   # noqa: E501

        :return: The notes of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this GetSubscriptionResponse.

        A string of up to 65,535 characters.   # noqa: E501

        :param notes: The notes of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._notes = notes

    @property
    def order_number(self):
        """Gets the order_number of this GetSubscriptionResponse.  # noqa: E501

        The order number of the order in which the changes on the subscription are made.   **Note:** This field is only available if you have the [Order Metrics](https://knowledgecenter.zuora.com/BC_Subscription_Management/Orders/AA_Overview_of_Orders#Order_Metrics) feature enabled. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/). We will investigate your use cases and data before enabling this feature for you.   # noqa: E501

        :return: The order_number of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._order_number

    @order_number.setter
    def order_number(self, order_number):
        """Sets the order_number of this GetSubscriptionResponse.

        The order number of the order in which the changes on the subscription are made.   **Note:** This field is only available if you have the [Order Metrics](https://knowledgecenter.zuora.com/BC_Subscription_Management/Orders/AA_Overview_of_Orders#Order_Metrics) feature enabled. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/). We will investigate your use cases and data before enabling this feature for you.   # noqa: E501

        :param order_number: The order_number of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._order_number = order_number

    @property
    def payment_term(self):
        """Gets the payment_term of this GetSubscriptionResponse.  # noqa: E501

        The name of the payment term associated with the subscription. For example, `Net 30`. The payment term determines the due dates of invoices.  **Note**:    - If you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature disabled, this field is unavailable in the request body and the value of this field is `null` in the response body.    - If you have the Flexible Billing Attributes feature enabled, and you do not specify this field in the request or you select **Default Term from Account** for this field during subscription creation, the value of this field is automatically set to `null` in the response body.   # noqa: E501

        :return: The payment_term of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._payment_term

    @payment_term.setter
    def payment_term(self, payment_term):
        """Sets the payment_term of this GetSubscriptionResponse.

        The name of the payment term associated with the subscription. For example, `Net 30`. The payment term determines the due dates of invoices.  **Note**:    - If you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature disabled, this field is unavailable in the request body and the value of this field is `null` in the response body.    - If you have the Flexible Billing Attributes feature enabled, and you do not specify this field in the request or you select **Default Term from Account** for this field during subscription creation, the value of this field is automatically set to `null` in the response body.   # noqa: E501

        :param payment_term: The payment_term of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._payment_term = payment_term

    @property
    def rate_plans(self):
        """Gets the rate_plans of this GetSubscriptionResponse.  # noqa: E501

        Container for rate plans.   # noqa: E501

        :return: The rate_plans of this GetSubscriptionResponse.  # noqa: E501
        :rtype: list[SubscriptionRatePlan]
        """
        return self._rate_plans

    @rate_plans.setter
    def rate_plans(self, rate_plans):
        """Sets the rate_plans of this GetSubscriptionResponse.

        Container for rate plans.   # noqa: E501

        :param rate_plans: The rate_plans of this GetSubscriptionResponse.  # noqa: E501
        :type: list[SubscriptionRatePlan]
        """

        self._rate_plans = rate_plans

    @property
    def renewal_setting(self):
        """Gets the renewal_setting of this GetSubscriptionResponse.  # noqa: E501

        Specifies whether a termed subscription will remain `TERMED` or change to `EVERGREEN` when it is renewed.   Values are:  * `RENEW_WITH_SPECIFIC_TERM` (default) * `RENEW_TO_EVERGREEN`   # noqa: E501

        :return: The renewal_setting of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._renewal_setting

    @renewal_setting.setter
    def renewal_setting(self, renewal_setting):
        """Sets the renewal_setting of this GetSubscriptionResponse.

        Specifies whether a termed subscription will remain `TERMED` or change to `EVERGREEN` when it is renewed.   Values are:  * `RENEW_WITH_SPECIFIC_TERM` (default) * `RENEW_TO_EVERGREEN`   # noqa: E501

        :param renewal_setting: The renewal_setting of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._renewal_setting = renewal_setting

    @property
    def renewal_term(self):
        """Gets the renewal_term of this GetSubscriptionResponse.  # noqa: E501

        The length of the period for the subscription renewal term.   # noqa: E501

        :return: The renewal_term of this GetSubscriptionResponse.  # noqa: E501
        :rtype: int
        """
        return self._renewal_term

    @renewal_term.setter
    def renewal_term(self, renewal_term):
        """Sets the renewal_term of this GetSubscriptionResponse.

        The length of the period for the subscription renewal term.   # noqa: E501

        :param renewal_term: The renewal_term of this GetSubscriptionResponse.  # noqa: E501
        :type: int
        """

        self._renewal_term = renewal_term

    @property
    def renewal_term_period_type(self):
        """Gets the renewal_term_period_type of this GetSubscriptionResponse.  # noqa: E501


        :return: The renewal_term_period_type of this GetSubscriptionResponse.  # noqa: E501
        :rtype: TermPeriodType
        """
        return self._renewal_term_period_type

    @renewal_term_period_type.setter
    def renewal_term_period_type(self, renewal_term_period_type):
        """Sets the renewal_term_period_type of this GetSubscriptionResponse.


        :param renewal_term_period_type: The renewal_term_period_type of this GetSubscriptionResponse.  # noqa: E501
        :type: TermPeriodType
        """

        self._renewal_term_period_type = renewal_term_period_type

    @property
    def revision(self):
        """Gets the revision of this GetSubscriptionResponse.  # noqa: E501

        An auto-generated decimal value uniquely tagged with a subscription. The value always contains one decimal place, for example, the revision of a new subscription is 1.0. If a further version of the subscription is created, the revision value will be increased by 1. Also, the revision value is always incremental regardless of deletion of subscription versions.   # noqa: E501

        :return: The revision of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this GetSubscriptionResponse.

        An auto-generated decimal value uniquely tagged with a subscription. The value always contains one decimal place, for example, the revision of a new subscription is 1.0. If a further version of the subscription is created, the revision value will be increased by 1. Also, the revision value is always incremental regardless of deletion of subscription versions.   # noqa: E501

        :param revision: The revision of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._revision = revision

    @property
    def sequence_set_id(self):
        """Gets the sequence_set_id of this GetSubscriptionResponse.  # noqa: E501

        The ID of the sequence set associated with the subscription.  **Note**:    - If you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature disabled, this field is unavailable in the request body and the value of this field is `null` in the response body.    - If you have the Flexible Billing Attributes feature enabled, and you do not specify this field in the request or you select **Default Set from Account** for this field during subscription creation, the value of this field is automatically set to `null` in the response body.   # noqa: E501

        :return: The sequence_set_id of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._sequence_set_id

    @sequence_set_id.setter
    def sequence_set_id(self, sequence_set_id):
        """Sets the sequence_set_id of this GetSubscriptionResponse.

        The ID of the sequence set associated with the subscription.  **Note**:    - If you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature disabled, this field is unavailable in the request body and the value of this field is `null` in the response body.    - If you have the Flexible Billing Attributes feature enabled, and you do not specify this field in the request or you select **Default Set from Account** for this field during subscription creation, the value of this field is automatically set to `null` in the response body.   # noqa: E501

        :param sequence_set_id: The sequence_set_id of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._sequence_set_id = sequence_set_id

    @property
    def sequence_set_name(self):
        """Gets the sequence_set_name of this GetSubscriptionResponse.  # noqa: E501

        The name of the sequence set associated with the subscription.  **Note**:    - If you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature disabled, the value of this field is `null` in the response body.    - If you have the Flexible Billing Attributes feature enabled, and you do not specify the `sequenceSetId` field in the request or you select **Default Template from Account** for the `sequenceSetId` field during subscription creation, the value of the `sequenceSetName` field is automatically set to `null` in the response body.   # noqa: E501

        :return: The sequence_set_name of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._sequence_set_name

    @sequence_set_name.setter
    def sequence_set_name(self, sequence_set_name):
        """Sets the sequence_set_name of this GetSubscriptionResponse.

        The name of the sequence set associated with the subscription.  **Note**:    - If you have the <a href=\"https://knowledgecenter.zuora.com/Zuora_Billing/Bill_your_customers/Bill_customers_at_subscription_level/Flexible_Billing_Attributes\" target=\"_blank\">Flexible Billing Attributes</a> feature disabled, the value of this field is `null` in the response body.    - If you have the Flexible Billing Attributes feature enabled, and you do not specify the `sequenceSetId` field in the request or you select **Default Template from Account** for the `sequenceSetId` field during subscription creation, the value of the `sequenceSetName` field is automatically set to `null` in the response body.   # noqa: E501

        :param sequence_set_name: The sequence_set_name of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._sequence_set_name = sequence_set_name

    @property
    def service_activation_date(self):
        """Gets the service_activation_date of this GetSubscriptionResponse.  # noqa: E501

        The date on which the services or products within a subscription have been activated and access has been provided to the customer, as yyyy-mm-dd   # noqa: E501

        :return: The service_activation_date of this GetSubscriptionResponse.  # noqa: E501
        :rtype: date
        """
        return self._service_activation_date

    @service_activation_date.setter
    def service_activation_date(self, service_activation_date):
        """Sets the service_activation_date of this GetSubscriptionResponse.

        The date on which the services or products within a subscription have been activated and access has been provided to the customer, as yyyy-mm-dd   # noqa: E501

        :param service_activation_date: The service_activation_date of this GetSubscriptionResponse.  # noqa: E501
        :type: date
        """

        self._service_activation_date = service_activation_date

    @property
    def sold_to_contact(self):
        """Gets the sold_to_contact of this GetSubscriptionResponse.  # noqa: E501


        :return: The sold_to_contact of this GetSubscriptionResponse.  # noqa: E501
        :rtype: Contact
        """
        return self._sold_to_contact

    @sold_to_contact.setter
    def sold_to_contact(self, sold_to_contact):
        """Sets the sold_to_contact of this GetSubscriptionResponse.


        :param sold_to_contact: The sold_to_contact of this GetSubscriptionResponse.  # noqa: E501
        :type: Contact
        """

        self._sold_to_contact = sold_to_contact

    @property
    def status(self):
        """Gets the status of this GetSubscriptionResponse.  # noqa: E501


        :return: The status of this GetSubscriptionResponse.  # noqa: E501
        :rtype: SubscriptionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetSubscriptionResponse.


        :param status: The status of this GetSubscriptionResponse.  # noqa: E501
        :type: SubscriptionStatus
        """

        self._status = status

    @property
    def status_history(self):
        """Gets the status_history of this GetSubscriptionResponse.  # noqa: E501

        Container for status history.   # noqa: E501

        :return: The status_history of this GetSubscriptionResponse.  # noqa: E501
        :rtype: list[SubscriptionStatusHistory]
        """
        return self._status_history

    @status_history.setter
    def status_history(self, status_history):
        """Sets the status_history of this GetSubscriptionResponse.

        Container for status history.   # noqa: E501

        :param status_history: The status_history of this GetSubscriptionResponse.  # noqa: E501
        :type: list[SubscriptionStatusHistory]
        """

        self._status_history = status_history

    @property
    def subscription_start_date(self):
        """Gets the subscription_start_date of this GetSubscriptionResponse.  # noqa: E501

        Date the subscription becomes effective.   # noqa: E501

        :return: The subscription_start_date of this GetSubscriptionResponse.  # noqa: E501
        :rtype: date
        """
        return self._subscription_start_date

    @subscription_start_date.setter
    def subscription_start_date(self, subscription_start_date):
        """Sets the subscription_start_date of this GetSubscriptionResponse.

        Date the subscription becomes effective.   # noqa: E501

        :param subscription_start_date: The subscription_start_date of this GetSubscriptionResponse.  # noqa: E501
        :type: date
        """

        self._subscription_start_date = subscription_start_date

    @property
    def subscription_end_date(self):
        """Gets the subscription_end_date of this GetSubscriptionResponse.  # noqa: E501

        The date when the subscription term ends, where the subscription ends at midnight the day before. For example, if the `subscriptionEndDate` is 12/31/2016, the subscriptions ends at midnight (00:00:00 hours) on 12/30/2016. This date is the same as the term end date or the cancelation date, as appropriate.   # noqa: E501

        :return: The subscription_end_date of this GetSubscriptionResponse.  # noqa: E501
        :rtype: date
        """
        return self._subscription_end_date

    @subscription_end_date.setter
    def subscription_end_date(self, subscription_end_date):
        """Sets the subscription_end_date of this GetSubscriptionResponse.

        The date when the subscription term ends, where the subscription ends at midnight the day before. For example, if the `subscriptionEndDate` is 12/31/2016, the subscriptions ends at midnight (00:00:00 hours) on 12/30/2016. This date is the same as the term end date or the cancelation date, as appropriate.   # noqa: E501

        :param subscription_end_date: The subscription_end_date of this GetSubscriptionResponse.  # noqa: E501
        :type: date
        """

        self._subscription_end_date = subscription_end_date

    @property
    def term_end_date(self):
        """Gets the term_end_date of this GetSubscriptionResponse.  # noqa: E501

        Date the subscription term ends. If the subscription is evergreen, this is null or is the cancellation date (if one has been set).   # noqa: E501

        :return: The term_end_date of this GetSubscriptionResponse.  # noqa: E501
        :rtype: date
        """
        return self._term_end_date

    @term_end_date.setter
    def term_end_date(self, term_end_date):
        """Sets the term_end_date of this GetSubscriptionResponse.

        Date the subscription term ends. If the subscription is evergreen, this is null or is the cancellation date (if one has been set).   # noqa: E501

        :param term_end_date: The term_end_date of this GetSubscriptionResponse.  # noqa: E501
        :type: date
        """

        self._term_end_date = term_end_date

    @property
    def term_start_date(self):
        """Gets the term_start_date of this GetSubscriptionResponse.  # noqa: E501

        Date the subscription term begins. If this is a renewal subscription, this date is different from the subscription start date.   # noqa: E501

        :return: The term_start_date of this GetSubscriptionResponse.  # noqa: E501
        :rtype: date
        """
        return self._term_start_date

    @term_start_date.setter
    def term_start_date(self, term_start_date):
        """Sets the term_start_date of this GetSubscriptionResponse.

        Date the subscription term begins. If this is a renewal subscription, this date is different from the subscription start date.   # noqa: E501

        :param term_start_date: The term_start_date of this GetSubscriptionResponse.  # noqa: E501
        :type: date
        """

        self._term_start_date = term_start_date

    @property
    def term_type(self):
        """Gets the term_type of this GetSubscriptionResponse.  # noqa: E501

        Possible values are: `TERMED`, `EVERGREEN`.   # noqa: E501

        :return: The term_type of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._term_type

    @term_type.setter
    def term_type(self, term_type):
        """Sets the term_type of this GetSubscriptionResponse.

        Possible values are: `TERMED`, `EVERGREEN`.   # noqa: E501

        :param term_type: The term_type of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._term_type = term_type

    @property
    def total_contracted_value(self):
        """Gets the total_contracted_value of this GetSubscriptionResponse.  # noqa: E501

        Total contracted value of the subscription.   # noqa: E501

        :return: The total_contracted_value of this GetSubscriptionResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_contracted_value

    @total_contracted_value.setter
    def total_contracted_value(self, total_contracted_value):
        """Sets the total_contracted_value of this GetSubscriptionResponse.

        Total contracted value of the subscription.   # noqa: E501

        :param total_contracted_value: The total_contracted_value of this GetSubscriptionResponse.  # noqa: E501
        :type: float
        """

        self._total_contracted_value = total_contracted_value

    @property
    def version(self):
        """Gets the version of this GetSubscriptionResponse.  # noqa: E501

        This is the subscription version automatically generated by Zuora Billing. Each order or amendment creates a new version of the subscription, which incorporates the changes made in the order or amendment.  # noqa: E501

        :return: The version of this GetSubscriptionResponse.  # noqa: E501
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GetSubscriptionResponse.

        This is the subscription version automatically generated by Zuora Billing. Each order or amendment creates a new version of the subscription, which incorporates the changes made in the order or amendment.  # noqa: E501

        :param version: The version of this GetSubscriptionResponse.  # noqa: E501
        :type: int
        """

        self._version = version

    @property
    def contracted_net_mrr(self):
        """Gets the contracted_net_mrr of this GetSubscriptionResponse.  # noqa: E501

        Monthly recurring revenue of the subscription inclusive of all the discounts applicable, including the fixed-amount discounts and percentage discounts.   # noqa: E501

        :return: The contracted_net_mrr of this GetSubscriptionResponse.  # noqa: E501
        :rtype: float
        """
        return self._contracted_net_mrr

    @contracted_net_mrr.setter
    def contracted_net_mrr(self, contracted_net_mrr):
        """Sets the contracted_net_mrr of this GetSubscriptionResponse.

        Monthly recurring revenue of the subscription inclusive of all the discounts applicable, including the fixed-amount discounts and percentage discounts.   # noqa: E501

        :param contracted_net_mrr: The contracted_net_mrr of this GetSubscriptionResponse.  # noqa: E501
        :type: float
        """

        self._contracted_net_mrr = contracted_net_mrr

    @property
    def as_of_day_gross_mrr(self):
        """Gets the as_of_day_gross_mrr of this GetSubscriptionResponse.  # noqa: E501

        Monthly recurring revenue of the subscription exclusive of any discounts applicable as of specified day.   # noqa: E501

        :return: The as_of_day_gross_mrr of this GetSubscriptionResponse.  # noqa: E501
        :rtype: float
        """
        return self._as_of_day_gross_mrr

    @as_of_day_gross_mrr.setter
    def as_of_day_gross_mrr(self, as_of_day_gross_mrr):
        """Sets the as_of_day_gross_mrr of this GetSubscriptionResponse.

        Monthly recurring revenue of the subscription exclusive of any discounts applicable as of specified day.   # noqa: E501

        :param as_of_day_gross_mrr: The as_of_day_gross_mrr of this GetSubscriptionResponse.  # noqa: E501
        :type: float
        """

        self._as_of_day_gross_mrr = as_of_day_gross_mrr

    @property
    def as_of_day_net_mrr(self):
        """Gets the as_of_day_net_mrr of this GetSubscriptionResponse.  # noqa: E501

        Monthly recurring revenue of the subscription inclusive of all the discounts applicable, including the fixed-amount discounts and percentage discounts as of specified day.   # noqa: E501

        :return: The as_of_day_net_mrr of this GetSubscriptionResponse.  # noqa: E501
        :rtype: float
        """
        return self._as_of_day_net_mrr

    @as_of_day_net_mrr.setter
    def as_of_day_net_mrr(self, as_of_day_net_mrr):
        """Sets the as_of_day_net_mrr of this GetSubscriptionResponse.

        Monthly recurring revenue of the subscription inclusive of all the discounts applicable, including the fixed-amount discounts and percentage discounts as of specified day.   # noqa: E501

        :param as_of_day_net_mrr: The as_of_day_net_mrr of this GetSubscriptionResponse.  # noqa: E501
        :type: float
        """

        self._as_of_day_net_mrr = as_of_day_net_mrr

    @property
    def account_owner_details(self):
        """Gets the account_owner_details of this GetSubscriptionResponse.  # noqa: E501


        :return: The account_owner_details of this GetSubscriptionResponse.  # noqa: E501
        :rtype: AccountBasicInfo
        """
        return self._account_owner_details

    @account_owner_details.setter
    def account_owner_details(self, account_owner_details):
        """Sets the account_owner_details of this GetSubscriptionResponse.


        :param account_owner_details: The account_owner_details of this GetSubscriptionResponse.  # noqa: E501
        :type: AccountBasicInfo
        """

        self._account_owner_details = account_owner_details

    @property
    def invoice_owner_account_details(self):
        """Gets the invoice_owner_account_details of this GetSubscriptionResponse.  # noqa: E501


        :return: The invoice_owner_account_details of this GetSubscriptionResponse.  # noqa: E501
        :rtype: AccountBasicInfo
        """
        return self._invoice_owner_account_details

    @invoice_owner_account_details.setter
    def invoice_owner_account_details(self, invoice_owner_account_details):
        """Sets the invoice_owner_account_details of this GetSubscriptionResponse.


        :param invoice_owner_account_details: The invoice_owner_account_details of this GetSubscriptionResponse.  # noqa: E501
        :type: AccountBasicInfo
        """

        self._invoice_owner_account_details = invoice_owner_account_details

    @property
    def cpq_bundle_json_id__qt(self):
        """Gets the cpq_bundle_json_id__qt of this GetSubscriptionResponse.  # noqa: E501

        The Bundle product structures from Zuora Quotes if you utilize Bundling in Salesforce. Do not change the value in this field.   # noqa: E501

        :return: The cpq_bundle_json_id__qt of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._cpq_bundle_json_id__qt

    @cpq_bundle_json_id__qt.setter
    def cpq_bundle_json_id__qt(self, cpq_bundle_json_id__qt):
        """Sets the cpq_bundle_json_id__qt of this GetSubscriptionResponse.

        The Bundle product structures from Zuora Quotes if you utilize Bundling in Salesforce. Do not change the value in this field.   # noqa: E501

        :param cpq_bundle_json_id__qt: The cpq_bundle_json_id__qt of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._cpq_bundle_json_id__qt = cpq_bundle_json_id__qt

    @property
    def opportunity_close_date__qt(self):
        """Gets the opportunity_close_date__qt of this GetSubscriptionResponse.  # noqa: E501

        The closing date of the Opportunity. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :return: The opportunity_close_date__qt of this GetSubscriptionResponse.  # noqa: E501
        :rtype: date
        """
        return self._opportunity_close_date__qt

    @opportunity_close_date__qt.setter
    def opportunity_close_date__qt(self, opportunity_close_date__qt):
        """Sets the opportunity_close_date__qt of this GetSubscriptionResponse.

        The closing date of the Opportunity. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :param opportunity_close_date__qt: The opportunity_close_date__qt of this GetSubscriptionResponse.  # noqa: E501
        :type: date
        """

        self._opportunity_close_date__qt = opportunity_close_date__qt

    @property
    def opportunity_name__qt(self):
        """Gets the opportunity_name__qt of this GetSubscriptionResponse.  # noqa: E501

        The unique identifier of the Opportunity. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :return: The opportunity_name__qt of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._opportunity_name__qt

    @opportunity_name__qt.setter
    def opportunity_name__qt(self, opportunity_name__qt):
        """Sets the opportunity_name__qt of this GetSubscriptionResponse.

        The unique identifier of the Opportunity. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :param opportunity_name__qt: The opportunity_name__qt of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._opportunity_name__qt = opportunity_name__qt

    @property
    def quote_business_type__qt(self):
        """Gets the quote_business_type__qt of this GetSubscriptionResponse.  # noqa: E501

        The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal or Churn. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :return: The quote_business_type__qt of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._quote_business_type__qt

    @quote_business_type__qt.setter
    def quote_business_type__qt(self, quote_business_type__qt):
        """Sets the quote_business_type__qt of this GetSubscriptionResponse.

        The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal or Churn. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :param quote_business_type__qt: The quote_business_type__qt of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._quote_business_type__qt = quote_business_type__qt

    @property
    def quote_number__qt(self):
        """Gets the quote_number__qt of this GetSubscriptionResponse.  # noqa: E501

        The unique identifier of the Quote. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :return: The quote_number__qt of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._quote_number__qt

    @quote_number__qt.setter
    def quote_number__qt(self, quote_number__qt):
        """Sets the quote_number__qt of this GetSubscriptionResponse.

        The unique identifier of the Quote. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :param quote_number__qt: The quote_number__qt of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._quote_number__qt = quote_number__qt

    @property
    def quote_type__qt(self):
        """Gets the quote_type__qt of this GetSubscriptionResponse.  # noqa: E501

        The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :return: The quote_type__qt of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._quote_type__qt

    @quote_type__qt.setter
    def quote_type__qt(self, quote_type__qt):
        """Sets the quote_type__qt of this GetSubscriptionResponse.

        The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.   # noqa: E501

        :param quote_type__qt: The quote_type__qt of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._quote_type__qt = quote_type__qt

    @property
    def integration_id__ns(self):
        """Gets the integration_id__ns of this GetSubscriptionResponse.  # noqa: E501

        ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :return: The integration_id__ns of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._integration_id__ns

    @integration_id__ns.setter
    def integration_id__ns(self, integration_id__ns):
        """Sets the integration_id__ns of this GetSubscriptionResponse.

        ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :param integration_id__ns: The integration_id__ns of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._integration_id__ns = integration_id__ns

    @property
    def integration_status__ns(self):
        """Gets the integration_status__ns of this GetSubscriptionResponse.  # noqa: E501

        Status of the subscription's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :return: The integration_status__ns of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._integration_status__ns

    @integration_status__ns.setter
    def integration_status__ns(self, integration_status__ns):
        """Sets the integration_status__ns of this GetSubscriptionResponse.

        Status of the subscription's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :param integration_status__ns: The integration_status__ns of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._integration_status__ns = integration_status__ns

    @property
    def project__ns(self):
        """Gets the project__ns of this GetSubscriptionResponse.  # noqa: E501

        The NetSuite project that the subscription was created from. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :return: The project__ns of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._project__ns

    @project__ns.setter
    def project__ns(self, project__ns):
        """Sets the project__ns of this GetSubscriptionResponse.

        The NetSuite project that the subscription was created from. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :param project__ns: The project__ns of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._project__ns = project__ns

    @property
    def sales_order__ns(self):
        """Gets the sales_order__ns of this GetSubscriptionResponse.  # noqa: E501

        The NetSuite sales order than the subscription was created from. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :return: The sales_order__ns of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._sales_order__ns

    @sales_order__ns.setter
    def sales_order__ns(self, sales_order__ns):
        """Sets the sales_order__ns of this GetSubscriptionResponse.

        The NetSuite sales order than the subscription was created from. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :param sales_order__ns: The sales_order__ns of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._sales_order__ns = sales_order__ns

    @property
    def sync_date__ns(self):
        """Gets the sync_date__ns of this GetSubscriptionResponse.  # noqa: E501

        Date when the subscription was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :return: The sync_date__ns of this GetSubscriptionResponse.  # noqa: E501
        :rtype: str
        """
        return self._sync_date__ns

    @sync_date__ns.setter
    def sync_date__ns(self, sync_date__ns):
        """Sets the sync_date__ns of this GetSubscriptionResponse.

        Date when the subscription was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).   # noqa: E501

        :param sync_date__ns: The sync_date__ns of this GetSubscriptionResponse.  # noqa: E501
        :type: str
        """

        self._sync_date__ns = sync_date__ns

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetSubscriptionResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetSubscriptionResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
